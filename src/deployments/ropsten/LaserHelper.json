{
  "address": "0x76a868De18A30e51431f0c8Dfe8Af80EfaFBE0dA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "SSRModule",
          "type": "address"
        }
      ],
      "name": "getWalletState",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "singleton",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isLocked",
          "type": "bool"
        },
        {
          "internalType": "address[]",
          "name": "guardians",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "recoveryOwners",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeLock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x767301b33de0ce3dd82b5d33b93614e7cdaf5802d8158fc8e7c95f9dae7964bd",
  "receipt": {
    "to": null,
    "from": "0x7681C78fb672024C8ACce686cc9A7Acf7F07640d",
    "contractAddress": "0x76a868De18A30e51431f0c8Dfe8Af80EfaFBE0dA",
    "transactionIndex": 7,
    "gasUsed": "380555",
    "logsBloom": "0x
    "blockHash": "0xa6bd01dcaeb887857c619a8e44e0390fdce70bc65cea67dc2d1f60398575db72",
    "transactionHash": "0x767301b33de0ce3dd82b5d33b93614e7cdaf5802d8158fc8e7c95f9dae7964bd",
    "logs": [],
    "blockNumber": 12783093,
    "cumulativeGasUsed": "1302361",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "de78a7bd8420c51032966958e96a675c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"SSRModule\",\"type\":\"address\"}],\"name\":\"getWalletState\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"guardians\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"recoveryOwners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeLock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getWalletState(address,address)\":{\"details\":\"Returns the wallet state + SSR module.\"}},\"title\":\"LaserHelper - Helper contract that outputs multiple results in a single call.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helper/LaserHelper.sol\":\"LaserHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/helper/LaserHelper.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\nimport \\\"../interfaces/ILaserModuleSSR.sol\\\";\\nimport \\\"../interfaces/ILaserState.sol\\\";\\n\\n///@title LaserHelper - Helper contract that outputs multiple results in a single call.\\ncontract LaserHelper {\\n    ///@dev Returns the wallet state + SSR module.\\n    function getWalletState(address wallet, address SSRModule)\\n        external\\n        view\\n        returns (\\n            address owner,\\n            address singleton,\\n            bool isLocked,\\n            address[] memory guardians,\\n            address[] memory recoveryOwners,\\n            uint256 nonce,\\n            uint256 balance,\\n            uint256 timeLock\\n        )\\n    {\\n        ILaserState laser = ILaserState(wallet);\\n        ILaserModuleSSR ssr = ILaserModuleSSR(SSRModule);\\n        owner = laser.owner();\\n        singleton = laser.singleton();\\n        isLocked = laser.isLocked();\\n        guardians = ssr.getGuardians(wallet);\\n        recoveryOwners = ssr.getRecoveryOwners(wallet);\\n        nonce = laser.nonce();\\n        balance = address(wallet).balance;\\n        timeLock = ssr.getWalletTimeLock(wallet);\\n    }\\n}\\n\",\"keccak256\":\"0xa4997617e5f705518c73531efa2f5c24fb1c3b3110bd79e00c1a6a89520f8b49\",\"license\":\"LGPL-3.0-only\"},\"contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.15;\\n\\n/**\\n * @title IERC165\\n * @notice Support of ERC165.\\n */\\ninterface IERC165 {\\n    /**\\n     * @notice Query if a contract implements an interface\\n     * @param interfaceID The interface identifier, as specified in ERC-165\\n     * @dev Interface identification is specified in ERC-165. This function\\n     * uses less than 30,000 gas.\\n     * @return `true` if the contract implements `interfaceID` and\\n     * interfaceID` is not 0xffffffff, `false` otherwise\\n     */\\n    function supportsInterface(bytes4 interfaceID) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xdf3ddac29884e2c1f2d2fd322bacd6a6907721d3e0909af74cdedeac5c38a9f4\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ILaserModuleSSR.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\ninterface ILaserModuleSSR {\\n    error SSR__onlyWallet__notWallet();\\n\\n    error SSR__initGuardians__underflow();\\n\\n    error SSR__initRecoveryOwners__underflow();\\n\\n    error SSR__verifyNewRecoveryOwnerOrGuardian__invalidAddress();\\n\\n    ///@dev removeGuardian() custom errors.\\n    error SSR__removeGuardian__underflow();\\n    error SSR__removeGuardian__invalidAddress();\\n    error SSR__removeGuardian__incorrectPreviousGuardian();\\n\\n    ///@dev removeRecoveryOwner() custom errors.\\n    error SSR__removeRecoveryOwner__underflow();\\n    error SSR__removeRecoveryOwner__invalidAddress();\\n    error SSR__removeRecoveryOwner__incorrectPreviousRecoveryOwner();\\n\\n    ///@dev swapGuardian() custom errors.\\n    error SSR__swapGuardian__invalidPrevGuardian();\\n    error SSR__swapGuardian__invalidOldGuardian();\\n\\n    ///@dev swapRecoveryOwner() custom errors.\\n    error SSR__swapRecoveryOwner__invalidPrevRecoveryOwner();\\n    error SSR__swapRecoveryOwner__invalidOldRecoveryOwner();\\n\\n    ///@dev Inits the module.\\n    ///@notice The target wallet is the 'msg.sender'.\\n    function initSSR(address[] calldata _guardians, address[] calldata _recoveryOwners) external;\\n\\n    function lock(\\n        address wallet,\\n        bytes calldata callData,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit,\\n        address relayer,\\n        bytes memory signatures\\n    ) external;\\n\\n    /**\\n     * @dev Unlocks the target wallet.\\n     * @notice Can only be called with the signature of the wallet's owner + recovery owner or  owner + guardian.\\n     */\\n    function unlock(\\n        address wallet,\\n        bytes calldata callData,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit,\\n        address relayer,\\n        bytes memory signatures\\n    ) external;\\n\\n    function recover(\\n        address wallet,\\n        bytes calldata callData,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit,\\n        address relayer,\\n        bytes memory signatures\\n    ) external;\\n\\n    ///@dev Returns the chain id of this.\\n    function getChainId() external view returns (uint256 chainId);\\n\\n    function getGuardians(address wallet) external view returns (address[] memory);\\n\\n    function getRecoveryOwners(address wallet) external view returns (address[] memory);\\n\\n    function getWalletTimeLock(address wallet) external view returns (uint256);\\n\\n    function isGuardian(address wallet, address guardian) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x93a5d48b10d7d44caf79130296d2e411d0cf5bd47481cc89c4d9826c9e9273be\",\"license\":\"LGPL-3.0-only\"},\"contracts/interfaces/ILaserState.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\ninterface ILaserState {\\n    ///@dev upgradeSingleton() custom error.\\n    error LaserState__upgradeSingleton__notLaser();\\n\\n    ///@dev initOwner() custom errors.\\n    error LaserState__initOwner__walletInitialized();\\n    error LaserState__initOwner__invalidAddress();\\n\\n    function singleton() external view returns (address);\\n\\n    function owner() external view returns (address);\\n\\n    function laserMasterGuard() external view returns (address);\\n\\n    function laserRegistry() external view returns (address);\\n\\n    function isLocked() external view returns (bool);\\n\\n    function nonce() external view returns (uint256);\\n\\n    ///@notice Restricted, can only be called by the wallet or module.\\n    function changeOwner(address newOwner) external;\\n\\n    ///@notice Restricted, can only be called by the wallet.\\n    function addLaserModule(address newModule) external;\\n}\\n\",\"keccak256\":\"0xbd6b60c41c935f3b1384ef26a5002c9c6a0d46b75ff234b60dee66f1049f2467\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506105ec806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631ca1f41b14610030575b600080fd5b61004361003e366004610385565b610060565b604051610057989796959493929190610402565b60405180910390f35b60008060006060806000806000808a905060008a9050816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d8919061047c565b9950816001600160a01b031663b62654fb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610118573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013c919061047c565b9850816001600160a01b031663a4e2d6346040518163ffffffff1660e01b8152600401602060405180830381865afa15801561017c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a091906104a0565b60405163f18858ab60e01b81526001600160a01b038e811660048301529199509082169063f18858ab90602401600060405180830381865afa1580156101ea573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261021291908101906104d8565b6040516339405f5f60e21b81526001600160a01b038e811660048301529198509082169063e5017d7c90602401600060405180830381865afa15801561025c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261028491908101906104d8565b9550816001600160a01b031663affed0e06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e8919061059d565b604051633e0eb59760e01b81526001600160a01b038e8116600483018190529297509131955090821690633e0eb59790602401602060405180830381865afa158015610338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035c919061059d565b925050509295985092959890939650565b6001600160a01b038116811461038257600080fd5b50565b6000806040838503121561039857600080fd5b82356103a38161036d565b915060208301356103b38161036d565b809150509250929050565b600081518084526020808501945080840160005b838110156103f75781516001600160a01b0316875295820195908201906001016103d2565b509495945050505050565b60006101006001600160a01b03808c168452808b166020850152508815156040840152806060840152610437818401896103be565b9050828103608084015261044b81886103be565b60a0840196909652505060c081019290925260e09091015295945050505050565b80516104778161036d565b919050565b60006020828403121561048e57600080fd5b81516104998161036d565b9392505050565b6000602082840312156104b257600080fd5b8151801515811461049957600080fd5b634e487b7160e01b600052604160045260246000fd5b600060208083850312156104eb57600080fd5b825167ffffffffffffffff8082111561050357600080fd5b818501915085601f83011261051757600080fd5b815181811115610529576105296104c2565b8060051b604051601f19603f8301168101818110858211171561054e5761054e6104c2565b60405291825284820192508381018501918883111561056c57600080fd5b938501935b82851015610591576105828561046c565b84529385019392850192610571565b98975050505050505050565b6000602082840312156105af57600080fd5b505191905056fea2646970667358221220b83e87d403ae12663554c43418877836e652455f5cf5a776d4574b4b1b3addcd64736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80631ca1f41b14610030575b600080fd5b61004361003e366004610385565b610060565b604051610057989796959493929190610402565b60405180910390f35b60008060006060806000806000808a905060008a9050816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d8919061047c565b9950816001600160a01b031663b62654fb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610118573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013c919061047c565b9850816001600160a01b031663a4e2d6346040518163ffffffff1660e01b8152600401602060405180830381865afa15801561017c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a091906104a0565b60405163f18858ab60e01b81526001600160a01b038e811660048301529199509082169063f18858ab90602401600060405180830381865afa1580156101ea573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261021291908101906104d8565b6040516339405f5f60e21b81526001600160a01b038e811660048301529198509082169063e5017d7c90602401600060405180830381865afa15801561025c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261028491908101906104d8565b9550816001600160a01b031663affed0e06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e8919061059d565b604051633e0eb59760e01b81526001600160a01b038e8116600483018190529297509131955090821690633e0eb59790602401602060405180830381865afa158015610338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035c919061059d565b925050509295985092959890939650565b6001600160a01b038116811461038257600080fd5b50565b6000806040838503121561039857600080fd5b82356103a38161036d565b915060208301356103b38161036d565b809150509250929050565b600081518084526020808501945080840160005b838110156103f75781516001600160a01b0316875295820195908201906001016103d2565b509495945050505050565b60006101006001600160a01b03808c168452808b166020850152508815156040840152806060840152610437818401896103be565b9050828103608084015261044b81886103be565b60a0840196909652505060c081019290925260e09091015295945050505050565b80516104778161036d565b919050565b60006020828403121561048e57600080fd5b81516104998161036d565b9392505050565b6000602082840312156104b257600080fd5b8151801515811461049957600080fd5b634e487b7160e01b600052604160045260246000fd5b600060208083850312156104eb57600080fd5b825167ffffffffffffffff8082111561050357600080fd5b818501915085601f83011261051757600080fd5b815181811115610529576105296104c2565b8060051b604051601f19603f8301168101818110858211171561054e5761054e6104c2565b60405291825284820192508381018501918883111561056c57600080fd5b938501935b82851015610591576105828561046c565b84529385019392850192610571565b98975050505050505050565b6000602082840312156105af57600080fd5b505191905056fea2646970667358221220b83e87d403ae12663554c43418877836e652455f5cf5a776d4574b4b1b3addcd64736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getWalletState(address,address)": {
        "details": "Returns the wallet state + SSR module."
      }
    },
    "title": "LaserHelper - Helper contract that outputs multiple results in a single call.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}