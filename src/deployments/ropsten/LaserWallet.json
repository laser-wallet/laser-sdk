{
  "address": "0xc811faBA15608F4daBDaAbdd84625177e5D02f8a",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Access__notAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__exec__invalidNonce",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__exec__notOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__exec__refundFailure",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__exec__walletLocked",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__init__notOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__init__refundFailure",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LaserState__initOwner__addressWithCode",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LaserState__initOwner__walletInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LaserState__upgradeSingleton__notLaser",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LaserWallet__invalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Utils__returnSigner__invalidContractSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Utils__returnSigner__invalidSignature",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "ExecFailure",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "ExecSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "laserModule",
          "type": "address"
        }
      ],
      "name": "Setup",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newModule",
          "type": "address"
        }
      ],
      "name": "addLaserModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newLaserGuard",
          "type": "address"
        }
      ],
      "name": "changeLaserGuard",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPriorityFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "ownerSignature",
          "type": "bytes"
        }
      ],
      "name": "exec",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "maxFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPriorityFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        }
      ],
      "name": "execFromModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPriorityFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "laserModule",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "laserModuleData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "ownerSignature",
          "type": "bytes"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "laserGuard",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "result",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPriorityFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        }
      ],
      "name": "operationHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "singleton",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "tokensReceived",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_singleton",
          "type": "address"
        }
      ],
      "name": "upgradeSingleton",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4d68784e7183957b8a7fa11796e4e17f6c7ff59af68c103b3a93643e2d8195ba",
  "receipt": {
    "to": null,
    "from": "0x0cf5C6d3c1122504091EAd6a3Dc5BD31f7BbeDE3",
    "contractAddress": "0xc811faBA15608F4daBDaAbdd84625177e5D02f8a",
    "transactionIndex": 0,
    "gasUsed": "1672991",
    "logsBloom": "0x
    "blockHash": "0x2d6f1eac4be03f907e8855d85f6fae254203693e64edf6e394eaf3dd5edf9831",
    "transactionHash": "0x4d68784e7183957b8a7fa11796e4e17f6c7ff59af68c103b3a93643e2d8195ba",
    "logs": [],
    "blockNumber": 12683195,
    "cumulativeGasUsed": "1672991",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "7a95abf8dc66cc4df84eb6056d0aa0f7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Access__notAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__exec__invalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__exec__notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__exec__refundFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__exec__walletLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__init__notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__init__refundFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LaserState__initOwner__addressWithCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LaserState__initOwner__walletInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LaserState__upgradeSingleton__notLaser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LaserWallet__invalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Utils__returnSigner__invalidContractSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Utils__returnSigner__invalidSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"ExecFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"ExecSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"laserModule\",\"type\":\"address\"}],\"name\":\"Setup\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newModule\",\"type\":\"address\"}],\"name\":\"addLaserModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newLaserGuard\",\"type\":\"address\"}],\"name\":\"changeLaserGuard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ownerSignature\",\"type\":\"bytes\"}],\"name\":\"exec\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"execFromModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"laserModule\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"laserModuleData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ownerSignature\",\"type\":\"bytes\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"laserGuard\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"result\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"operationHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"singleton\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"}],\"name\":\"upgradeSingleton\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Rodrigo Herrera I.\",\"errors\":{\"LW__exec__invalidNonce()\":[{\"details\":\"exec() custom errors.\"}],\"LW__init__notOwner()\":[{\"details\":\"init() custom error.\"}],\"LaserState__initOwner__walletInitialized()\":[{\"details\":\"initOwner() custom error.\"}],\"LaserState__upgradeSingleton__notLaser()\":[{\"details\":\"upgradeSingleton() custom error.\"}],\"LaserWallet__invalidSignature()\":[{\"details\":\"isValidSignature() Laser custom error.\"}]},\"kind\":\"dev\",\"methods\":{\"exec(address,uint256,bytes,uint256,uint256,uint256,uint256,address,bytes)\":{\"details\":\"Executes a generic transaction. It does not support 'delegatecall' for security reasons.\",\"params\":{\"callData\":\"Data payload for the transaction.\",\"ownerSignature\":\"The signatures of the transaction.\",\"to\":\"Destination address.\",\"value\":\"Amount to send.\"}},\"execFromModule(address,uint256,bytes,uint256,uint256,uint256,address)\":{\"details\":\"Allows to execute a transaction from an authorized module.\"},\"init(address,uint256,uint256,uint256,address,address,bytes,bytes)\":{\"details\":\"Setup function, sets initial storage of the wallet.\"},\"isValidSignature(bytes32,bytes)\":{\"details\":\"Implementation of EIP 1271: https://eips.ethereum.org/EIPS/eip-1271.\",\"returns\":{\"_0\":\"Magic value  or reverts with an error message.\"}},\"lock()\":{\"details\":\"Locks the wallet. Once locked, only the SSR module can unlock it or recover it.\"},\"unlock()\":{\"details\":\"Unlocks the wallet. Can only be unlocked or recovered from the SSR module.\"}},\"title\":\"LaserWallet - Modular EVM based smart contract wallet.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exec(address,uint256,bytes,uint256,uint256,uint256,uint256,address,bytes)\":{\"notice\":\"If 'gasLimit' does not match the actual gas limit of the transaction, the relayer can incur losses. It is the relayer's responsability to make sure that they are the same, the user does not get affected if a mistake is made. We prefer to prioritize the user's safety (not overpay) over the relayer.\"},\"init(address,uint256,uint256,uint256,address,address,bytes,bytes)\":{\"notice\":\"It can't be called after initialization.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LaserWallet.sol\":\"LaserWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/LaserWallet.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\nimport \\\"./handlers/Handler.sol\\\";\\nimport \\\"./interfaces/ILaserWallet.sol\\\";\\nimport \\\"./state/LaserState.sol\\\";\\n\\ninterface ILaserGuard {\\n    function checkTransaction(address to) external;\\n}\\n\\n///@title LaserWallet - Modular EVM based smart contract wallet.\\n///@author Rodrigo Herrera I.\\ncontract LaserWallet is ILaserWallet, LaserState, Handler {\\n    string public constant VERSION = \\\"1.0.0\\\";\\n\\n    bytes4 private constant EIP1271_MAGIC_VALUE = bytes4(keccak256(\\\"isValidSignature(bytes32,bytes)\\\"));\\n\\n    bytes32 private constant DOMAIN_SEPARATOR_TYPEHASH =\\n        keccak256(\\\"EIP712Domain(uint256 chainId,address verifyingContract)\\\");\\n\\n    bytes32 private constant LASER_TYPE_STRUCTURE =\\n        keccak256(\\n            \\\"LaserOperation(address to,uint256 value,bytes callData,uint256 nonce,uint256 maxFeePerGas,uint256 maxPriorityFeePerGas,uint256 gasLimit)\\\"\\n        );\\n\\n    constructor() {\\n        owner = address(this);\\n    }\\n\\n    receive() external payable {}\\n\\n    ///@dev Setup function, sets initial storage of the wallet.\\n    ///@notice It can't be called after initialization.\\n    function init(\\n        address _owner,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit,\\n        address relayer,\\n        address laserModule,\\n        bytes calldata laserModuleData,\\n        bytes calldata ownerSignature\\n    ) external {\\n        activateWallet(_owner, laserModule, laserModuleData);\\n\\n        bytes32 signedHash = keccak256(abi.encodePacked(maxFeePerGas, maxPriorityFeePerGas, gasLimit, block.chainid));\\n\\n        address signer = Utils.returnSigner(signedHash, ownerSignature, 0);\\n\\n        if (signer != _owner) revert LW__init__notOwner();\\n\\n        if (gasLimit > 0) {\\n            // Using infura relayer for now ...\\n            uint256 fee = (tx.gasprice / 100) * 6;\\n            uint256 gasPrice = tx.gasprice + fee;\\n\\n            gasLimit = (gasLimit * 3150) / 3200;\\n            uint256 gasUsed = gasLimit - gasleft() + 8000;\\n\\n            uint256 refundAmount = gasUsed * gasPrice;\\n\\n            bool success = Utils.call(\\n                relayer == address(0) ? tx.origin : relayer,\\n                refundAmount,\\n                new bytes(0),\\n                gasleft()\\n            );\\n\\n            if (!success) revert LW__init__refundFailure();\\n        }\\n        // emit Setup(_owner, laserModule);\\n    }\\n\\n    /**\\n     * @dev Executes a generic transaction. It does not support 'delegatecall' for security reasons.\\n     * @param to Destination address.\\n     * @param value Amount to send.\\n     * @param callData Data payload for the transaction.\\n     * @param ownerSignature The signatures of the transaction.\\n     * @notice If 'gasLimit' does not match the actual gas limit of the transaction, the relayer can incur losses.\\n     * It is the relayer's responsability to make sure that they are the same, the user does not get affected if a mistake is made.\\n     * We prefer to prioritize the user's safety (not overpay) over the relayer.\\n     */\\n    function exec(\\n        address to,\\n        uint256 value,\\n        bytes calldata callData,\\n        uint256 _nonce,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit,\\n        address relayer,\\n        bytes calldata ownerSignature\\n    ) external {\\n        // We immediately increase the nonce to avoid replay attacks.\\n        unchecked {\\n            if (nonce++ != _nonce) revert LW__exec__invalidNonce();\\n        }\\n\\n        if (isLocked) revert LW__exec__walletLocked();\\n\\n        bytes32 signedHash = keccak256(\\n            encodeOperation(to, value, callData, _nonce, maxFeePerGas, maxPriorityFeePerGas, gasLimit)\\n        );\\n\\n        address signer = Utils.returnSigner(signedHash, ownerSignature, 0);\\n\\n        if (signer != owner) revert LW__exec__notOwner();\\n\\n        bool success = Utils.call(to, value, callData, gasleft() - 10000);\\n\\n        // We do not revert the call if it fails, because the wallet needs to pay the relayer even in case of failure.\\n        if (success) emit ExecSuccess(to, value, nonce);\\n        else emit ExecFailure(to, value, nonce);\\n\\n        if (laserGuard != address(0)) {\\n            ILaserGuard(laserGuard).checkTransaction(to);\\n        }\\n\\n        // Using infura relayer for now ...\\n        uint256 fee = (tx.gasprice / 100) * 6;\\n        uint256 gasPrice = tx.gasprice + fee;\\n        uint256 gasUsed = gasLimit - gasleft() + 7000;\\n        uint256 refundAmount = gasUsed * gasPrice;\\n\\n        success = Utils.call(relayer == address(0) ? tx.origin : relayer, refundAmount, new bytes(0), gasleft());\\n\\n        if (!success) revert LW__exec__refundFailure();\\n    }\\n\\n    ///@dev Allows to execute a transaction from an authorized module.\\n    function execFromModule(\\n        address to,\\n        uint256 value,\\n        bytes calldata callData,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit,\\n        address relayer\\n    ) external {\\n        unchecked {\\n            nonce++;\\n        }\\n        ///@todo custom errors instead of require statement.\\n        require(laserModules[msg.sender] != address(0), \\\"nop module\\\");\\n\\n        bool success = Utils.call(to, value, callData, gasleft() - 10000);\\n\\n        require(success, \\\"main call failed\\\");\\n\\n        if (gasLimit > 0) {\\n            // Using infura relayer for now ...\\n            uint256 fee = (tx.gasprice / 100) * 6;\\n            uint256 gasPrice = tx.gasprice + fee;\\n            gasLimit = (gasLimit * 63) / 64;\\n            uint256 gasUsed = gasLimit - gasleft() + 7000;\\n            uint256 refundAmount = gasUsed * gasPrice;\\n\\n            success = Utils.call(relayer == address(0) ? tx.origin : relayer, refundAmount, new bytes(0), gasleft());\\n\\n            require(success, \\\"refund failed\\\");\\n        }\\n    }\\n\\n    ///@dev Locks the wallet. Once locked, only the SSR module can unlock it or recover it.\\n    function lock() external access {\\n        isLocked = true;\\n    }\\n\\n    ///@dev Unlocks the wallet. Can only be unlocked or recovered from the SSR module.\\n    function unlock() external access {\\n        isLocked = false;\\n    }\\n\\n    ///@dev Implementation of EIP 1271: https://eips.ethereum.org/EIPS/eip-1271.\\n    ///@return Magic value  or reverts with an error message.\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4) {\\n        address recovered = Utils.returnSigner(hash, signature, 0);\\n\\n        // The guardians and recovery owners should not be able to sign transactions that are out of scope from this wallet.\\n        // Only the owner should be able to sign external data.\\n        if (recovered != owner || isLocked) revert LaserWallet__invalidSignature();\\n        return EIP1271_MAGIC_VALUE;\\n    }\\n\\n    function getChainId() public view returns (uint256 chainId) {\\n        return block.chainid;\\n    }\\n\\n    function domainSeparator() public view returns (bytes32) {\\n        return keccak256(abi.encode(DOMAIN_SEPARATOR_TYPEHASH, getChainId(), address(this)));\\n    }\\n\\n    function encodeOperation(\\n        address to,\\n        uint256 value,\\n        bytes calldata callData,\\n        uint256 _nonce,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit\\n    ) internal view returns (bytes memory) {\\n        bytes32 opHash = keccak256(\\n            abi.encode(\\n                LASER_TYPE_STRUCTURE,\\n                to,\\n                value,\\n                keccak256(callData),\\n                _nonce,\\n                maxFeePerGas,\\n                maxPriorityFeePerGas,\\n                gasLimit\\n            )\\n        );\\n\\n        return abi.encodePacked(bytes1(0x19), bytes1(0x01), domainSeparator(), opHash);\\n    }\\n\\n    function operationHash(\\n        address to,\\n        uint256 value,\\n        bytes calldata callData,\\n        uint256 _nonce,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit\\n    ) external view returns (bytes32) {\\n        return keccak256(encodeOperation(to, value, callData, _nonce, maxFeePerGas, maxPriorityFeePerGas, gasLimit));\\n    }\\n}\\n\",\"keccak256\":\"0x0a369eecf227ca00c7bab4e94a619c6c480f0bc96c1844cb7d3c7a8690f20683\",\"license\":\"LGPL-3.0-only\"},\"contracts/access/Access.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\ncontract Access {\\n    error Access__notAllowed();\\n\\n    modifier access() {\\n        if (msg.sender != address(this)) revert Access__notAllowed();\\n\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x9857809f1250e84f95289e05fcde6bcde97ba6b1c596cfb57206b253ebffad32\",\"license\":\"LGPL-3.0-only\"},\"contracts/common/Utils.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\nimport \\\"../interfaces/IEIP1271.sol\\\";\\n\\n/**\\n * @title Utils - Helper functions for Laser wallet and modules.\\n */\\nlibrary Utils {\\n    error Utils__returnSigner__invalidSignature();\\n    error Utils__returnSigner__invalidContractSignature();\\n\\n    ///@dev Returns the signer of the hash.\\n    ///@param signedHash The hash that was signed.\\n    function returnSigner(\\n        bytes32 signedHash,\\n        bytes memory signatures,\\n        uint256 pos\\n    ) internal view returns (address signer) {\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        (r, s, v) = splitSigs(signatures, pos);\\n\\n        if (v == 0) {\\n            // If v is 0, then it is a contract signature.\\n            // The address of the contract is encoded into r.\\n            signer = address(uint160(uint256(r)));\\n\\n            // The signature(s) of the EOA's that control the target contract.\\n            bytes memory contractSignature;\\n\\n            assembly {\\n                contractSignature := add(add(signatures, s), 0x20)\\n            }\\n\\n            if (IEIP1271(signer).isValidSignature(signedHash, contractSignature) != 0x1626ba7e) {\\n                revert Utils__returnSigner__invalidContractSignature();\\n            }\\n        } else if (v > 30) {\\n            signer = ecrecover(\\n                keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", signedHash)),\\n                v - 4,\\n                r,\\n                s\\n            );\\n        } else {\\n            signer = ecrecover(signedHash, v, r, s);\\n        }\\n\\n        if (signer == address(0)) revert Utils__returnSigner__invalidSignature();\\n    }\\n\\n    ///@dev Returns the r, s and v values of the signature.\\n    ///@param pos Which signature to read.\\n    function splitSigs(bytes memory signatures, uint256 pos)\\n        internal\\n        pure\\n        returns (\\n            bytes32 r,\\n            bytes32 s,\\n            uint8 v\\n        )\\n    {\\n        assembly {\\n            let sigPos := mul(0x41, pos)\\n            r := mload(add(signatures, add(sigPos, 0x20)))\\n            s := mload(add(signatures, add(sigPos, 0x40)))\\n            v := byte(0, mload(add(signatures, add(sigPos, 0x60))))\\n        }\\n    }\\n\\n    ///@dev Calls a target address, sends value and / or data payload.\\n    function call(\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        uint256 txGas\\n    ) internal returns (bool success) {\\n        assembly {\\n            success := call(txGas, to, value, add(data, 0x20), mload(data), 0, 0)\\n        }\\n    }\\n\\n    ///@dev Calculates the gas price for the transaction.\\n    function calculateGasPrice(uint256 maxFeePerGas, uint256 maxPriorityFeePerGas) internal view returns (uint256) {\\n        if (maxFeePerGas == maxPriorityFeePerGas) {\\n            // Legacy mode (pre-EIP1559)\\n            return min(maxFeePerGas, tx.gasprice);\\n        }\\n\\n        // EIP-1559\\n        // priority_fee_per_gas = min(transaction.max_priority_fee_per_gas, transaction.max_fee_per_gas - block.base_fee_per_gas)\\n        // effective_gas_price = priority_fee_per_gas + block.base_fee_per_gas\\n        uint256 priorityFeePerGas = min(maxPriorityFeePerGas, maxFeePerGas - block.basefee);\\n\\n        // effective_gas_price\\n        return priorityFeePerGas + block.basefee;\\n    }\\n\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n}\\n\",\"keccak256\":\"0x1fa63752a29d12c44488a4f1fa6efb84c2ad52115ae63f393645b600e74ff08d\",\"license\":\"LGPL-3.0-only\"},\"contracts/handlers/Handler.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.15;\\n\\nimport \\\"../interfaces/IHandler.sol\\\";\\nimport \\\"../interfaces/IERC165.sol\\\";\\n\\n/**\\n * @title Handler - Supports token callbacks.\\n */\\ncontract Handler is IHandler, IERC165 {\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external pure returns (bytes4) {\\n        return 0x150b7a02;\\n    }\\n\\n    function onERC1155Received(\\n        address,\\n        address,\\n        uint256,\\n        uint256,\\n        bytes calldata\\n    ) external pure returns (bytes4) {\\n        return 0xf23a6e61;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address,\\n        address,\\n        uint256[] calldata,\\n        uint256[] calldata,\\n        bytes calldata\\n    ) external pure returns (bytes4 result) {\\n        return 0xbc197c81;\\n    }\\n\\n    function tokensReceived(\\n        address,\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata,\\n        bytes calldata\\n    ) external pure {}\\n\\n    function supportsInterface(bytes4 _interfaceId) external pure returns (bool) {\\n        return\\n            _interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165\\n            _interfaceId == 0x1626ba7e || // EIP 1271\\n            _interfaceId == 0xd9b67a26 || // ERC165 interface ID for ERC1155\\n            _interfaceId == 0x4e2312e0 || // ERC-1155 `ERC1155TokenReceiver` support (i.e. `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\")) ^bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`).\\n            _interfaceId == 0xae029e0b || // Laser Wallet contract: bytes4(keccak256(\\\"I_AM_LASER\\\"))\\n            _interfaceId == 0x150b7a02; // ERC721 onErc721Received\\n    }\\n}\\n\",\"keccak256\":\"0x398a02a703ccf8d3c307cd46ee212952518fe85164763d87aba782db739d77a9\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IEIP1271.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\n/**\\n * @title IEIP1271\\n * @notice Interface to call external contracts to validate signature.\\n */\\ninterface IEIP1271 {\\n    /**\\n     * @dev Implementation of EIP 1271: https://eips.ethereum.org/EIPS/eip-1271.\\n     * @param hash Hash of a message signed on behalf of address(this).\\n     * @param signature Signature byte array associated with _msgHash.\\n     * @return Magic value  or reverts with an error message.\\n     */\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4);\\n}\\n\",\"keccak256\":\"0xfcc98243eaf0e10b323a21e6aca691efec6f128e938f24e495e71cd47c421505\",\"license\":\"LGPL-3.0-only\"},\"contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.15;\\n\\n/**\\n * @title IERC165\\n * @notice Support of ERC165.\\n */\\ninterface IERC165 {\\n    /**\\n     * @notice Query if a contract implements an interface\\n     * @param interfaceID The interface identifier, as specified in ERC-165\\n     * @dev Interface identification is specified in ERC-165. This function\\n     * uses less than 30,000 gas.\\n     * @return `true` if the contract implements `interfaceID` and\\n     * interfaceID` is not 0xffffffff, `false` otherwise\\n     */\\n    function supportsInterface(bytes4 interfaceID) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xdf3ddac29884e2c1f2d2fd322bacd6a6907721d3e0909af74cdedeac5c38a9f4\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IHandler.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\n/**\\n * @title IHandler\\n * @notice Has all the external functions for Handler.sol.\\n */\\ninterface IHandler {\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external pure returns (bytes4);\\n\\n    function onERC1155Received(\\n        address,\\n        address,\\n        uint256,\\n        uint256,\\n        bytes calldata\\n    ) external pure returns (bytes4 result);\\n\\n    function onERC1155BatchReceived(\\n        address,\\n        address,\\n        uint256[] calldata,\\n        uint256[] calldata,\\n        bytes calldata\\n    ) external pure returns (bytes4 result);\\n\\n    function tokensReceived(\\n        address,\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata,\\n        bytes calldata\\n    ) external pure;\\n}\\n\",\"keccak256\":\"0x894c6f39829580da16da3714121ce8913d6fce78dfee658c546eef14850e37fc\",\"license\":\"LGPL-3.0-only\"},\"contracts/interfaces/ILaserState.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\ninterface ILaserState {\\n    ///@dev upgradeSingleton() custom error.\\n    error LaserState__upgradeSingleton__notLaser();\\n\\n    ///@dev initOwner() custom error.\\n    error LaserState__initOwner__walletInitialized();\\n    error LaserState__initOwner__addressWithCode();\\n\\n    function changeOwner(address newOwner) external;\\n\\n    function addLaserModule(address newModule) external;\\n}\\n\",\"keccak256\":\"0x3748210ffaa9bf71b091ee076aa678cedc6595194eefec38e1b4495f86a25e96\",\"license\":\"LGPL-3.0-only\"},\"contracts/interfaces/ILaserWallet.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.15;\\n\\n/**\\n * @title ILaserWallet\\n * @author Rodrigo Herrera I.\\n * @notice Has all the external functions, structs, events and errors for LaserWallet.sol.\\n */\\ninterface ILaserWallet {\\n    event Received(address indexed sender, uint256 amount);\\n    event Setup(address owner, address laserModule);\\n    event ExecSuccess(address to, uint256 value, uint256 nonce);\\n    event ExecFailure(address to, uint256 value, uint256 nonce);\\n\\n    ///@dev init() custom error.\\n    error LW__init__notOwner();\\n    error LW__init__refundFailure();\\n\\n    ///@dev exec() custom errors.\\n    error LW__exec__invalidNonce();\\n    error LW__exec__walletLocked();\\n    error LW__exec__notOwner();\\n    error LW__exec__refundFailure();\\n\\n    ///@dev isValidSignature() Laser custom error.\\n    error LaserWallet__invalidSignature();\\n\\n    /**\\n     * @dev Setup function, sets initial storage of the wallet.\\n     * @param _owner The owner of the wallet.\\n     * @param maxFeePerGas The maximum amount of WEI the user is willing to pay per unit of gas.\\n     * @param maxPriorityFeePerGas Miner's tip.\\n     * @param gasLimit Maximum units of gas the user is willing to use for the transaction.\\n     * @param relayer Address of the relayer to pay back for the transaction inclusion.\\n     * @param laserModule Authorized Laser module that can execute transactions for this wallet.\\n     * @param ownerSignature The signature of the owner to make sure that it approved the transaction.\\n     * @notice It can't be called after initialization.\\n     */\\n    function init(\\n        address _owner,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit,\\n        address relayer,\\n        address laserModule,\\n        bytes calldata laserGuardData,\\n        bytes calldata ownerSignature\\n    ) external;\\n\\n    /**\\n     * @dev Executes a generic transaction. It does not support 'delegatecall' for security reasons.\\n     * @param to Destination address.\\n     * @param value Amount to send.\\n     * @param callData Data payload for the transaction.\\n     * @param _nonce Unsigned integer to avoid replay attacks. It needs to match the current wallet's nonce.\\n     * @param maxFeePerGas Maximum amount that the user is willing to pay for a unit of gas.\\n     * @param maxPriorityFeePerGas Miner's tip.\\n     * @param gasLimit The transaction's gas limit. It needs to be the same as the actual transaction gas limit.\\n     * @param ownerSignature The signatures of the transaction.\\n     * @notice If 'gasLimit' does not match the actual gas limit of the transaction, the relayer can incur losses.\\n     * It is the relayer's responsability to make sure that they are the same, the user does not get affected if a mistake is made.\\n     * We prefer to prioritize the user's safety (not overpay) over the relayer.\\n     */\\n    function exec(\\n        address to,\\n        uint256 value,\\n        bytes calldata callData,\\n        uint256 _nonce,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit,\\n        address relayer,\\n        bytes calldata ownerSignature\\n    ) external;\\n\\n    /**\\n     * @dev Implementation of EIP 1271: https://eips.ethereum.org/EIPS/eip-1271.\\n     * @param hash Hash of a message signed on behalf of address(this).\\n     * @param signature Signature byte array associated with _msgHash.\\n     * @return Magic value  or reverts with an error message.\\n     */\\n    function isValidSignature(bytes32 hash, bytes memory signature) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x64dc9faa5e24c2da07b4af9bd4ad1cd99519e657a20506fa6298b14b9bb1ec79\",\"license\":\"GPL-3.0\"},\"contracts/state/LaserState.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\nimport \\\"../access/Access.sol\\\";\\nimport \\\"../common/Utils.sol\\\";\\nimport \\\"../interfaces/IERC165.sol\\\";\\nimport \\\"../interfaces/ILaserState.sol\\\";\\n\\ncontract LaserState is ILaserState, Access {\\n    address internal constant pointer = address(0x1);\\n\\n    address public singleton;\\n\\n    address public owner;\\n\\n    address public laserGuard;\\n\\n    bool public isLocked;\\n\\n    uint256 public nonce;\\n\\n    mapping(address => address) internal laserModules;\\n\\n    function changeOwner(address newOwner) external access {\\n        owner = newOwner;\\n    }\\n\\n    function addLaserModule(address newModule) external access {\\n        laserModules[newModule] = laserModules[pointer];\\n        laserModules[pointer] = newModule;\\n    }\\n\\n    function changeLaserGuard(address newLaserGuard) external access {\\n        laserGuard = newLaserGuard;\\n    }\\n\\n    function upgradeSingleton(address _singleton) external access {\\n        // if (_singleton == address(this)) revert Singleton__upgradeSingleton__incorrectAddress();\\n\\n        if (!IERC165(_singleton).supportsInterface(0xae029e0b)) {\\n            //bytes4(keccak256(\\\"I_AM_LASER\\\")))\\n            revert LaserState__upgradeSingleton__notLaser();\\n        }\\n\\n        singleton = _singleton;\\n    }\\n\\n    function activateWallet(\\n        address _owner,\\n        address laserModule,\\n        bytes calldata laserModuleData\\n    ) internal {\\n        // If owner is not address 0, the wallet was already initialized ...\\n        if (owner != address(0)) revert LaserState__initOwner__walletInitialized();\\n\\n        if (_owner.code.length != 0 || _owner == address(0)) revert LaserState__initOwner__addressWithCode();\\n        owner = _owner;\\n\\n        if (laserModule != address(0)) {\\n            bool success = Utils.call(laserModule, 0, laserModuleData, gasleft());\\n            require(success);\\n            laserModules[laserModule] = pointer;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x01ba32127e311c37d814f2dc996191b49f0b34d40c9c83c2a8571f3cfbb7feac\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600180546001600160a01b03191630179055611ced806100326000396000f3fe60806040526004361061018e5760003560e01c8063a4e2d634116100d6578063cf6dd3261161007f578063f698da2511610059578063f698da2514610498578063f83d08ba146104ff578063ffa1ad741461051457600080fd5b8063cf6dd3261461042b578063ec8876101461044b578063f23a6e611461046b57600080fd5b8063affed0e0116100b0578063affed0e0146103c6578063b62654fb146103dc578063bc197c81146103fc57600080fd5b8063a4e2d63414610370578063a69df4b514610391578063a6f9dae1146103a657600080fd5b80631626ba7e11610138578063670d046e11610112578063670d046e14610310578063816e1067146103305780638da5cb5b1461035057600080fd5b80631626ba7e146102b357806323d43c16146102d35780633408e470146102f357600080fd5b80630f76e264116101695780630f76e2641461021657806310e888921461024e578063150b7a021461026e57600080fd5b806223de291461019a57806301ffc9a7146101c1578063022ba302146101f657600080fd5b3661019557005b600080fd5b3480156101a657600080fd5b506101bf6101b5366004611512565b5050505050505050565b005b3480156101cd57600080fd5b506101e16101dc3660046115d6565b61056a565b60405190151581526020015b60405180910390f35b34801561020257600080fd5b506101bf6102113660046115fa565b61060d565b34801561022257600080fd5b50600254610236906001600160a01b031681565b6040516001600160a01b0390911681526020016101ed565b34801561025a57600080fd5b506101bf6102693660046115fa565b610690565b34801561027a57600080fd5b5061029a610289366004611615565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101ed565b3480156102bf57600080fd5b5061029a6102ce36600461169a565b61075e565b3480156102df57600080fd5b506101bf6102ee366004611755565b6107dd565b3480156102ff57600080fd5b50465b6040519081526020016101ed565b34801561031c57600080fd5b5061030261032b3660046117df565b610a0e565b34801561033c57600080fd5b506101bf61034b36600461185c565b610a35565b34801561035c57600080fd5b50600154610236906001600160a01b031681565b34801561037c57600080fd5b506002546101e190600160a01b900460ff1681565b34801561039d57600080fd5b506101bf610d55565b3480156103b257600080fd5b506101bf6103c13660046115fa565b610d84565b3480156103d257600080fd5b5061030260035481565b3480156103e857600080fd5b50600054610236906001600160a01b031681565b34801561040857600080fd5b5061029a61041736600461196a565b63bc197c8160e01b98975050505050505050565b34801561043757600080fd5b506101bf6104463660046115fa565b610dc6565b34801561045757600080fd5b506101bf610466366004611a04565b610e08565b34801561047757600080fd5b5061029a610486366004611ac6565b63f23a6e6160e01b9695505050505050565b3480156104a457600080fd5b5061030260007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b34801561050b57600080fd5b506101bf610f90565b34801561052057600080fd5b5061055d6040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b6040516101ed9190611b8b565b60006301ffc9a760e01b6001600160e01b03198316148061059b5750630b135d3f60e11b6001600160e01b03198316145b806105b65750636cdb3d1360e11b6001600160e01b03198316145b806105d15750630271189760e51b6001600160e01b03198316145b806105ec575063ae029e0b60e01b6001600160e01b03198316145b806106075750630a85bd0160e11b6001600160e01b03198316145b92915050565b33301461062d5760405163bc8bd71160e01b815260040160405180910390fd5b60046020527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe0580546001600160a01b039283166000818152604081208054959093166001600160a01b031995861617909255600190915281549092169091179055565b3330146106b05760405163bc8bd71160e01b815260040160405180910390fd5b6040516301ffc9a760e01b815263ae029e0b60e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156106fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071f9190611b9e565b61073c57604051631f66d5cf60e31b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008061076d84846000610fc5565b6001549091506001600160a01b0380831691161415806107965750600254600160a01b900460ff165b156107b4576040516325dc3e7760e21b815260040160405180910390fd5b507f1626ba7e356f5979dd355a3d2bfb43e80420a480c3b854edce286a82d74968699392505050565b600380546001019055336000908152600460205260409020546001600160a01b03166108505760405162461bcd60e51b815260206004820152600a60248201527f6e6f70206d6f64756c650000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60006108a1898989898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612710925050505a61089c9190611bd6565b61121d565b9050806108f05760405162461bcd60e51b815260206004820152601060248201527f6d61696e2063616c6c206661696c6564000000000000000000000000000000006044820152606401610847565b8215610a0357600061090360643a611bed565b61090e906006611c0f565b9050600061091c823a611c2e565b9050604061092b86603f611c0f565b6109359190611bed565b945060005a6109449087611bd6565b61095090611b58611c2e565b9050600061095e8383611c0f565b90506109af6001600160a01b03871615610978578661097a565b325b8260005b6040519080825280601f01601f1916602001820160405280156109a8576020820181803683370190505b505a61121d565b9450846109fe5760405162461bcd60e51b815260206004820152600d60248201527f726566756e64206661696c6564000000000000000000000000000000000000006044820152606401610847565b505050505b505050505050505050565b6000610a208989898989898989611235565b80519060200120905098975050505050505050565b60038054600181019091558714610a5f57604051636f4f3db760e11b815260040160405180910390fd5b600254600160a01b900460ff1615610a8a57604051632e28c77b60e21b815260040160405180910390fd5b6000610a9c8c8c8c8c8c8c8c8c611235565b8051906020012090506000610ae78285858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250610fc5915050565b6001549091506001600160a01b03808316911614610b1857604051630168785160e01b815260040160405180910390fd5b6000610b648e8e8e8e8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612710925050505a61089c9190611bd6565b90508015610bca577f1575d4076918636381fe626ba9076459080815fb43c05c127c6e6b0370d62f4a8e8e600354604051610bbd939291906001600160a01b039390931683526020830191909152604082015260600190565b60405180910390a1610c24565b7f84a65ac305e8f45f7974e75262e5da051587352d6dcb4719702dd02a8b5038308e8e600354604051610c1b939291906001600160a01b039390931683526020830191909152604082015260600190565b60405180910390a15b6002546001600160a01b031615610cb857600260009054906101000a90046001600160a01b03166001600160a01b031663d96b22088f6040518263ffffffff1660e01b8152600401610c8591906001600160a01b0391909116815260200190565b600060405180830381600087803b158015610c9f57600080fd5b505af1158015610cb3573d6000803e3d6000fd5b505050505b6000610cc560643a611bed565b610cd0906006611c0f565b90506000610cde823a611c2e565b905060005a610ced908b611bd6565b610cf990611b58611c2e565b90506000610d078383611c0f565b9050610d216001600160a01b038b1615610978578a61097a565b945084610d41576040516303c62d8160e41b815260040160405180910390fd5b505050505050505050505050505050505050565b333014610d755760405163bc8bd71160e01b815260040160405180910390fd5b6002805460ff60a01b19169055565b333014610da45760405163bc8bd71160e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b333014610de65760405163bc8bd71160e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b610e148a86868661139e565b60408051602081018b90529081018990526060810188905246608082015260009060a0016040516020818303038152906040528051906020012090506000610e928285858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250610fc5915050565b90508b6001600160a01b0316816001600160a01b031614610ec657604051637b0dd98160e01b815260040160405180910390fd5b8815610f82576000610ed960643a611bed565b610ee4906006611c0f565b90506000610ef2823a611c2e565b9050610c80610f038c610c4e611c0f565b610f0d9190611bed565b9a5060005a610f1c908d611bd6565b610f2890611f40611c2e565b90506000610f368383611c0f565b90506000610f5c6001600160a01b038e1615610f52578d610f54565b325b83600061097e565b905080610f7c5760405163230f54c560e01b815260040160405180910390fd5b50505050505b505050505050505050505050565b333014610fb05760405163bc8bd71160e01b815260040160405180910390fd5b6002805460ff60a01b1916600160a01b179055565b600080600080610fef86866041020160208101516040820151606090920151909260009190911a90565b9194509250905060ff81166000036110c757604051630b135d3f60e11b81529293508392868301602001906001600160a01b03851690631626ba7e9061103b908b908590600401611c46565b602060405180830381865afa158015611058573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107c9190611c67565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916631626ba7e60e01b146110c1576040516340aec60f60e11b815260040160405180910390fd5b506111ec565b601e8160ff16111561118c576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101889052600190605c016040516020818303038152906040528051906020012060048361112c9190611c84565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa15801561117b573d6000803e3d6000fd5b5050506020604051035193506111ec565b60408051600081526020810180835289905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa1580156111df573d6000803e3d6000fd5b5050506020604051035193505b6001600160a01b0384166112135760405163b9bf1d7d60e01b815260040160405180910390fd5b5050509392505050565b6000806000845160208601878987f195945050505050565b606060007f4c23aa2497696888af245e4eb8d524e7d4cc862b760e1c988678274066ffff8b8a8a8a8a60405161126c929190611ca7565b6040805191829003822060208301959095526001600160a01b03909316928101929092526060820152608081019190915260a0810187905260c0810186905260e0810185905261010081018490526101200160408051601f1981840301815291905280516020909101209050601960f81b600160f81b61133c60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b6040517fff00000000000000000000000000000000000000000000000000000000000000938416602082015292909116602183015260228201526042810182905260620160405160208183030381529060405291505098975050505050505050565b6001546001600160a01b0316156113c857604051638b151fc760e01b815260040160405180910390fd5b6001600160a01b0384163b1515806113e757506001600160a01b038416155b156114055760405163100d9e6d60e21b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b03868116919091179091558316156114a757600061147084600085858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050505a61121d565b90508061147c57600080fd5b506001600160a01b038316600090815260046020526040902080546001600160a01b03191660011790555b50505050565b80356001600160a01b03811681146114c457600080fd5b919050565b60008083601f8401126114db57600080fd5b50813567ffffffffffffffff8111156114f357600080fd5b60208301915083602082850101111561150b57600080fd5b9250929050565b60008060008060008060008060c0898b03121561152e57600080fd5b611537896114ad565b975061154560208a016114ad565b965061155360408a016114ad565b955060608901359450608089013567ffffffffffffffff8082111561157757600080fd5b6115838c838d016114c9565b909650945060a08b013591508082111561159c57600080fd5b506115a98b828c016114c9565b999c989b5096995094979396929594505050565b6001600160e01b0319811681146115d357600080fd5b50565b6000602082840312156115e857600080fd5b81356115f3816115bd565b9392505050565b60006020828403121561160c57600080fd5b6115f3826114ad565b60008060008060006080868803121561162d57600080fd5b611636866114ad565b9450611644602087016114ad565b935060408601359250606086013567ffffffffffffffff81111561166757600080fd5b611673888289016114c9565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156116ad57600080fd5b82359150602083013567ffffffffffffffff808211156116cc57600080fd5b818501915085601f8301126116e057600080fd5b8135818111156116f2576116f2611684565b604051601f8201601f19908116603f0116810190838211818310171561171a5761171a611684565b8160405282815288602084870101111561173357600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060008060008060008060e0898b03121561177157600080fd5b61177a896114ad565b975060208901359650604089013567ffffffffffffffff81111561179d57600080fd5b6117a98b828c016114c9565b909750955050606089013593506080890135925060a089013591506117d060c08a016114ad565b90509295985092959890939650565b60008060008060008060008060e0898b0312156117fb57600080fd5b611804896114ad565b975060208901359650604089013567ffffffffffffffff81111561182757600080fd5b6118338b828c016114c9565b999c989b50996060810135986080820135985060a0820135975060c09091013595509350505050565b60008060008060008060008060008060006101208c8e03121561187e57600080fd5b6118878c6114ad565b9a5060208c0135995067ffffffffffffffff8060408e013511156118aa57600080fd5b6118ba8e60408f01358f016114c9565b909a50985060608d0135975060808d0135965060a08d0135955060c08d013594506118e760e08e016114ad565b9350806101008e013511156118fb57600080fd5b5061190d8d6101008e01358e016114c9565b81935080925050509295989b509295989b9093969950565b60008083601f84011261193757600080fd5b50813567ffffffffffffffff81111561194f57600080fd5b6020830191508360208260051b850101111561150b57600080fd5b60008060008060008060008060a0898b03121561198657600080fd5b61198f896114ad565b975061199d60208a016114ad565b9650604089013567ffffffffffffffff808211156119ba57600080fd5b6119c68c838d01611925565b909850965060608b01359150808211156119df57600080fd5b6119eb8c838d01611925565b909650945060808b013591508082111561159c57600080fd5b6000806000806000806000806000806101008b8d031215611a2457600080fd5b611a2d8b6114ad565b995060208b0135985060408b0135975060608b01359650611a5060808c016114ad565b9550611a5e60a08c016114ad565b945060c08b013567ffffffffffffffff80821115611a7b57600080fd5b611a878e838f016114c9565b909650945060e08d0135915080821115611aa057600080fd5b50611aad8d828e016114c9565b915080935050809150509295989b9194979a5092959850565b60008060008060008060a08789031215611adf57600080fd5b611ae8876114ad565b9550611af6602088016114ad565b94506040870135935060608701359250608087013567ffffffffffffffff811115611b2057600080fd5b611b2c89828a016114c9565b979a9699509497509295939492505050565b6000815180845260005b81811015611b6457602081850181015186830182015201611b48565b81811115611b76576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006115f36020830184611b3e565b600060208284031215611bb057600080fd5b815180151581146115f357600080fd5b634e487b7160e01b600052601160045260246000fd5b600082821015611be857611be8611bc0565b500390565b600082611c0a57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611c2957611c29611bc0565b500290565b60008219821115611c4157611c41611bc0565b500190565b828152604060208201526000611c5f6040830184611b3e565b949350505050565b600060208284031215611c7957600080fd5b81516115f3816115bd565b600060ff821660ff841680821015611c9e57611c9e611bc0565b90039392505050565b818382376000910190815291905056fea2646970667358221220f6aaea2b5c5375cb050d3ec41f64b67e1e72046f8d7eb0205b2c257a0e8d7b2364736f6c634300080f0033",
  "deployedBytecode": "0x60806040526004361061018e5760003560e01c8063a4e2d634116100d6578063cf6dd3261161007f578063f698da2511610059578063f698da2514610498578063f83d08ba146104ff578063ffa1ad741461051457600080fd5b8063cf6dd3261461042b578063ec8876101461044b578063f23a6e611461046b57600080fd5b8063affed0e0116100b0578063affed0e0146103c6578063b62654fb146103dc578063bc197c81146103fc57600080fd5b8063a4e2d63414610370578063a69df4b514610391578063a6f9dae1146103a657600080fd5b80631626ba7e11610138578063670d046e11610112578063670d046e14610310578063816e1067146103305780638da5cb5b1461035057600080fd5b80631626ba7e146102b357806323d43c16146102d35780633408e470146102f357600080fd5b80630f76e264116101695780630f76e2641461021657806310e888921461024e578063150b7a021461026e57600080fd5b806223de291461019a57806301ffc9a7146101c1578063022ba302146101f657600080fd5b3661019557005b600080fd5b3480156101a657600080fd5b506101bf6101b5366004611512565b5050505050505050565b005b3480156101cd57600080fd5b506101e16101dc3660046115d6565b61056a565b60405190151581526020015b60405180910390f35b34801561020257600080fd5b506101bf6102113660046115fa565b61060d565b34801561022257600080fd5b50600254610236906001600160a01b031681565b6040516001600160a01b0390911681526020016101ed565b34801561025a57600080fd5b506101bf6102693660046115fa565b610690565b34801561027a57600080fd5b5061029a610289366004611615565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101ed565b3480156102bf57600080fd5b5061029a6102ce36600461169a565b61075e565b3480156102df57600080fd5b506101bf6102ee366004611755565b6107dd565b3480156102ff57600080fd5b50465b6040519081526020016101ed565b34801561031c57600080fd5b5061030261032b3660046117df565b610a0e565b34801561033c57600080fd5b506101bf61034b36600461185c565b610a35565b34801561035c57600080fd5b50600154610236906001600160a01b031681565b34801561037c57600080fd5b506002546101e190600160a01b900460ff1681565b34801561039d57600080fd5b506101bf610d55565b3480156103b257600080fd5b506101bf6103c13660046115fa565b610d84565b3480156103d257600080fd5b5061030260035481565b3480156103e857600080fd5b50600054610236906001600160a01b031681565b34801561040857600080fd5b5061029a61041736600461196a565b63bc197c8160e01b98975050505050505050565b34801561043757600080fd5b506101bf6104463660046115fa565b610dc6565b34801561045757600080fd5b506101bf610466366004611a04565b610e08565b34801561047757600080fd5b5061029a610486366004611ac6565b63f23a6e6160e01b9695505050505050565b3480156104a457600080fd5b5061030260007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b34801561050b57600080fd5b506101bf610f90565b34801561052057600080fd5b5061055d6040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b6040516101ed9190611b8b565b60006301ffc9a760e01b6001600160e01b03198316148061059b5750630b135d3f60e11b6001600160e01b03198316145b806105b65750636cdb3d1360e11b6001600160e01b03198316145b806105d15750630271189760e51b6001600160e01b03198316145b806105ec575063ae029e0b60e01b6001600160e01b03198316145b806106075750630a85bd0160e11b6001600160e01b03198316145b92915050565b33301461062d5760405163bc8bd71160e01b815260040160405180910390fd5b60046020527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe0580546001600160a01b039283166000818152604081208054959093166001600160a01b031995861617909255600190915281549092169091179055565b3330146106b05760405163bc8bd71160e01b815260040160405180910390fd5b6040516301ffc9a760e01b815263ae029e0b60e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156106fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071f9190611b9e565b61073c57604051631f66d5cf60e31b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008061076d84846000610fc5565b6001549091506001600160a01b0380831691161415806107965750600254600160a01b900460ff165b156107b4576040516325dc3e7760e21b815260040160405180910390fd5b507f1626ba7e356f5979dd355a3d2bfb43e80420a480c3b854edce286a82d74968699392505050565b600380546001019055336000908152600460205260409020546001600160a01b03166108505760405162461bcd60e51b815260206004820152600a60248201527f6e6f70206d6f64756c650000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60006108a1898989898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612710925050505a61089c9190611bd6565b61121d565b9050806108f05760405162461bcd60e51b815260206004820152601060248201527f6d61696e2063616c6c206661696c6564000000000000000000000000000000006044820152606401610847565b8215610a0357600061090360643a611bed565b61090e906006611c0f565b9050600061091c823a611c2e565b9050604061092b86603f611c0f565b6109359190611bed565b945060005a6109449087611bd6565b61095090611b58611c2e565b9050600061095e8383611c0f565b90506109af6001600160a01b03871615610978578661097a565b325b8260005b6040519080825280601f01601f1916602001820160405280156109a8576020820181803683370190505b505a61121d565b9450846109fe5760405162461bcd60e51b815260206004820152600d60248201527f726566756e64206661696c6564000000000000000000000000000000000000006044820152606401610847565b505050505b505050505050505050565b6000610a208989898989898989611235565b80519060200120905098975050505050505050565b60038054600181019091558714610a5f57604051636f4f3db760e11b815260040160405180910390fd5b600254600160a01b900460ff1615610a8a57604051632e28c77b60e21b815260040160405180910390fd5b6000610a9c8c8c8c8c8c8c8c8c611235565b8051906020012090506000610ae78285858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250610fc5915050565b6001549091506001600160a01b03808316911614610b1857604051630168785160e01b815260040160405180910390fd5b6000610b648e8e8e8e8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612710925050505a61089c9190611bd6565b90508015610bca577f1575d4076918636381fe626ba9076459080815fb43c05c127c6e6b0370d62f4a8e8e600354604051610bbd939291906001600160a01b039390931683526020830191909152604082015260600190565b60405180910390a1610c24565b7f84a65ac305e8f45f7974e75262e5da051587352d6dcb4719702dd02a8b5038308e8e600354604051610c1b939291906001600160a01b039390931683526020830191909152604082015260600190565b60405180910390a15b6002546001600160a01b031615610cb857600260009054906101000a90046001600160a01b03166001600160a01b031663d96b22088f6040518263ffffffff1660e01b8152600401610c8591906001600160a01b0391909116815260200190565b600060405180830381600087803b158015610c9f57600080fd5b505af1158015610cb3573d6000803e3d6000fd5b505050505b6000610cc560643a611bed565b610cd0906006611c0f565b90506000610cde823a611c2e565b905060005a610ced908b611bd6565b610cf990611b58611c2e565b90506000610d078383611c0f565b9050610d216001600160a01b038b1615610978578a61097a565b945084610d41576040516303c62d8160e41b815260040160405180910390fd5b505050505050505050505050505050505050565b333014610d755760405163bc8bd71160e01b815260040160405180910390fd5b6002805460ff60a01b19169055565b333014610da45760405163bc8bd71160e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b333014610de65760405163bc8bd71160e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b610e148a86868661139e565b60408051602081018b90529081018990526060810188905246608082015260009060a0016040516020818303038152906040528051906020012090506000610e928285858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250610fc5915050565b90508b6001600160a01b0316816001600160a01b031614610ec657604051637b0dd98160e01b815260040160405180910390fd5b8815610f82576000610ed960643a611bed565b610ee4906006611c0f565b90506000610ef2823a611c2e565b9050610c80610f038c610c4e611c0f565b610f0d9190611bed565b9a5060005a610f1c908d611bd6565b610f2890611f40611c2e565b90506000610f368383611c0f565b90506000610f5c6001600160a01b038e1615610f52578d610f54565b325b83600061097e565b905080610f7c5760405163230f54c560e01b815260040160405180910390fd5b50505050505b505050505050505050505050565b333014610fb05760405163bc8bd71160e01b815260040160405180910390fd5b6002805460ff60a01b1916600160a01b179055565b600080600080610fef86866041020160208101516040820151606090920151909260009190911a90565b9194509250905060ff81166000036110c757604051630b135d3f60e11b81529293508392868301602001906001600160a01b03851690631626ba7e9061103b908b908590600401611c46565b602060405180830381865afa158015611058573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107c9190611c67565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916631626ba7e60e01b146110c1576040516340aec60f60e11b815260040160405180910390fd5b506111ec565b601e8160ff16111561118c576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101889052600190605c016040516020818303038152906040528051906020012060048361112c9190611c84565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa15801561117b573d6000803e3d6000fd5b5050506020604051035193506111ec565b60408051600081526020810180835289905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa1580156111df573d6000803e3d6000fd5b5050506020604051035193505b6001600160a01b0384166112135760405163b9bf1d7d60e01b815260040160405180910390fd5b5050509392505050565b6000806000845160208601878987f195945050505050565b606060007f4c23aa2497696888af245e4eb8d524e7d4cc862b760e1c988678274066ffff8b8a8a8a8a60405161126c929190611ca7565b6040805191829003822060208301959095526001600160a01b03909316928101929092526060820152608081019190915260a0810187905260c0810186905260e0810185905261010081018490526101200160408051601f1981840301815291905280516020909101209050601960f81b600160f81b61133c60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b6040517fff00000000000000000000000000000000000000000000000000000000000000938416602082015292909116602183015260228201526042810182905260620160405160208183030381529060405291505098975050505050505050565b6001546001600160a01b0316156113c857604051638b151fc760e01b815260040160405180910390fd5b6001600160a01b0384163b1515806113e757506001600160a01b038416155b156114055760405163100d9e6d60e21b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b03868116919091179091558316156114a757600061147084600085858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050505a61121d565b90508061147c57600080fd5b506001600160a01b038316600090815260046020526040902080546001600160a01b03191660011790555b50505050565b80356001600160a01b03811681146114c457600080fd5b919050565b60008083601f8401126114db57600080fd5b50813567ffffffffffffffff8111156114f357600080fd5b60208301915083602082850101111561150b57600080fd5b9250929050565b60008060008060008060008060c0898b03121561152e57600080fd5b611537896114ad565b975061154560208a016114ad565b965061155360408a016114ad565b955060608901359450608089013567ffffffffffffffff8082111561157757600080fd5b6115838c838d016114c9565b909650945060a08b013591508082111561159c57600080fd5b506115a98b828c016114c9565b999c989b5096995094979396929594505050565b6001600160e01b0319811681146115d357600080fd5b50565b6000602082840312156115e857600080fd5b81356115f3816115bd565b9392505050565b60006020828403121561160c57600080fd5b6115f3826114ad565b60008060008060006080868803121561162d57600080fd5b611636866114ad565b9450611644602087016114ad565b935060408601359250606086013567ffffffffffffffff81111561166757600080fd5b611673888289016114c9565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156116ad57600080fd5b82359150602083013567ffffffffffffffff808211156116cc57600080fd5b818501915085601f8301126116e057600080fd5b8135818111156116f2576116f2611684565b604051601f8201601f19908116603f0116810190838211818310171561171a5761171a611684565b8160405282815288602084870101111561173357600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060008060008060008060e0898b03121561177157600080fd5b61177a896114ad565b975060208901359650604089013567ffffffffffffffff81111561179d57600080fd5b6117a98b828c016114c9565b909750955050606089013593506080890135925060a089013591506117d060c08a016114ad565b90509295985092959890939650565b60008060008060008060008060e0898b0312156117fb57600080fd5b611804896114ad565b975060208901359650604089013567ffffffffffffffff81111561182757600080fd5b6118338b828c016114c9565b999c989b50996060810135986080820135985060a0820135975060c09091013595509350505050565b60008060008060008060008060008060006101208c8e03121561187e57600080fd5b6118878c6114ad565b9a5060208c0135995067ffffffffffffffff8060408e013511156118aa57600080fd5b6118ba8e60408f01358f016114c9565b909a50985060608d0135975060808d0135965060a08d0135955060c08d013594506118e760e08e016114ad565b9350806101008e013511156118fb57600080fd5b5061190d8d6101008e01358e016114c9565b81935080925050509295989b509295989b9093969950565b60008083601f84011261193757600080fd5b50813567ffffffffffffffff81111561194f57600080fd5b6020830191508360208260051b850101111561150b57600080fd5b60008060008060008060008060a0898b03121561198657600080fd5b61198f896114ad565b975061199d60208a016114ad565b9650604089013567ffffffffffffffff808211156119ba57600080fd5b6119c68c838d01611925565b909850965060608b01359150808211156119df57600080fd5b6119eb8c838d01611925565b909650945060808b013591508082111561159c57600080fd5b6000806000806000806000806000806101008b8d031215611a2457600080fd5b611a2d8b6114ad565b995060208b0135985060408b0135975060608b01359650611a5060808c016114ad565b9550611a5e60a08c016114ad565b945060c08b013567ffffffffffffffff80821115611a7b57600080fd5b611a878e838f016114c9565b909650945060e08d0135915080821115611aa057600080fd5b50611aad8d828e016114c9565b915080935050809150509295989b9194979a5092959850565b60008060008060008060a08789031215611adf57600080fd5b611ae8876114ad565b9550611af6602088016114ad565b94506040870135935060608701359250608087013567ffffffffffffffff811115611b2057600080fd5b611b2c89828a016114c9565b979a9699509497509295939492505050565b6000815180845260005b81811015611b6457602081850181015186830182015201611b48565b81811115611b76576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006115f36020830184611b3e565b600060208284031215611bb057600080fd5b815180151581146115f357600080fd5b634e487b7160e01b600052601160045260246000fd5b600082821015611be857611be8611bc0565b500390565b600082611c0a57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611c2957611c29611bc0565b500290565b60008219821115611c4157611c41611bc0565b500190565b828152604060208201526000611c5f6040830184611b3e565b949350505050565b600060208284031215611c7957600080fd5b81516115f3816115bd565b600060ff821660ff841680821015611c9e57611c9e611bc0565b90039392505050565b818382376000910190815291905056fea2646970667358221220f6aaea2b5c5375cb050d3ec41f64b67e1e72046f8d7eb0205b2c257a0e8d7b2364736f6c634300080f0033",
  "devdoc": {
    "author": "Rodrigo Herrera I.",
    "errors": {
      "LW__exec__invalidNonce()": [
        {
          "details": "exec() custom errors."
        }
      ],
      "LW__init__notOwner()": [
        {
          "details": "init() custom error."
        }
      ],
      "LaserState__initOwner__walletInitialized()": [
        {
          "details": "initOwner() custom error."
        }
      ],
      "LaserState__upgradeSingleton__notLaser()": [
        {
          "details": "upgradeSingleton() custom error."
        }
      ],
      "LaserWallet__invalidSignature()": [
        {
          "details": "isValidSignature() Laser custom error."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "exec(address,uint256,bytes,uint256,uint256,uint256,uint256,address,bytes)": {
        "details": "Executes a generic transaction. It does not support 'delegatecall' for security reasons.",
        "params": {
          "callData": "Data payload for the transaction.",
          "ownerSignature": "The signatures of the transaction.",
          "to": "Destination address.",
          "value": "Amount to send."
        }
      },
      "execFromModule(address,uint256,bytes,uint256,uint256,uint256,address)": {
        "details": "Allows to execute a transaction from an authorized module."
      },
      "init(address,uint256,uint256,uint256,address,address,bytes,bytes)": {
        "details": "Setup function, sets initial storage of the wallet."
      },
      "isValidSignature(bytes32,bytes)": {
        "details": "Implementation of EIP 1271: https://eips.ethereum.org/EIPS/eip-1271.",
        "returns": {
          "_0": "Magic value  or reverts with an error message."
        }
      },
      "lock()": {
        "details": "Locks the wallet. Once locked, only the SSR module can unlock it or recover it."
      },
      "unlock()": {
        "details": "Unlocks the wallet. Can only be unlocked or recovered from the SSR module."
      }
    },
    "title": "LaserWallet - Modular EVM based smart contract wallet.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "exec(address,uint256,bytes,uint256,uint256,uint256,uint256,address,bytes)": {
        "notice": "If 'gasLimit' does not match the actual gas limit of the transaction, the relayer can incur losses. It is the relayer's responsability to make sure that they are the same, the user does not get affected if a mistake is made. We prefer to prioritize the user's safety (not overpay) over the relayer."
      },
      "init(address,uint256,uint256,uint256,address,address,bytes,bytes)": {
        "notice": "It can't be called after initialization."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2984,
        "contract": "contracts/LaserWallet.sol:LaserWallet",
        "label": "singleton",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2986,
        "contract": "contracts/LaserWallet.sol:LaserWallet",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2988,
        "contract": "contracts/LaserWallet.sol:LaserWallet",
        "label": "laserGuard",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 2990,
        "contract": "contracts/LaserWallet.sol:LaserWallet",
        "label": "isLocked",
        "offset": 20,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 2992,
        "contract": "contracts/LaserWallet.sol:LaserWallet",
        "label": "nonce",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2996,
        "contract": "contracts/LaserWallet.sol:LaserWallet",
        "label": "laserModules",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}