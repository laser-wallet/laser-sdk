{
  "address": "0xB44aC30dD46eED868797BdeE13DD56D9F3E568A4",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Access__notAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LS__activateWallet__invalidOwnerAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LS__activateWallet__walletInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LS__addGuardian__invalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LS__addRecoveryOwner__invalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LS__changeOwner__invalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LS__changeSingleton__invalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LS__initGuardians__invalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LS__initGuardians__underflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LS__initRecoveryOwners__invalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LS__initRecoveryOwners__underflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LS__recover__invalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LS__recover__timeLock",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LS__removeGuardian__incorrectPreviousGuardian",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LS__removeGuardian__invalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LS__removeGuardian__underflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LS__removeRecoveryOwner__incorrectPreviousGuardian",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LS__removeRecoveryOwner__invalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LS__removeRecoveryOwner__underflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__exec__callFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__exec__invalidNonce",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__exec__invalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__exec__invalidSignatureLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__exec__walletLocked",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__init__notOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__recoveryLock__invalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__recoveryRecover__invalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__recoveryUnlock__invalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__recovery__callFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__recovery__duplicateSigner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__recovery__invalidNonce",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__recovery__invalidOperation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LW__recovery__invalidSignatureLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LaserWallet__invalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Utils__returnSigner__invalidContractSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Utils__returnSigner__invalidSignature",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "funcSig",
          "type": "bytes4"
        }
      ],
      "name": "ExecSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "removedGuardian",
          "type": "address"
        }
      ],
      "name": "GuardianRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGuardian",
          "type": "address"
        }
      ],
      "name": "NewGuardian",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "NewRecoveryOwner",
          "type": "address"
        }
      ],
      "name": "NewRecoveryOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "removedRecoveryOwner",
          "type": "address"
        }
      ],
      "name": "RecoveryOwnerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newSingleton",
          "type": "address"
        }
      ],
      "name": "SingletonChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "WalletLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "WalletRecovered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "WalletUnlocked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newGuardian",
          "type": "address"
        }
      ],
      "name": "addGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newRecoveryOwner",
          "type": "address"
        }
      ],
      "name": "addRecoveryOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSingleton",
          "type": "address"
        }
      ],
      "name": "changeSingleton",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "signatures",
          "type": "bytes"
        }
      ],
      "name": "exec",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getConfigTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGuardians",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRecoveryOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "guardians",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_guardians",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_recoveryOwners",
          "type": "address[]"
        },
        {
          "internalType": "bytes",
          "name": "ownerSignature",
          "type": "bytes"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "signatures",
              "type": "bytes"
            }
          ],
          "internalType": "struct Transaction[]",
          "name": "transactions",
          "type": "tuple[]"
        }
      ],
      "name": "multiCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "result",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "operationHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "recover",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "signatures",
          "type": "bytes"
        }
      ],
      "name": "recovery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "recoveryOwners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "prevGuardian",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardianToRemove",
          "type": "address"
        }
      ],
      "name": "removeGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "prevRecoveryOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recoveryOwnerToRemove",
          "type": "address"
        }
      ],
      "name": "removeRecoveryOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "singleton",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "tokensReceived",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x421d7e81894a7e71e2299b857e7817f668d2c2c3d75a70c38fffe99e8692b93b",
  "receipt": {
    "to": null,
    "from": "0x7681C78fb672024C8ACce686cc9A7Acf7F07640d",
    "contractAddress": "0xB44aC30dD46eED868797BdeE13DD56D9F3E568A4",
    "transactionIndex": 0,
    "gasUsed": "2586704",
    "logsBloom": "0x
    "blockHash": "0xf755325c5aae377b9ba5baf16809eb312a422f7558bada63aafa8f333a8a00af",
    "transactionHash": "0x421d7e81894a7e71e2299b857e7817f668d2c2c3d75a70c38fffe99e8692b93b",
    "logs": [],
    "blockNumber": 33466064,
    "cumulativeGasUsed": "2586704",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "4c7976201cb8424427b7a95769afb64f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Access__notAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LS__activateWallet__invalidOwnerAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LS__activateWallet__walletInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LS__addGuardian__invalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LS__addRecoveryOwner__invalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LS__changeOwner__invalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LS__changeSingleton__invalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LS__initGuardians__invalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LS__initGuardians__underflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LS__initRecoveryOwners__invalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LS__initRecoveryOwners__underflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LS__recover__invalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LS__recover__timeLock\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LS__removeGuardian__incorrectPreviousGuardian\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LS__removeGuardian__invalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LS__removeGuardian__underflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LS__removeRecoveryOwner__incorrectPreviousGuardian\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LS__removeRecoveryOwner__invalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LS__removeRecoveryOwner__underflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__exec__callFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__exec__invalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__exec__invalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__exec__invalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__exec__walletLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__init__notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__recoveryLock__invalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__recoveryRecover__invalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__recoveryUnlock__invalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__recovery__callFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__recovery__duplicateSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__recovery__invalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__recovery__invalidOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LW__recovery__invalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LaserWallet__invalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Utils__returnSigner__invalidContractSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Utils__returnSigner__invalidSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"funcSig\",\"type\":\"bytes4\"}],\"name\":\"ExecSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"removedGuardian\",\"type\":\"address\"}],\"name\":\"GuardianRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGuardian\",\"type\":\"address\"}],\"name\":\"NewGuardian\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"NewRecoveryOwner\",\"type\":\"address\"}],\"name\":\"NewRecoveryOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"removedRecoveryOwner\",\"type\":\"address\"}],\"name\":\"RecoveryOwnerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newSingleton\",\"type\":\"address\"}],\"name\":\"SingletonChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"WalletLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"WalletRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"WalletUnlocked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGuardian\",\"type\":\"address\"}],\"name\":\"addGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRecoveryOwner\",\"type\":\"address\"}],\"name\":\"addRecoveryOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSingleton\",\"type\":\"address\"}],\"name\":\"changeSingleton\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"exec\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfigTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGuardians\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecoveryOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"guardians\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_guardians\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_recoveryOwners\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"ownerSignature\",\"type\":\"bytes\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"internalType\":\"struct Transaction[]\",\"name\":\"transactions\",\"type\":\"tuple[]\"}],\"name\":\"multiCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"result\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"operationHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"recovery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"recoveryOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevGuardian\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardianToRemove\",\"type\":\"address\"}],\"name\":\"removeGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevRecoveryOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recoveryOwnerToRemove\",\"type\":\"address\"}],\"name\":\"removeRecoveryOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"singleton\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Rodrigo Herrera I.\",\"kind\":\"dev\",\"methods\":{\"addGuardian(address)\":{\"details\":\"Restricted, can only be called by address(this).\",\"params\":{\"newGuardian\":\"Address of the new guardian.\"}},\"addRecoveryOwner(address)\":{\"details\":\"Restricted, can only be called by address(this).\",\"params\":{\"newRecoveryOwner\":\"Address of the new recovery owner.\"}},\"changeOwner(address)\":{\"details\":\"Restricted, can only be called by address(this).\",\"params\":{\"newOwner\":\"Address of the new owner.\"}},\"changeSingleton(address)\":{\"details\":\"Restricted, can only be called by address(this).\",\"params\":{\"newSingleton\":\"Address of the new singleton.\"}},\"constructor\":{\"details\":\"Sets the owner of the implementation address (singleton) to 'this'.      This will make the base contract unusable, even though it does not have 'delegatecall'.\"},\"exec(address,uint256,bytes,uint256,bytes)\":{\"params\":{\"_nonce\":\"Anti-replay number.\",\"callData\":\"Data payload to send.\",\"signatures\":\"Signatures of the hash of the transaction.\",\"to\":\"Destination address.\",\"value\":\"Amount in WEI to transfer.\"}},\"getChainId()\":{\"returns\":{\"chainId\":\"The chain id of this.\"}},\"getConfigTimestamp()\":{\"returns\":{\"_0\":\"The time (block.timestamp) when the wallet was locked.\"}},\"getGuardians()\":{\"returns\":{\"_0\":\"Array of guardians for this wallet.\"}},\"getRecoveryOwners()\":{\"returns\":{\"_0\":\"Array of recovery owners for this wallet.\"}},\"init(address,address[],address[],bytes)\":{\"params\":{\"_guardians\":\"Array of guardians.\",\"_owner\":\"The owner of the wallet.\",\"_recoveryOwners\":\"Array of recovery owners.\",\"ownerSignature\":\"Signature of the owner that validates the correctness of the address.\"}},\"isLocked()\":{\"returns\":{\"_0\":\"Boolean if the wallet is locked.\"}},\"isValidSignature(bytes32,bytes)\":{\"params\":{\"hash\":\"Hash of the data to be signed.\",\"signature\":\"Signature byte array associated with hash. MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls\"},\"returns\":{\"_0\":\"Magic value.\"}},\"lock()\":{\"details\":\"Restricted, can only be called by address(this).\"},\"multiCall((address,uint256,bytes,uint256,bytes)[])\":{\"params\":{\"transactions\":\"An array of Laser transactions.\"}},\"recover(address)\":{\"details\":\"Restricted, can only be called by address(this).\",\"params\":{\"newOwner\":\"Address of the new owner.\"}},\"recovery(uint256,bytes,bytes)\":{\"params\":{\"callData\":\"Data payload, can only be either lock(), unlock() or recover(address).\",\"signatures\":\"Signatures of the hash of the transaction.\"}},\"removeGuardian(address,address)\":{\"details\":\"Restricted, can only be called by address(this).\",\"params\":{\"guardianToRemove\":\"Address of the guardian to be removed.\",\"prevGuardian\":\"Address of the previous guardian in the linked list.\"}},\"removeRecoveryOwner(address,address)\":{\"details\":\"Restricted, can only be called by address(this).\",\"params\":{\"prevRecoveryOwner\":\"Address of the previous recovery owner in the linked list.\",\"recoveryOwnerToRemove\":\"Address of the recovery owner to be removed.\"}},\"unlock()\":{\"details\":\"Restricted, can only be called by address(this).\"}},\"title\":\"LaserWallet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addGuardian(address)\":{\"notice\":\"Adds a new guardian. Can only be called by the owner + recovery owner         or owner + guardian.\"},\"addRecoveryOwner(address)\":{\"notice\":\"Adds a new recovery owner. Can only be called by the owner + recovery owner         or owner + guardian.\"},\"changeOwner(address)\":{\"notice\":\"Changes the owner of the wallet. Can only be called by the owner + recovery owner         or owner + guardian.\"},\"changeSingleton(address)\":{\"notice\":\"Changes the singleton. Can only be called by the owner + recovery owner         or owner + guardian.\"},\"domainSeparator()\":{\"notice\":\"Domain separator for this wallet.\"},\"exec(address,uint256,bytes,uint256,bytes)\":{\"notice\":\"Executes a generic transaction.         The transaction is required to be signed by the owner + recovery owner or owner + guardian         while the wallet is not locked.\"},\"init(address,address[],address[],bytes)\":{\"notice\":\"Setup function, sets initial storage of the wallet.         It can't be called after initialization.\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Should return whether the signature provided is valid for the provided hash.\"},\"lock()\":{\"notice\":\"Locks the wallet. Can only be called by a recovery owner + recovery owner         or recovery owner + guardian.\"},\"multiCall((address,uint256,bytes,uint256,bytes)[])\":{\"notice\":\"Executes a batch of transactions.\"},\"operationHash(address,uint256,bytes,uint256)\":{\"notice\":\"Returns the hash to be signed to execute a transaction.\"},\"recover(address)\":{\"notice\":\"Recovers the wallet. Can only be called by the recovery owner + recovery owner         or recovery owner + guardian.\"},\"recovery(uint256,bytes,bytes)\":{\"notice\":\"Triggers the recovery mechanism.\"},\"removeGuardian(address,address)\":{\"notice\":\"Removes a guardian. Can only be called by the owner + recovery owner         or owner + guardian.\"},\"removeRecoveryOwner(address,address)\":{\"notice\":\"Removes a recovery owner. Can only be called by the owner + recovery owner         or owner + guardian.\"},\"unlock()\":{\"notice\":\"Unlocks the wallet. Can only be called by the owner + recovery owner         or owner + guardian.\"}},\"notice\":\"Laser is a secure smart contract wallet (vault) made for the Ethereum Virtual Machine.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LaserWallet.sol\":\"LaserWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/LaserWallet.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.16;\\n\\nimport \\\"./handlers/Handler.sol\\\";\\nimport \\\"./interfaces/ILaserWallet.sol\\\";\\nimport \\\"./state/LaserState.sol\\\";\\n\\n/**\\n * @title  LaserWallet\\n *\\n * @author Rodrigo Herrera I.\\n *\\n * @notice Laser is a secure smart contract wallet (vault) made for the Ethereum Virtual Machine.\\n */\\ncontract LaserWallet is ILaserWallet, LaserState, Handler {\\n    /*//////////////////////////////////////////////////////////////\\n                             LASER METADATA\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public constant VERSION = \\\"1.0.0\\\";\\n\\n    string public constant NAME = \\\"Laser Wallet\\\";\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            SIGNATURE TYPES\\n    //////////////////////////////////////////////////////////////*/\\n\\n    bytes32 private constant DOMAIN_SEPARATOR_TYPEHASH =\\n        keccak256(\\\"EIP712Domain(uint256 chainId,address verifyingContract)\\\");\\n\\n    bytes32 private constant LASER_TYPE_STRUCTURE =\\n        keccak256(\\\"LaserOperation(address to,uint256 value,bytes callData,uint256 nonce)\\\");\\n\\n    /**\\n     * @dev Sets the owner of the implementation address (singleton) to 'this'.\\n     *      This will make the base contract unusable, even though it does not have 'delegatecall'.\\n     */\\n    constructor() {\\n        owner = address(this);\\n    }\\n\\n    receive() external payable {}\\n\\n    /**\\n     * @notice Setup function, sets initial storage of the wallet.\\n     *         It can't be called after initialization.\\n     *\\n     * @param _owner           The owner of the wallet.\\n     * @param _guardians       Array of guardians.\\n     * @param _recoveryOwners  Array of recovery owners.\\n     * @param ownerSignature   Signature of the owner that validates the correctness of the address.\\n     */\\n    function init(\\n        address _owner,\\n        address[] calldata _guardians,\\n        address[] calldata _recoveryOwners,\\n        bytes calldata ownerSignature\\n    ) external {\\n        // activateWallet verifies that the current owner is address 0, reverts otherwise.\\n        // This is more than enough to avoid being called after initialization.\\n        activateWallet(_owner, _guardians, _recoveryOwners);\\n\\n        // This is primarily to verify that the owner address is correct.\\n        // It also provides some extra security guarantes (the owner really approved the guardians and recovery owners).\\n        bytes32 signedHash = keccak256(abi.encodePacked(_guardians, _recoveryOwners, block.chainid));\\n\\n        address signer = Utils.returnSigner(signedHash, ownerSignature, 0);\\n\\n        if (signer != _owner) revert LW__init__notOwner();\\n    }\\n\\n    /**\\n     * @notice Executes a generic transaction.\\n     *         The transaction is required to be signed by the owner + recovery owner or owner + guardian\\n     *         while the wallet is not locked.\\n     *\\n     * @param to         Destination address.\\n     * @param value      Amount in WEI to transfer.\\n     * @param callData   Data payload to send.\\n     * @param _nonce     Anti-replay number.\\n     * @param signatures Signatures of the hash of the transaction.\\n     */\\n    function exec(\\n        address to,\\n        uint256 value,\\n        bytes calldata callData,\\n        uint256 _nonce,\\n        bytes calldata signatures\\n    ) public returns (bool success) {\\n        // We immediately increase the nonce to avoid replay attacks.\\n        unchecked {\\n            if (nonce++ != _nonce) revert LW__exec__invalidNonce();\\n        }\\n\\n        // If the wallet is locked, further transactions cannot be executed from 'exec'.\\n        if (walletConfig.isLocked) revert LW__exec__walletLocked();\\n\\n        // We get the hash for this transaction.\\n        bytes32 signedHash = keccak256(encodeOperation(to, value, callData, _nonce));\\n\\n        if (signatures.length < 130) revert LW__exec__invalidSignatureLength();\\n\\n        address signer1 = Utils.returnSigner(signedHash, signatures, 0);\\n        address signer2 = Utils.returnSigner(signedHash, signatures, 1);\\n\\n        if (signer1 != owner || (recoveryOwners[signer2] == address(0) && guardians[signer2] == address(0))) {\\n            revert LW__exec__invalidSignature();\\n        }\\n\\n        success = Utils.call(to, value, callData, gasleft());\\n        if (!success) revert LW__exec__callFailed();\\n\\n        emit ExecSuccess(to, value, nonce, bytes4(callData));\\n    }\\n\\n    /**\\n     * @notice Executes a batch of transactions.\\n     *\\n     * @param transactions An array of Laser transactions.\\n     */\\n    function multiCall(Transaction[] calldata transactions) external {\\n        uint256 transactionsLength = transactions.length;\\n\\n        // @todo custom errors and optimization.\\n        // This is a mockup, not final.\\n        for (uint256 i = 0; i < transactionsLength; ) {\\n            Transaction calldata transaction = transactions[i];\\n\\n            exec(transaction.to, transaction.value, transaction.callData, transaction.nonce, transaction.signatures);\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Triggers the recovery mechanism.\\n     *\\n     * @param callData   Data payload, can only be either lock(), unlock() or recover(address).\\n     * @param signatures Signatures of the hash of the transaction.\\n     */\\n    function recovery(\\n        uint256 _nonce,\\n        bytes calldata callData,\\n        bytes calldata signatures\\n    ) external {\\n        // We immediately increase the nonce to avoid replay attacks.\\n        unchecked {\\n            if (nonce++ != _nonce) revert LW__recovery__invalidNonce();\\n        }\\n\\n        bytes4 functionSelector = bytes4(callData);\\n\\n        // All calls require at least 2 signatures.\\n        if (signatures.length < 130) revert LW__recovery__invalidSignatureLength();\\n\\n        bytes32 signedHash = keccak256(abi.encodePacked(_nonce, keccak256(callData), address(this), block.chainid));\\n\\n        address signer1 = Utils.returnSigner(signedHash, signatures, 0);\\n        address signer2 = Utils.returnSigner(signedHash, signatures, 1);\\n\\n        if (signer1 == signer2) revert LW__recovery__duplicateSigner();\\n\\n        if (functionSelector == 0xf83d08ba) {\\n            // bytes4(keccak256(\\\"lock()\\\"))\\n\\n            // Only a recovery owner + recovery owner ||\\u00a0recovery owner + guardian\\n            // can lock the wallet.\\n            if (\\n                recoveryOwners[signer1] == address(0) ||\\n                (recoveryOwners[signer2] == address(0) && guardians[signer2] == address(0))\\n            ) revert LW__recoveryLock__invalidSignature();\\n        } else if (functionSelector == 0xa69df4b5) {\\n            // bytes4(keccak256(\\\"unlock()\\\"))\\n\\n            // Only the owner + recovery owner ||\\u00a0owner + guardian can unlock the wallet.\\n            if (signer1 != owner || (recoveryOwners[signer2] == address(0) && guardians[signer2] == address(0))) {\\n                revert LW__recoveryUnlock__invalidSignature();\\n            }\\n        } else if (functionSelector == 0x0cd865ec) {\\n            // bytes4(keccak256(\\\"recover(address)\\\"))\\n\\n            // Only the recovery owner + recovery owner ||\\u00a0recovery owner + guardian can recover the wallet.\\n            if (\\n                recoveryOwners[signer1] == address(0) ||\\n                (recoveryOwners[signer2] == address(0) && guardians[signer2] == address(0))\\n            ) revert LW__recoveryRecover__invalidSignature();\\n        } else {\\n            // Else, the operation is not allowed.\\n            revert LW__recovery__invalidOperation();\\n        }\\n\\n        bool success = Utils.call(address(this), 0, callData, gasleft());\\n        if (!success) revert LW__recovery__callFailed();\\n    }\\n\\n    /**\\n     * @notice Returns the hash to be signed to execute a transaction.\\n     */\\n    function operationHash(\\n        address to,\\n        uint256 value,\\n        bytes calldata callData,\\n        uint256 _nonce\\n    ) external view returns (bytes32) {\\n        return keccak256(encodeOperation(to, value, callData, _nonce));\\n    }\\n\\n    /**\\n     * @notice Should return whether the signature provided is valid for the provided hash.\\n     *\\n     * @param hash      Hash of the data to be signed.\\n     * @param signature Signature byte array associated with hash.\\n     *\\n     * MUST return the bytes4 magic value 0x1626ba7e when function passes.\\n     * MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5)\\n     * MUST allow external calls\\n     *\\n     * @return Magic value.\\n     */\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4) {\\n        address signer1 = Utils.returnSigner(hash, signature, 0);\\n        address signer2 = Utils.returnSigner(hash, signature, 1);\\n\\n        if (signer1 != owner || (recoveryOwners[signer2] == address(0) && guardians[signer2] == address(0))) {\\n            revert LaserWallet__invalidSignature();\\n        }\\n\\n        // bytes4(keccak256(\\\"isValidSignature(bytes32,bytes)\\\")\\n        return 0x1626ba7e;\\n    }\\n\\n    /**\\n     * @return chainId The chain id of this.\\n     */\\n    function getChainId() public view returns (uint256 chainId) {\\n        return block.chainid;\\n    }\\n\\n    /**\\n     * @notice Domain separator for this wallet.\\n     */\\n    function domainSeparator() public view returns (bytes32) {\\n        return keccak256(abi.encode(DOMAIN_SEPARATOR_TYPEHASH, getChainId(), address(this)));\\n    }\\n\\n    /**\\n     * @notice Encodes the transaction data.\\n     */\\n    function encodeOperation(\\n        address to,\\n        uint256 value,\\n        bytes calldata callData,\\n        uint256 _nonce\\n    ) internal view returns (bytes memory) {\\n        bytes32 opHash = keccak256(abi.encode(LASER_TYPE_STRUCTURE, to, value, keccak256(callData), _nonce));\\n\\n        return abi.encodePacked(bytes1(0x19), bytes1(0x01), domainSeparator(), opHash);\\n    }\\n}\\n\",\"keccak256\":\"0x3c56b5275008d95b1a91595442a54b4b8b88540920267177867d12e68f85c647\",\"license\":\"LGPL-3.0-only\"},\"contracts/access/Access.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.16;\\n\\n/**\\n * @title Access\\n *\\n * @author Inspired by Gnosis Safe.\\n *\\n * @notice Modifier that only allows this contract to be the 'msg.sender'.\\n */\\ncontract Access {\\n    error Access__notAllowed();\\n\\n    modifier access() {\\n        if (msg.sender != address(this)) revert Access__notAllowed();\\n\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x2edff9b7eabdd258dc712054d906cadc97b35bea969a3e042df79cc4e5efc207\",\"license\":\"LGPL-3.0-only\"},\"contracts/common/Utils.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.16;\\n\\nimport \\\"../interfaces/IEIP1271.sol\\\";\\n\\n/**\\n * @title Utils\\n *\\n * @notice Helper functions for Laser wallet.\\n */\\nlibrary Utils {\\n    /*//////////////////////////////////////////////////////////////\\n                                 ERRORS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    error Utils__returnSigner__invalidSignature();\\n\\n    error Utils__returnSigner__invalidContractSignature();\\n\\n    /**\\n     * @param signedHash  The hash that was signed.\\n     * @param signatures  Result of signing the has.\\n     * @param pos         Position of the signer.\\n     *\\n     * @return signer      Address that signed the hash.\\n     */\\n    function returnSigner(\\n        bytes32 signedHash,\\n        bytes memory signatures,\\n        uint256 pos\\n    ) internal view returns (address signer) {\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        (r, s, v) = splitSigs(signatures, pos);\\n\\n        if (v == 0) {\\n            // If v is 0, then it is a contract signature.\\n            // The address of the contract is encoded into r.\\n            signer = address(uint160(uint256(r)));\\n\\n            // The signature(s) of the EOA's that control the target contract.\\n            bytes memory contractSignature;\\n\\n            assembly {\\n                contractSignature := add(add(signatures, s), 0x20)\\n            }\\n\\n            if (IEIP1271(signer).isValidSignature(signedHash, contractSignature) != 0x1626ba7e) {\\n                revert Utils__returnSigner__invalidContractSignature();\\n            }\\n        } else if (v > 30) {\\n            signer = ecrecover(\\n                keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", signedHash)),\\n                v - 4,\\n                r,\\n                s\\n            );\\n        } else {\\n            signer = ecrecover(signedHash, v, r, s);\\n        }\\n\\n        if (signer == address(0)) revert Utils__returnSigner__invalidSignature();\\n    }\\n\\n    /**\\n     * @dev Returns the r, s and v values of the signature.\\n     *\\n     * @param pos Which signature to read.\\n     */\\n    function splitSigs(bytes memory signatures, uint256 pos)\\n        internal\\n        pure\\n        returns (\\n            bytes32 r,\\n            bytes32 s,\\n            uint8 v\\n        )\\n    {\\n        assembly {\\n            let sigPos := mul(0x41, pos)\\n            r := mload(add(signatures, add(sigPos, 0x20)))\\n            s := mload(add(signatures, add(sigPos, 0x40)))\\n            v := byte(0, mload(add(signatures, add(sigPos, 0x60))))\\n        }\\n    }\\n\\n    /**\\n     * @dev Calls a target address, sends value and / or data payload.\\n     *\\n     * @param to        Destination address.\\n     * @param value     Amount in WEI to transfer.\\n     * @param callData  Data payload for the transaction.\\n     */\\n    function call(\\n        address to,\\n        uint256 value,\\n        bytes memory callData,\\n        uint256 txGas\\n    ) internal returns (bool success) {\\n        assembly {\\n            success := call(txGas, to, value, add(callData, 0x20), mload(callData), 0, 0)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x17a02b936ee9c00de8fc9f92a49b91d00c2f991d46499831877699716c7cb6b6\",\"license\":\"LGPL-3.0-only\"},\"contracts/handlers/Handler.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.16;\\n\\nimport \\\"../interfaces/IHandler.sol\\\";\\nimport \\\"../interfaces/IERC165.sol\\\";\\n\\n/**\\n * @title Handler\\n *\\n * @notice Supports token callbacks.\\n */\\ncontract Handler is IHandler, IERC165 {\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external pure returns (bytes4) {\\n        return 0x150b7a02;\\n    }\\n\\n    function onERC1155Received(\\n        address,\\n        address,\\n        uint256,\\n        uint256,\\n        bytes calldata\\n    ) external pure returns (bytes4) {\\n        return 0xf23a6e61;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address,\\n        address,\\n        uint256[] calldata,\\n        uint256[] calldata,\\n        bytes calldata\\n    ) external pure returns (bytes4 result) {\\n        return 0xbc197c81;\\n    }\\n\\n    function tokensReceived(\\n        address,\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata,\\n        bytes calldata\\n    ) external pure {}\\n\\n    function supportsInterface(bytes4 _interfaceId) external pure returns (bool) {\\n        return\\n            _interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\\n            _interfaceId == 0x1626ba7e || // EIP 1271.\\n            _interfaceId == 0xd9b67a26 || // ERC165 interface ID for ERC1155.\\n            _interfaceId == 0x4e2312e0 || // ERC-1155 `ERC1155TokenReceiver` support.\\n            _interfaceId == 0xae029e0b || // Laser Wallet contract: bytes4(keccak256(\\\"I_AM_LASER\\\")).\\n            _interfaceId == 0x150b7a02; // ERC721 onErc721Received.\\n    }\\n}\\n\",\"keccak256\":\"0x53bd2048f8784d4c5617695cbc9a59e4e7143a705e03b8649892f253177d9b77\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IEIP1271.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.16;\\n\\n/**\\n * @title IEIP1271\\n *\\n * @notice Interface to call external contracts to validate signature.\\n */\\ninterface IEIP1271 {\\n    /**\\n     * @notice Should return whether the signature provided is valid for the provided hash.\\n     *\\n     * @param hash      Hash of the data to be signed.\\n     * @param signature Signature byte array associated with hash.\\n     *\\n     * MUST return the bytes4 magic value 0x1626ba7e when function passes.\\n     * MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5)\\n     * MUST allow external calls\\n     *\\n     * @return Magic value.\\n     */\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4);\\n}\\n\",\"keccak256\":\"0x0576a589fc9ac4ea83c174f0a1cb6ec51b3d82e9d595263ecd037ccbdef3e7ca\",\"license\":\"LGPL-3.0-only\"},\"contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.16;\\n\\n/**\\n * @title IERC165\\n * @notice Support of ERC165.\\n */\\ninterface IERC165 {\\n    /**\\n     * @notice Query if a contract implements an interface\\n     *\\n     * @param interfaceID The interface identifier, as specified in ERC-165\\n     *\\n     * @dev Interface identification is specified in ERC-165. This function\\n     * uses less than 30,000 gas.\\n     *\\n     * @return `true` if the contract implements `interfaceID` and\\n     * interfaceID` is not 0xffffffff, `false` otherwise\\n     */\\n    function supportsInterface(bytes4 interfaceID) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x0a9cee2d34d68d0705f084c90982c94375bc6d62134978e752f9a9ea43bd0e30\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IHandler.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.16;\\n\\n/**\\n * @title IHandler\\n *\\n * @notice Has all the external functions for Handler.sol.\\n */\\ninterface IHandler {\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata\\n    ) external pure returns (bytes4);\\n\\n    function onERC1155Received(\\n        address,\\n        address,\\n        uint256,\\n        uint256,\\n        bytes calldata\\n    ) external pure returns (bytes4 result);\\n\\n    function onERC1155BatchReceived(\\n        address,\\n        address,\\n        uint256[] calldata,\\n        uint256[] calldata,\\n        bytes calldata\\n    ) external pure returns (bytes4 result);\\n\\n    function tokensReceived(\\n        address,\\n        address,\\n        address,\\n        uint256,\\n        bytes calldata,\\n        bytes calldata\\n    ) external pure;\\n}\\n\",\"keccak256\":\"0xe51043f850d0ae3129cd2c233fc0ca3554168c42546e25ec74af290cb1fa4a8f\",\"license\":\"LGPL-3.0-only\"},\"contracts/interfaces/ILaserState.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.16;\\n\\n/**\\n * @notice Wallet configuration for the recovery mechanism.\\n *\\n * @param isLocked  Boolean if the wallet is currently locked.\\n * @param timestamp The time (block.timestamp) when the wallet was locked.\\n */\\nstruct WalletConfig {\\n    bool isLocked;\\n    uint256 timestamp;\\n}\\n\\n/**\\n * @title   LaserState\\n *\\n * @author  Rodrigo Herrera I.\\n *\\n * @notice  Has all the state(storage) for a Laser wallet and implements\\n *          Smart Social Recovery.\\n *\\n * @dev    This interface has all events, errors, and external function for LaserState.\\n */\\ninterface ILaserState {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event WalletLocked();\\n\\n    event WalletUnlocked();\\n\\n    event WalletRecovered(address newOwner);\\n\\n    event OwnerChanged(address newOwner);\\n\\n    event SingletonChanged(address newSingleton);\\n\\n    event NewGuardian(address newGuardian);\\n\\n    event GuardianRemoved(address removedGuardian);\\n\\n    event NewRecoveryOwner(address NewRecoveryOwner);\\n\\n    event RecoveryOwnerRemoved(address removedRecoveryOwner);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                                 ERRORS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    error LS__recover__timeLock();\\n\\n    error LS__recover__invalidAddress();\\n\\n    error LS__changeOwner__invalidAddress();\\n\\n    error LS__changeSingleton__invalidAddress();\\n\\n    error LS__addGuardian__invalidAddress();\\n\\n    error LS__removeGuardian__invalidAddress();\\n\\n    error LS__removeGuardian__incorrectPreviousGuardian();\\n\\n    error LS__removeGuardian__underflow();\\n\\n    error LS__addRecoveryOwner__invalidAddress();\\n\\n    error LS__removeRecoveryOwner__invalidAddress();\\n\\n    error LS__removeRecoveryOwner__incorrectPreviousGuardian();\\n\\n    error LS__removeRecoveryOwner__underflow();\\n\\n    error LS__initGuardians__underflow();\\n\\n    error LS__initGuardians__invalidAddress();\\n\\n    error LS__initRecoveryOwners__underflow();\\n\\n    error LS__initRecoveryOwners__invalidAddress();\\n\\n    error LS__activateWallet__walletInitialized();\\n\\n    error LS__activateWallet__invalidOwnerAddress();\\n\\n    /*//////////////////////////////////////////////////////////////\\n                                 STATE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function singleton() external view returns (address);\\n\\n    function owner() external view returns (address);\\n\\n    function nonce() external view returns (uint256);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                                EXTERNAL\\n    //////////////////////////////////////////////////////////////*/\\n\\n    /**\\n     * @notice Locks the wallet. Can only be called by a recovery owner + recovery owner\\n     *         or recovery owner + guardian.\\n     *\\n     * @dev    Restricted, can only be called by address(this).\\n     */\\n    function lock() external;\\n\\n    /**\\n     * @notice Unlocks the wallet. Can only be called by the owner + recovery owner\\n     *         or owner + guardian.\\n     *\\n     * @dev    Restricted, can only be called by address(this).\\n     */\\n    function unlock() external;\\n\\n    /**\\n     * @notice Recovers the wallet. Can only be called by the recovery owner + recovery owner\\n     *         or recovery owner + guardian.\\n     *\\n     * @dev   Restricted, can only be called by address(this).\\n     *\\n     * @param newOwner  Address of the new owner.\\n     */\\n    function recover(address newOwner) external;\\n\\n    /**\\n     * @notice Changes the owner of the wallet. Can only be called by the owner + recovery owner\\n     *         or owner + guardian.\\n     *\\n     * @dev   Restricted, can only be called by address(this).\\n     *\\n     * @param newOwner  Address of the new owner.\\n     */\\n    function changeOwner(address newOwner) external;\\n\\n    /**\\n     * @notice Changes the singleton. Can only be called by the owner + recovery owner\\n     *         or owner + guardian.\\n     *\\n     * @dev   Restricted, can only be called by address(this).\\n     *\\n     * @param newSingleton  Address of the new singleton.\\n     */\\n    function changeSingleton(address newSingleton) external;\\n\\n    /**\\n     * @notice Adds a new guardian. Can only be called by the owner + recovery owner\\n     *         or owner + guardian.\\n     *\\n     * @dev   Restricted, can only be called by address(this).\\n     *\\n     * @param newGuardian  Address of the new guardian.\\n     */\\n    function addGuardian(address newGuardian) external;\\n\\n    /**\\n     * @notice Removes a guardian. Can only be called by the owner + recovery owner\\n     *         or owner + guardian.\\n     *\\n     * @dev   Restricted, can only be called by address(this).\\n     *\\n     * @param prevGuardian      Address of the previous guardian in the linked list.\\n     * @param guardianToRemove  Address of the guardian to be removed.\\n     */\\n    function removeGuardian(address prevGuardian, address guardianToRemove) external;\\n\\n    /**\\n     * @notice Adds a new recovery owner. Can only be called by the owner + recovery owner\\n     *         or owner + guardian.\\n     *\\n     * @dev   Restricted, can only be called by address(this).\\n     *\\n     * @param newRecoveryOwner  Address of the new recovery owner.\\n     */\\n    function addRecoveryOwner(address newRecoveryOwner) external;\\n\\n    /**\\n     * @notice Removes a recovery owner. Can only be called by the owner + recovery owner\\n     *         or owner + guardian.\\n     *\\n     * @dev   Restricted, can only be called by address(this).\\n     *\\n     * @param prevRecoveryOwner      Address of the previous recovery owner in the linked list.\\n     * @param recoveryOwnerToRemove  Address of the recovery owner to be removed.\\n     */\\n    function removeRecoveryOwner(address prevRecoveryOwner, address recoveryOwnerToRemove) external;\\n\\n    /**\\n     * @return Array of guardians for this wallet.\\n     */\\n    function getGuardians() external view returns (address[] memory);\\n\\n    /**\\n     * @return Array of recovery owners for this wallet.\\n     */\\n    function getRecoveryOwners() external view returns (address[] memory);\\n\\n    /**\\n     * @return Boolean if the wallet is locked.\\n     */\\n    function isLocked() external view returns (bool);\\n\\n    /**\\n     * @return The time (block.timestamp) when the wallet was locked.\\n     */\\n    function getConfigTimestamp() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x40d3d3afbb68dc68b3eafbedd0cfe4a1731a61241cfdba733d1c806b85131bc9\",\"license\":\"LGPL-3.0-only\"},\"contracts/interfaces/ILaserWallet.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.16;\\n\\nstruct Transaction {\\n    address to;\\n    uint256 value;\\n    bytes callData;\\n    uint256 nonce;\\n    bytes signatures;\\n}\\n\\n/**\\n * @title  ILaserWallet\\n *\\n * @author Rodrigo Herrera I.\\n *\\n * @notice Laser is a secure smart contract wallet (vault) made for the Ethereum Virtual Machine.\\n *\\n * @dev    This interface has all events, errors, and external function for LaserWallet.\\n */\\ninterface ILaserWallet {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event ExecSuccess(address to, uint256 value, uint256 nonce, bytes4 funcSig);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                                 ERRORS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    error LW__init__notOwner();\\n\\n    error LW__exec__invalidNonce();\\n\\n    error LW__exec__walletLocked();\\n\\n    error LW__exec__invalidSignatureLength();\\n\\n    error LW__exec__invalidSignature();\\n\\n    error LW__exec__callFailed();\\n\\n    error LW__recovery__invalidNonce();\\n\\n    error LW__recovery__invalidSignatureLength();\\n\\n    error LW__recovery__duplicateSigner();\\n\\n    error LW__recoveryLock__invalidSignature();\\n\\n    error LW__recoveryUnlock__invalidSignature();\\n\\n    error LW__recoveryRecover__invalidSignature();\\n\\n    error LW__recovery__invalidOperation();\\n\\n    error LW__recovery__callFailed();\\n\\n    error LaserWallet__invalidSignature();\\n\\n    /*//////////////////////////////////////////////////////////////\\n                                EXTERNAL\\n    //////////////////////////////////////////////////////////////*/\\n\\n    /**\\n     * @notice Setup function, sets initial storage of the wallet.\\n     *         It can't be called after initialization.\\n     *\\n     * @param _owner           The owner of the wallet.\\n     * @param _guardians       Array of guardians.\\n     * @param _recoveryOwners  Array of recovery owners.\\n     * @param ownerSignature   Signature of the owner that validates the correctness of the address.\\n     */\\n    function init(\\n        address _owner,\\n        address[] calldata _guardians,\\n        address[] calldata _recoveryOwners,\\n        bytes calldata ownerSignature\\n    ) external;\\n\\n    /**\\n     * @notice Executes a generic transaction.\\n     *         The transaction is required to be signed by the owner + recovery owner or owner + guardian\\n     *         while the wallet is not locked.\\n     *\\n     * @param to         Destination address.\\n     * @param value      Amount in WEI to transfer.\\n     * @param callData   Data payload to send.\\n     * @param _nonce     Anti-replay number.\\n     * @param signatures Signatures of the hash of the transaction.\\n     */\\n    function exec(\\n        address to,\\n        uint256 value,\\n        bytes calldata callData,\\n        uint256 _nonce,\\n        bytes calldata signatures\\n    ) external returns (bool success);\\n\\n    /**\\n     * @notice Executes a batch of transactions.\\n     *\\n     * @param transactions An array of Laser transactions.\\n     */\\n    function multiCall(Transaction[] calldata transactions) external;\\n\\n    /**\\n     * @notice Triggers the recovery mechanism.\\n     *\\n     * @param callData   Data payload, can only be either lock(), unlock() or recover().\\n     * @param signatures Signatures of the hash of the transaction.\\n     */\\n    function recovery(\\n        uint256 _nonce,\\n        bytes calldata callData,\\n        bytes calldata signatures\\n    ) external;\\n\\n    /**\\n     * @notice Returns the hash to be signed to execute a transaction.\\n     */\\n    function operationHash(\\n        address to,\\n        uint256 value,\\n        bytes calldata callData,\\n        uint256 _nonce\\n    ) external view returns (bytes32);\\n\\n    /**\\n     * @notice Should return whether the signature provided is valid for the provided hash.\\n     *\\n     * @param hash      Hash of the data to be signed.\\n     * @param signature Signature byte array associated with hash.\\n     *\\n     * MUST return the bytes4 magic value 0x1626ba7e when function passes.\\n     * MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5)\\n     * MUST allow external calls\\n     *\\n     * @return Magic value.\\n     */\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4);\\n\\n    /**\\n     * @return chainId The chain id of this.\\n     */\\n    function getChainId() external view returns (uint256 chainId);\\n\\n    /**\\n     * @notice Domain separator for this wallet.\\n     */\\n    function domainSeparator() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb2026df8a1ccb1dea29613ca5116c314d2fdbbe096114fe0af166efbb031abad\",\"license\":\"GPL-3.0\"},\"contracts/state/LaserState.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.16;\\n\\nimport \\\"../access/Access.sol\\\";\\nimport \\\"../common/Utils.sol\\\";\\nimport \\\"../interfaces/IERC165.sol\\\";\\nimport \\\"../interfaces/ILaserState.sol\\\";\\n\\n/**\\n * @title   LaserState\\n *\\n * @author  Rodrigo Herrera I.\\n *\\n * @notice  Has all the state(storage) for a Laser wallet and implements\\n *          Smart Social Recovery.\\n */\\ncontract LaserState is ILaserState, Access {\\n    address internal constant POINTER = address(0x1); // POINTER for the link list.\\n\\n    /*//////////////////////////////////////////////////////////////\\n                          LASER WALLET STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    address public singleton;\\n\\n    address public owner;\\n\\n    uint256 public nonce;\\n\\n    uint256 internal guardianCount;\\n\\n    uint256 internal recoveryOwnerCount;\\n\\n    mapping(address => address) public guardians;\\n\\n    mapping(address => address) public recoveryOwners;\\n\\n    WalletConfig walletConfig;\\n\\n    /**\\n     * @notice Locks the wallet. Can only be called by a recovery owner + recovery owner\\n     *         or recovery owner + guardian.\\n     *\\n     * @dev    Restricted, can only be called by address(this).\\n     */\\n    function lock() external access {\\n        walletConfig.isLocked = true;\\n        walletConfig.timestamp = block.timestamp;\\n\\n        emit WalletLocked();\\n    }\\n\\n    /**\\n     * @notice Unlocks the wallet. Can only be called by the owner + recovery owner\\n     *         or owner + guardian.\\n     *\\n     * @dev    Restricted, can only be called by address(this).\\n     */\\n    function unlock() external access {\\n        walletConfig.isLocked = false;\\n        walletConfig.timestamp = 0;\\n\\n        emit WalletUnlocked();\\n    }\\n\\n    /**\\n     * @notice Recovers the wallet. Can only be called by the recovery owner + recovery owner\\n     *         or recovery owner + guardian.\\n     *\\n     * @dev   Restricted, can only be called by address(this).\\n     *\\n     * @param newOwner  Address of the new owner.\\n     */\\n    function recover(address newOwner) external access {\\n        uint256 elapsedTime = block.timestamp - walletConfig.timestamp;\\n\\n        if (5 days > elapsedTime) revert LS__recover__timeLock();\\n\\n        if (newOwner.code.length != 0 || newOwner == owner || newOwner == address(0)) {\\n            revert LS__recover__invalidAddress();\\n        }\\n\\n        owner = newOwner;\\n        walletConfig.isLocked = false;\\n        walletConfig.timestamp = 0;\\n\\n        emit WalletRecovered(newOwner);\\n    }\\n\\n    /**\\n     * @notice Changes the owner of the wallet. Can only be called by the owner + recovery owner\\n     *         or owner + guardian.\\n     *\\n     * @dev   Restricted, can only be called by address(this).\\n     *\\n     * @param newOwner  Address of the new owner.\\n     */\\n    function changeOwner(address newOwner) external access {\\n        if (newOwner.code.length != 0 || newOwner == owner || newOwner == address(0)) {\\n            revert LS__changeOwner__invalidAddress();\\n        }\\n\\n        owner = newOwner;\\n\\n        emit OwnerChanged(newOwner);\\n    }\\n\\n    /**\\n     * @notice Changes the singleton. Can only be called by the owner + recovery owner\\n     *         or owner + guardian.\\n     *\\n     * @dev   Restricted, can only be called by address(this).\\n     *\\n     * @param newSingleton  Address of the new singleton.\\n     */\\n    function changeSingleton(address newSingleton) external access {\\n        //bytes4(keccak256(\\\"I_AM_LASER\\\"))\\n        if (\\n            newSingleton == singleton ||\\n            newSingleton == address(this) ||\\n            !IERC165(newSingleton).supportsInterface(0xae029e0b)\\n        ) revert LS__changeSingleton__invalidAddress();\\n\\n        singleton = newSingleton;\\n\\n        emit SingletonChanged(newSingleton);\\n    }\\n\\n    /**\\n     * @notice Adds a new guardian. Can only be called by the owner + recovery owner\\n     *         or owner + guardian.\\n     *\\n     * @dev   Restricted, can only be called by address(this).\\n     *\\n     * @param newGuardian  Address of the new guardian.\\n     */\\n    function addGuardian(address newGuardian) external access {\\n        if (\\n            newGuardian == address(0) ||\\n            newGuardian == owner ||\\n            guardians[newGuardian] != address(0) ||\\n            recoveryOwners[newGuardian] != address(0) ||\\n            newGuardian == POINTER\\n        ) revert LS__addGuardian__invalidAddress();\\n\\n        if (newGuardian.code.length > 0) {\\n            if (!IERC165(newGuardian).supportsInterface(0x1626ba7e)) {\\n                revert LS__addGuardian__invalidAddress();\\n            }\\n        }\\n\\n        guardians[newGuardian] = guardians[POINTER];\\n        guardians[POINTER] = newGuardian;\\n\\n        unchecked {\\n            guardianCount++;\\n        }\\n\\n        emit NewGuardian(newGuardian);\\n    }\\n\\n    /**\\n     * @notice Removes a guardian. Can only be called by the owner + recovery owner\\n     *         or owner + guardian.\\n     *\\n     * @dev   Restricted, can only be called by address(this).\\n     *\\n     * @param prevGuardian      Address of the previous guardian in the linked list.\\n     * @param guardianToRemove  Address of the guardian to be removed.\\n     */\\n    function removeGuardian(address prevGuardian, address guardianToRemove) external access {\\n        if (guardianToRemove == POINTER) {\\n            revert LS__removeGuardian__invalidAddress();\\n        }\\n\\n        if (guardians[prevGuardian] != guardianToRemove) {\\n            revert LS__removeGuardian__incorrectPreviousGuardian();\\n        }\\n\\n        // There needs to be at least 1 guardian.\\n        if (guardianCount - 1 < 1) revert LS__removeGuardian__underflow();\\n\\n        guardians[prevGuardian] = guardians[guardianToRemove];\\n        guardians[guardianToRemove] = address(0);\\n\\n        unchecked {\\n            guardianCount--;\\n        }\\n\\n        emit GuardianRemoved(guardianToRemove);\\n    }\\n\\n    /**\\n     * @notice Adds a new recovery owner. Can only be called by the owner + recovery owner\\n     *         or owner + guardian.\\n     *\\n     * @dev   Restricted, can only be called by address(this).\\n     *\\n     * @param newRecoveryOwner  Address of the new recovery owner.\\n     */\\n    function addRecoveryOwner(address newRecoveryOwner) external access {\\n        if (\\n            newRecoveryOwner == address(0) ||\\n            newRecoveryOwner == owner ||\\n            recoveryOwners[newRecoveryOwner] != address(0) ||\\n            guardians[newRecoveryOwner] != address(0) ||\\n            newRecoveryOwner == POINTER\\n        ) revert LS__addRecoveryOwner__invalidAddress();\\n\\n        if (newRecoveryOwner.code.length > 0) {\\n            if (!IERC165(newRecoveryOwner).supportsInterface(0x1626ba7e)) {\\n                revert LS__addRecoveryOwner__invalidAddress();\\n            }\\n        }\\n\\n        recoveryOwners[newRecoveryOwner] = recoveryOwners[POINTER];\\n        recoveryOwners[POINTER] = newRecoveryOwner;\\n\\n        unchecked {\\n            recoveryOwnerCount++;\\n        }\\n\\n        emit NewRecoveryOwner(newRecoveryOwner);\\n    }\\n\\n    /**\\n     * @notice Removes a recovery owner. Can only be called by the owner + recovery owner\\n     *         or owner + guardian.\\n     *\\n     * @dev   Restricted, can only be called by address(this).\\n     *\\n     * @param prevRecoveryOwner      Address of the previous recovery owner in the linked list.\\n     * @param recoveryOwnerToRemove  Address of the recovery owner to be removed.\\n     */\\n    function removeRecoveryOwner(address prevRecoveryOwner, address recoveryOwnerToRemove) external access {\\n        if (recoveryOwnerToRemove == POINTER) {\\n            revert LS__removeRecoveryOwner__invalidAddress();\\n        }\\n\\n        if (recoveryOwners[prevRecoveryOwner] != recoveryOwnerToRemove) {\\n            revert LS__removeRecoveryOwner__incorrectPreviousGuardian();\\n        }\\n\\n        // There needs to be at least 1 recovery owner.\\n        if (recoveryOwnerCount - 1 < 1) revert LS__removeRecoveryOwner__underflow();\\n\\n        recoveryOwners[prevRecoveryOwner] = recoveryOwners[recoveryOwnerToRemove];\\n        recoveryOwners[recoveryOwnerToRemove] = address(0);\\n\\n        unchecked {\\n            recoveryOwnerCount--;\\n        }\\n\\n        emit RecoveryOwnerRemoved(recoveryOwnerToRemove);\\n    }\\n\\n    /**\\n     * @return Array of guardians for this wallet.\\n     */\\n    function getGuardians() external view returns (address[] memory) {\\n        address[] memory guardiansArray = new address[](guardianCount);\\n        address currentGuardian = guardians[POINTER];\\n\\n        uint256 index = 0;\\n        while (currentGuardian != POINTER) {\\n            guardiansArray[index] = currentGuardian;\\n            currentGuardian = guardians[currentGuardian];\\n            index++;\\n        }\\n        return guardiansArray;\\n    }\\n\\n    /**\\n     * @return Array of recovery owners for this wallet.\\n     */\\n    function getRecoveryOwners() external view returns (address[] memory) {\\n        address[] memory recoveryOwnersArray = new address[](recoveryOwnerCount);\\n        address currentRecoveryOwner = recoveryOwners[POINTER];\\n\\n        uint256 index = 0;\\n        while (currentRecoveryOwner != POINTER) {\\n            recoveryOwnersArray[index] = currentRecoveryOwner;\\n            currentRecoveryOwner = recoveryOwners[currentRecoveryOwner];\\n            index++;\\n        }\\n        return recoveryOwnersArray;\\n    }\\n\\n    /**\\n     * @return Boolean if the wallet is locked.\\n     */\\n    function isLocked() external view returns (bool) {\\n        return walletConfig.isLocked;\\n    }\\n\\n    /**\\n     * @return The time (block.timestamp) when the wallet was locked.\\n     */\\n    function getConfigTimestamp() external view returns (uint256) {\\n        return walletConfig.timestamp;\\n    }\\n\\n    /**\\n     * @notice Inits the guardians.\\n     *\\n     * @param _guardians Array of guardian addresses.\\n     */\\n    function initGuardians(address[] calldata _guardians) internal {\\n        uint256 guardiansLength = _guardians.length;\\n        // There needs to be at least 1 guardian.\\n        if (guardiansLength < 1) revert LS__initGuardians__underflow();\\n\\n        address currentGuardian = POINTER;\\n\\n        for (uint256 i = 0; i < guardiansLength; ) {\\n            address guardian = _guardians[i];\\n            if (\\n                guardian == owner ||\\n                guardian == address(0) ||\\n                guardian == POINTER ||\\n                guardian == currentGuardian ||\\n                guardians[guardian] != address(0)\\n            ) revert LS__initGuardians__invalidAddress();\\n\\n            if (guardian.code.length > 0) {\\n                // If the guardian is a smart contract wallet, it needs to support EIP1271.\\n                if (!IERC165(guardian).supportsInterface(0x1626ba7e)) {\\n                    revert LS__initGuardians__invalidAddress();\\n                }\\n            }\\n\\n            unchecked {\\n                i++;\\n            }\\n            guardians[currentGuardian] = guardian;\\n            currentGuardian = guardian;\\n        }\\n\\n        guardians[currentGuardian] = POINTER;\\n        guardianCount = guardiansLength;\\n    }\\n\\n    /**\\n     * @notice Inits the recovery owners.\\n     *\\n     * @param _recoveryOwners Array of recovery owner addresses.\\n     */\\n    function initRecoveryOwners(address[] calldata _recoveryOwners) internal {\\n        uint256 recoveryOwnersLength = _recoveryOwners.length;\\n        // There needs to be at least 1 recovery owner.\\n        if (recoveryOwnersLength < 1) revert LS__initRecoveryOwners__underflow();\\n\\n        address currentRecoveryOwner = POINTER;\\n\\n        for (uint256 i = 0; i < recoveryOwnersLength; ) {\\n            address recoveryOwner = _recoveryOwners[i];\\n            if (\\n                recoveryOwner == owner ||\\n                recoveryOwner == address(0) ||\\n                recoveryOwner == POINTER ||\\n                recoveryOwner == currentRecoveryOwner ||\\n                recoveryOwners[recoveryOwner] != address(0) ||\\n                guardians[recoveryOwner] != address(0)\\n            ) revert LS__initRecoveryOwners__invalidAddress();\\n\\n            if (recoveryOwner.code.length > 0) {\\n                // If the recovery owner is a smart contract wallet, it needs to support EIP1271.\\n                if (!IERC165(recoveryOwner).supportsInterface(0x1626ba7e)) {\\n                    revert LS__initRecoveryOwners__invalidAddress();\\n                }\\n            }\\n\\n            unchecked {\\n                i++;\\n            }\\n            recoveryOwners[currentRecoveryOwner] = recoveryOwner;\\n            currentRecoveryOwner = recoveryOwner;\\n        }\\n\\n        recoveryOwners[currentRecoveryOwner] = POINTER;\\n        recoveryOwnerCount = recoveryOwnersLength;\\n    }\\n\\n    /**\\n     * @notice Activates the wallet for the first time.\\n     *\\n     * @dev    Cannot be called after initialization.\\n     */\\n    function activateWallet(\\n        address _owner,\\n        address[] calldata _guardians,\\n        address[] calldata _recoveryOwners\\n    ) internal {\\n        // If owner is not address(0), the wallet is already active.\\n        if (owner != address(0)) revert LS__activateWallet__walletInitialized();\\n\\n        if (_owner.code.length != 0) {\\n            revert LS__activateWallet__invalidOwnerAddress();\\n        }\\n\\n        // We set the owner. There is no need for further verification.\\n        owner = _owner;\\n\\n        // We init the guardians.\\n        initGuardians(_guardians);\\n\\n        // We init the recovery owners.\\n        initRecoveryOwners(_recoveryOwners);\\n    }\\n}\\n\",\"keccak256\":\"0x235e118821d0185c2e65e5a7d891702c2d3ab7655286f577dd51452480dc1c49\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600180546001600160a01b03191630179055612d70806100326000396000f3fe6080604052600436106102015760003560e01c80638da5cb5b1161011d578063b62654fb116100b0578063f23a6e611161007f578063f83d08ba11610064578063f83d08ba146106a1578063fa43cec5146106b6578063ffa1ad74146106ec57600080fd5b8063f23a6e611461060d578063f698da251461063a57600080fd5b8063b62654fb14610589578063bc197c81146105a9578063c194a046146105d8578063d2477f03146105ed57600080fd5b8063a526d83b116100ec578063a526d83b1461051e578063a69df4b51461053e578063a6f9dae114610553578063affed0e01461057357600080fd5b80638da5cb5b146104705780639b27a90e14610490578063a3f4df7e146104b0578063a4e2d6341461050657600080fd5b8063238504531161019557806353b8b52b1161016457806353b8b52b146103f05780636f757f381461041057806377e8165d1461043057806384ec720c1461045057600080fd5b8063238504531461037e5780632909f9a21461039d57806333c48119146103bd5780633408e470146103dd57600080fd5b80630cd865ec116101d15780630cd865ec146102d95780630f721c46146102f9578063150b7a02146103195780631626ba7e1461035e57600080fd5b806223de291461020d57806301ffc9a7146102345780630633b14a146102695780630665f04b146102b757600080fd5b3661020857005b600080fd5b34801561021957600080fd5b506102326102283660046124bd565b5050505050505050565b005b34801561024057600080fd5b5061025461024f366004612581565b610735565b60405190151581526020015b60405180910390f35b34801561027557600080fd5b5061029f6102843660046125a5565b6005602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610260565b3480156102c357600080fd5b506102cc6107d8565b60405161026091906125c0565b3480156102e557600080fd5b506102326102f43660046125a5565b6108ce565b34801561030557600080fd5b50610232610314366004612652565b6109de565b34801561032557600080fd5b50610345610334366004612694565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610260565b34801561036a57600080fd5b50610345610379366004612719565b610a55565b34801561038a57600080fd5b506008545b604051908152602001610260565b3480156103a957600080fd5b506102326103b83660046127d4565b610afe565b3480156103c957600080fd5b506102546103d8366004612807565b610c34565b3480156103e957600080fd5b504661038f565b3480156103fc57600080fd5b5061023261040b3660046125a5565b610e9b565b34801561041c57600080fd5b5061023261042b36600461289b565b610fc9565b34801561043c57600080fd5b5061023261044b366004612904565b611399565b34801561045c57600080fd5b5061023261046b3660046125a5565b61145a565b34801561047c57600080fd5b5060015461029f906001600160a01b031681565b34801561049c57600080fd5b506102326104ab3660046127d4565b61164d565b3480156104bc57600080fd5b506104f96040518060400160405280600c81526020017f4c617365722057616c6c6574000000000000000000000000000000000000000081525081565b60405161026091906129d5565b34801561051257600080fd5b5060075460ff16610254565b34801561052a57600080fd5b506102326105393660046125a5565b611783565b34801561054a57600080fd5b50610232611976565b34801561055f57600080fd5b5061023261056e3660046125a5565b6119d0565b34801561057f57600080fd5b5061038f60025481565b34801561059557600080fd5b5060005461029f906001600160a01b031681565b3480156105b557600080fd5b506103456105c43660046129e8565b63bc197c8160e01b98975050505050505050565b3480156105e457600080fd5b506102cc611a93565b3480156105f957600080fd5b5061038f610608366004612a82565b611b81565b34801561061957600080fd5b50610345610628366004612ae4565b63f23a6e6160e01b9695505050505050565b34801561064657600080fd5b5061038f60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b3480156106ad57600080fd5b50610232611ba2565b3480156106c257600080fd5b5061029f6106d13660046125a5565b6006602052600090815260409020546001600160a01b031681565b3480156106f857600080fd5b506104f96040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b60006301ffc9a760e01b6001600160e01b0319831614806107665750630b135d3f60e11b6001600160e01b03198316145b806107815750636cdb3d1360e11b6001600160e01b03198316145b8061079c5750630271189760e51b6001600160e01b03198316145b806107b7575063ae029e0b60e01b6001600160e01b03198316145b806107d25750630a85bd0160e11b6001600160e01b03198316145b92915050565b6060600060035467ffffffffffffffff8111156107f7576107f7612703565b604051908082528060200260200182016040528015610820578160200160208202803683370190505b506001600090815260056020527f1471eb6eb2c5e789fc3de43f8ce62938c7d1836ec861730447e2ada8fd81017b549192506001600160a01b03909116905b6001600160a01b0382166001146108c6578183828151811061088357610883612b5c565b6001600160a01b039283166020918202929092018101919091529281166000908152600590935260409092205490911690806108be81612b88565b91505061085f565b509092915050565b3330146108ee5760405163bc8bd71160e01b815260040160405180910390fd5b6008546000906108fe9042612ba1565b905080620697801115610924576040516318e7b2b160e21b815260040160405180910390fd5b6001600160a01b0382163b15158061094957506001546001600160a01b038381169116145b8061095b57506001600160a01b038216155b1561097957604051630e3e8aa560e21b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0384169081179091556007805460ff1916905560006008556040519081527ff8b0d9f949d0419338bbce471b281004fd4c9528336fd83b96027356790b9f2c906020015b60405180910390a15050565b8060005b81811015610a4f57368484838181106109fd576109fd612b5c565b9050602002810190610a0f9190612bb4565b9050610a45610a2160208301836125a5565b6020830135610a336040850185612bd4565b60608601356103d86080880188612bd4565b50506001016109e2565b50505050565b600080610a6484846000611bfe565b90506000610a7485856001611bfe565b6001549091506001600160a01b038381169116141580610acf57506001600160a01b0381811660009081526006602052604090205416158015610acf57506001600160a01b0381811660009081526005602052604090205416155b15610aed576040516325dc3e7760e21b815260040160405180910390fd5b50630b135d3f60e11b949350505050565b333014610b1e5760405163bc8bd71160e01b815260040160405180910390fd5b6000196001600160a01b03821601610b4957604051631e233d7b60e11b815260040160405180910390fd5b6001600160a01b03828116600090815260066020526040902054811690821614610b8657604051638a7fd42360e01b815260040160405180910390fd5b600180600454610b969190612ba1565b1015610bb5576040516358dd61f360e11b815260040160405180910390fd5b6001600160a01b038181166000818152600660209081526040808320805488871685528285208054919097166001600160a01b0319918216179096559284905282549094169091556004805460001901905591519081527f7a2a8d37ed276dc71feb15ae98c847c3e205e6a424eec35d2c2ac66500b85ad091016109d2565b60028054600181019091556000908414610c6157604051636f4f3db760e11b815260040160405180910390fd5b60075460ff1615610c8557604051632e28c77b60e21b815260040160405180910390fd5b6000610c948989898989611e56565b805160209091012090506082831015610cc05760405163fd7281c160e01b815260040160405180910390fd5b6000610d028286868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250611bfe915050565b90506000610d498387878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525060019250611bfe915050565b6001549091506001600160a01b038381169116141580610da457506001600160a01b0381811660009081526006602052604090205416158015610da457506001600160a01b0381811660009081526005602052604090205416155b15610dc257604051633714b8cf60e11b815260040160405180910390fd5b610e038b8b8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050505a611fab565b935083610e23576040516309c5ac8560e01b815260040160405180910390fd5b7fcbea538632bfc5a90a427e4804d9782a1ba295db6ad11500c4ff7bcbf39d17c38b8b6002548c8c90610e569190612c1b565b604080516001600160a01b0390951685526020850193909352918301526001600160e01b031916606082015260800160405180910390a1505050979650505050505050565b333014610ebb5760405163bc8bd71160e01b815260040160405180910390fd5b6000546001600160a01b0382811691161480610edf57506001600160a01b03811630145b80610f5657506040516301ffc9a760e01b815263ae029e0b60e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610f30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f549190612c4b565b155b15610f745760405163d3493b0360e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fad04cda32d7774350bace4bdca605ed7431195e8c78235e484626b2785de816d906020015b60405180910390a150565b60028054600181019091558514610ff357604051630aba494d60e21b815260040160405180910390fd5b6000610fff8486612c1b565b9050608282101561102357604051632f19059960e01b815260040160405180910390fd5b6000868686604051611036929190612c6d565b604051908190038120611078929130904690602001938452602084019290925260601b6bffffffffffffffffffffffff19166040830152605482015260740190565b60405160208183030381529060405280519060200120905060006110d28286868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250611bfe915050565b905060006111198387878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525060019250611bfe915050565b9050806001600160a01b0316826001600160a01b03160361114d57604051630840038960e11b815260040160405180910390fd5b6001600160e01b03198416637c1e845d60e11b036111ea576001600160a01b038281166000908152600660205260409020541615806111c757506001600160a01b03818116600090815260066020526040902054161580156111c757506001600160a01b0381811660009081526005602052604090205416155b156111e55760405163b726f25960e01b815260040160405180910390fd5b611329565b6001600160e01b0319841663a69df4b560e01b03611278576001546001600160a01b03838116911614158061125a57506001600160a01b038181166000908152600660205260409020541615801561125a57506001600160a01b0381811660009081526005602052604090205416155b156111e5576040516317dce57360e31b815260040160405180910390fd5b6001600160e01b03198416630336197b60e21b03611310576001600160a01b038281166000908152600660205260409020541615806112f257506001600160a01b03818116600090815260066020526040902054161580156112f257506001600160a01b0381811660009081526005602052604090205416155b156111e557604051631f7fcc0960e11b815260040160405180910390fd5b60405163f37914d560e01b815260040160405180910390fd5b600061136d3060008b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050505a611fab565b90508061138d5760405163365b2d8d60e01b815260040160405180910390fd5b50505050505050505050565b6113a68787878787611fc3565b600086868686466040516020016113c1959493929190612cbc565b604051602081830303815290604052805190602001209050600061141b8285858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250611bfe915050565b9050886001600160a01b0316816001600160a01b03161461144f57604051637b0dd98160e01b815260040160405180910390fd5b505050505050505050565b33301461147a5760405163bc8bd71160e01b815260040160405180910390fd5b6001600160a01b038116158061149d57506001546001600160a01b038281169116145b806114c157506001600160a01b038181166000908152600660205260409020541615155b806114e557506001600160a01b038181166000908152600560205260409020541615155b806114f957506001600160a01b0381166001145b1561151757604051632dc76b7760e01b815260040160405180910390fd5b6001600160a01b0381163b156115b3576040516301ffc9a760e01b8152630b135d3f60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015611572573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115969190612c4b565b6115b357604051632dc76b7760e01b815260040160405180910390fd5b600660209081527f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a3180546001600160a01b03848116600081815260408082208054949095166001600160a01b03199485161790945560019081905284549092168117909355600480549091019055519081527f24b755696b711f89e9f520613bc428ad6a76ea9e0ea8ce1bcbc4a49d7117e7d49101610fbe565b33301461166d5760405163bc8bd71160e01b815260040160405180910390fd5b6000196001600160a01b0382160161169857604051632ca0364760e01b815260040160405180910390fd5b6001600160a01b038281166000908152600560205260409020548116908216146116d557604051636a4665bd60e11b815260040160405180910390fd5b6001806003546116e59190612ba1565b10156117045760405163367975bf60e21b815260040160405180910390fd5b6001600160a01b038181166000818152600560209081526040808320805488871685528285208054919097166001600160a01b0319918216179096559284905282549094169091556003805460001901905591519081527fb8107d0c6b40be480ce3172ee66ba6d64b71f6b1685a851340036e6e2e3e3c5291016109d2565b3330146117a35760405163bc8bd71160e01b815260040160405180910390fd5b6001600160a01b03811615806117c657506001546001600160a01b038281169116145b806117ea57506001600160a01b038181166000908152600560205260409020541615155b8061180e57506001600160a01b038181166000908152600660205260409020541615155b8061182257506001600160a01b0381166001145b156118405760405163126bd81960e31b815260040160405180910390fd5b6001600160a01b0381163b156118dc576040516301ffc9a760e01b8152630b135d3f60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801561189b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118bf9190612c4b565b6118dc5760405163126bd81960e31b815260040160405180910390fd5b600560209081527f1471eb6eb2c5e789fc3de43f8ce62938c7d1836ec861730447e2ada8fd81017b80546001600160a01b03848116600081815260408082208054949095166001600160a01b03199485161790945560019081905284549092168117909355600380549091019055519081527fb6182387b7ea948602a7e04e662a27ce251dc3dd014eacaed10dce36b41bf1a59101610fbe565b3330146119965760405163bc8bd71160e01b815260040160405180910390fd5b6007805460ff19169055600060088190556040517f63fc9aecb05834d2330c4dad03b320242fa9e8a10eb80cd31518efa9ed781b869190a1565b3330146119f05760405163bc8bd71160e01b815260040160405180910390fd5b6001600160a01b0381163b151580611a1557506001546001600160a01b038281169116145b80611a2757506001600160a01b038116155b15611a4557604051637eda7fe360e11b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527fa2ea9883a321a3e97b8266c2b078bfeec6d50c711ed71f874a90d500ae2eaf3690602001610fbe565b6060600060045467ffffffffffffffff811115611ab257611ab2612703565b604051908082528060200260200182016040528015611adb578160200160208202803683370190505b506001600090815260066020527f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a31549192506001600160a01b03909116905b6001600160a01b0382166001146108c65781838281518110611b3e57611b3e612b5c565b6001600160a01b03928316602091820292909201810191909152928116600090815260069093526040909220549091169080611b7981612b88565b915050611b1a565b6000611b908686868686611e56565b80519060200120905095945050505050565b333014611bc25760405163bc8bd71160e01b815260040160405180910390fd5b6007805460ff19166001179055426008556040517fd550ed24c5d3906c5831b36940c8eb789771469024f7963da735aaf15c59b9a290600090a1565b600080600080611c2886866041020160208101516040820151606090920151909260009190911a90565b9194509250905060ff8116600003611d0057604051630b135d3f60e11b81529293508392868301602001906001600160a01b03851690631626ba7e90611c74908b908590600401612ce3565b602060405180830381865afa158015611c91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb59190612d04565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916631626ba7e60e01b14611cfa576040516340aec60f60e11b815260040160405180910390fd5b50611e25565b601e8160ff161115611dc5576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101889052600190605c0160405160208183030381529060405280519060200120600483611d659190612d21565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015611db4573d6000803e3d6000fd5b505050602060405103519350611e25565b60408051600081526020810180835289905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015611e18573d6000803e3d6000fd5b5050506020604051035193505b6001600160a01b038416611e4c5760405163b9bf1d7d60e01b815260040160405180910390fd5b5050509392505050565b606060007f2ddf7281949289d8274013979a0525c9530850a6c72fa016e275c4c80bc3652087878787604051611e8d929190612c6d565b604051908190038120611ece9493929188906020019485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60408051601f1981840301815291905280516020909101209050601960f81b600160f81b611f4c60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b6040517fff00000000000000000000000000000000000000000000000000000000000000938416602082015292909116602183015260228201526042810182905260620160405160208183030381529060405291505095945050505050565b6000806000845160208601878987f195945050505050565b6001546001600160a01b031615611fed57604051636cf9adbb60e11b815260040160405180910390fd5b6001600160a01b0385163b1561201657604051630bf1bcdf60e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b03871617905561203b848461204c565b6120458282612240565b5050505050565b80600181101561206f5760405163024f5be560e41b815260040160405180910390fd5b600160005b8281101561221057600085858381811061209057612090612b5c565b90506020020160208101906120a591906125a5565b6001549091506001600160a01b03808316911614806120cb57506001600160a01b038116155b806120df57506001600160a01b0381166001145b806120fb5750826001600160a01b0316816001600160a01b0316145b8061211f57506001600160a01b038181166000908152600560205260409020541615155b1561213d57604051636e20250f60e01b815260040160405180910390fd5b6001600160a01b0381163b156121d9576040516301ffc9a760e01b8152630b135d3f60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015612198573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121bc9190612c4b565b6121d957604051636e20250f60e01b815260040160405180910390fd5b6001600160a01b03928316600090815260056020526040902080546001600160a01b03191693821693909317909255600101612074565b506001600160a01b0316600090815260056020526040902080546001600160a01b03191660011790556003555050565b80600181101561226357604051630bebdb8b60e01b815260040160405180910390fd5b600160005b8281101561242857600085858381811061228457612284612b5c565b905060200201602081019061229991906125a5565b6001549091506001600160a01b03808316911614806122bf57506001600160a01b038116155b806122d357506001600160a01b0381166001145b806122ef5750826001600160a01b0316816001600160a01b0316145b8061231357506001600160a01b038181166000908152600660205260409020541615155b8061233757506001600160a01b038181166000908152600560205260409020541615155b1561235557604051633a4723cb60e01b815260040160405180910390fd5b6001600160a01b0381163b156123f1576040516301ffc9a760e01b8152630b135d3f60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156123b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d49190612c4b565b6123f157604051633a4723cb60e01b815260040160405180910390fd5b6001600160a01b03928316600090815260066020526040902080546001600160a01b03191693821693909317909255600101612268565b506001600160a01b0316600090815260066020526040902080546001600160a01b03191660011790556004555050565b80356001600160a01b038116811461246f57600080fd5b919050565b60008083601f84011261248657600080fd5b50813567ffffffffffffffff81111561249e57600080fd5b6020830191508360208285010111156124b657600080fd5b9250929050565b60008060008060008060008060c0898b0312156124d957600080fd5b6124e289612458565b97506124f060208a01612458565b96506124fe60408a01612458565b955060608901359450608089013567ffffffffffffffff8082111561252257600080fd5b61252e8c838d01612474565b909650945060a08b013591508082111561254757600080fd5b506125548b828c01612474565b999c989b5096995094979396929594505050565b6001600160e01b03198116811461257e57600080fd5b50565b60006020828403121561259357600080fd5b813561259e81612568565b9392505050565b6000602082840312156125b757600080fd5b61259e82612458565b6020808252825182820181905260009190848201906040850190845b818110156126015783516001600160a01b0316835292840192918401916001016125dc565b50909695505050505050565b60008083601f84011261261f57600080fd5b50813567ffffffffffffffff81111561263757600080fd5b6020830191508360208260051b85010111156124b657600080fd5b6000806020838503121561266557600080fd5b823567ffffffffffffffff81111561267c57600080fd5b6126888582860161260d565b90969095509350505050565b6000806000806000608086880312156126ac57600080fd5b6126b586612458565b94506126c360208701612458565b935060408601359250606086013567ffffffffffffffff8111156126e657600080fd5b6126f288828901612474565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561272c57600080fd5b82359150602083013567ffffffffffffffff8082111561274b57600080fd5b818501915085601f83011261275f57600080fd5b81358181111561277157612771612703565b604051601f8201601f19908116603f0116810190838211818310171561279957612799612703565b816040528281528860208487010111156127b257600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080604083850312156127e757600080fd5b6127f083612458565b91506127fe60208401612458565b90509250929050565b600080600080600080600060a0888a03121561282257600080fd5b61282b88612458565b965060208801359550604088013567ffffffffffffffff8082111561284f57600080fd5b61285b8b838c01612474565b909750955060608a0135945060808a013591508082111561287b57600080fd5b506128888a828b01612474565b989b979a50959850939692959293505050565b6000806000806000606086880312156128b357600080fd5b85359450602086013567ffffffffffffffff808211156128d257600080fd5b6128de89838a01612474565b909650945060408801359150808211156128f757600080fd5b506126f288828901612474565b60008060008060008060006080888a03121561291f57600080fd5b61292888612458565b9650602088013567ffffffffffffffff8082111561294557600080fd5b6129518b838c0161260d565b909850965060408a013591508082111561296a57600080fd5b6129768b838c0161260d565b909650945060608a013591508082111561287b57600080fd5b6000815180845260005b818110156129b557602081850181015186830182015201612999565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061259e602083018461298f565b60008060008060008060008060a0898b031215612a0457600080fd5b612a0d89612458565b9750612a1b60208a01612458565b9650604089013567ffffffffffffffff80821115612a3857600080fd5b612a448c838d0161260d565b909850965060608b0135915080821115612a5d57600080fd5b612a698c838d0161260d565b909650945060808b013591508082111561254757600080fd5b600080600080600060808688031215612a9a57600080fd5b612aa386612458565b945060208601359350604086013567ffffffffffffffff811115612ac657600080fd5b612ad288828901612474565b96999598509660600135949350505050565b60008060008060008060a08789031215612afd57600080fd5b612b0687612458565b9550612b1460208801612458565b94506040870135935060608701359250608087013567ffffffffffffffff811115612b3e57600080fd5b612b4a89828a01612474565b979a9699509497509295939492505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612b9a57612b9a612b72565b5060010190565b818103818111156107d2576107d2612b72565b60008235609e19833603018112612bca57600080fd5b9190910192915050565b6000808335601e19843603018112612beb57600080fd5b83018035915067ffffffffffffffff821115612c0657600080fd5b6020019150368190038213156124b657600080fd5b6001600160e01b03198135818116916004851015612c435780818660040360031b1b83161692505b505092915050565b600060208284031215612c5d57600080fd5b8151801515811461259e57600080fd5b8183823760009101908152919050565b60008160005b84811015612cb2576001600160a01b03612c9c83612458565b1686526020958601959190910190600101612c83565b5093949350505050565b6000612cd3612ccc83888a612c7d565b8587612c7d565b9283525050602001949350505050565b828152604060208201526000612cfc604083018461298f565b949350505050565b600060208284031215612d1657600080fd5b815161259e81612568565b60ff82811682821603908111156107d2576107d2612b7256fea2646970667358221220554a5304d194a6fda9da09ee6856e4ced3cf1f889a251385492ee21edc526db964736f6c63430008100033",
  "deployedBytecode": "0x6080604052600436106102015760003560e01c80638da5cb5b1161011d578063b62654fb116100b0578063f23a6e611161007f578063f83d08ba11610064578063f83d08ba146106a1578063fa43cec5146106b6578063ffa1ad74146106ec57600080fd5b8063f23a6e611461060d578063f698da251461063a57600080fd5b8063b62654fb14610589578063bc197c81146105a9578063c194a046146105d8578063d2477f03146105ed57600080fd5b8063a526d83b116100ec578063a526d83b1461051e578063a69df4b51461053e578063a6f9dae114610553578063affed0e01461057357600080fd5b80638da5cb5b146104705780639b27a90e14610490578063a3f4df7e146104b0578063a4e2d6341461050657600080fd5b8063238504531161019557806353b8b52b1161016457806353b8b52b146103f05780636f757f381461041057806377e8165d1461043057806384ec720c1461045057600080fd5b8063238504531461037e5780632909f9a21461039d57806333c48119146103bd5780633408e470146103dd57600080fd5b80630cd865ec116101d15780630cd865ec146102d95780630f721c46146102f9578063150b7a02146103195780631626ba7e1461035e57600080fd5b806223de291461020d57806301ffc9a7146102345780630633b14a146102695780630665f04b146102b757600080fd5b3661020857005b600080fd5b34801561021957600080fd5b506102326102283660046124bd565b5050505050505050565b005b34801561024057600080fd5b5061025461024f366004612581565b610735565b60405190151581526020015b60405180910390f35b34801561027557600080fd5b5061029f6102843660046125a5565b6005602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610260565b3480156102c357600080fd5b506102cc6107d8565b60405161026091906125c0565b3480156102e557600080fd5b506102326102f43660046125a5565b6108ce565b34801561030557600080fd5b50610232610314366004612652565b6109de565b34801561032557600080fd5b50610345610334366004612694565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610260565b34801561036a57600080fd5b50610345610379366004612719565b610a55565b34801561038a57600080fd5b506008545b604051908152602001610260565b3480156103a957600080fd5b506102326103b83660046127d4565b610afe565b3480156103c957600080fd5b506102546103d8366004612807565b610c34565b3480156103e957600080fd5b504661038f565b3480156103fc57600080fd5b5061023261040b3660046125a5565b610e9b565b34801561041c57600080fd5b5061023261042b36600461289b565b610fc9565b34801561043c57600080fd5b5061023261044b366004612904565b611399565b34801561045c57600080fd5b5061023261046b3660046125a5565b61145a565b34801561047c57600080fd5b5060015461029f906001600160a01b031681565b34801561049c57600080fd5b506102326104ab3660046127d4565b61164d565b3480156104bc57600080fd5b506104f96040518060400160405280600c81526020017f4c617365722057616c6c6574000000000000000000000000000000000000000081525081565b60405161026091906129d5565b34801561051257600080fd5b5060075460ff16610254565b34801561052a57600080fd5b506102326105393660046125a5565b611783565b34801561054a57600080fd5b50610232611976565b34801561055f57600080fd5b5061023261056e3660046125a5565b6119d0565b34801561057f57600080fd5b5061038f60025481565b34801561059557600080fd5b5060005461029f906001600160a01b031681565b3480156105b557600080fd5b506103456105c43660046129e8565b63bc197c8160e01b98975050505050505050565b3480156105e457600080fd5b506102cc611a93565b3480156105f957600080fd5b5061038f610608366004612a82565b611b81565b34801561061957600080fd5b50610345610628366004612ae4565b63f23a6e6160e01b9695505050505050565b34801561064657600080fd5b5061038f60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b3480156106ad57600080fd5b50610232611ba2565b3480156106c257600080fd5b5061029f6106d13660046125a5565b6006602052600090815260409020546001600160a01b031681565b3480156106f857600080fd5b506104f96040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b60006301ffc9a760e01b6001600160e01b0319831614806107665750630b135d3f60e11b6001600160e01b03198316145b806107815750636cdb3d1360e11b6001600160e01b03198316145b8061079c5750630271189760e51b6001600160e01b03198316145b806107b7575063ae029e0b60e01b6001600160e01b03198316145b806107d25750630a85bd0160e11b6001600160e01b03198316145b92915050565b6060600060035467ffffffffffffffff8111156107f7576107f7612703565b604051908082528060200260200182016040528015610820578160200160208202803683370190505b506001600090815260056020527f1471eb6eb2c5e789fc3de43f8ce62938c7d1836ec861730447e2ada8fd81017b549192506001600160a01b03909116905b6001600160a01b0382166001146108c6578183828151811061088357610883612b5c565b6001600160a01b039283166020918202929092018101919091529281166000908152600590935260409092205490911690806108be81612b88565b91505061085f565b509092915050565b3330146108ee5760405163bc8bd71160e01b815260040160405180910390fd5b6008546000906108fe9042612ba1565b905080620697801115610924576040516318e7b2b160e21b815260040160405180910390fd5b6001600160a01b0382163b15158061094957506001546001600160a01b038381169116145b8061095b57506001600160a01b038216155b1561097957604051630e3e8aa560e21b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0384169081179091556007805460ff1916905560006008556040519081527ff8b0d9f949d0419338bbce471b281004fd4c9528336fd83b96027356790b9f2c906020015b60405180910390a15050565b8060005b81811015610a4f57368484838181106109fd576109fd612b5c565b9050602002810190610a0f9190612bb4565b9050610a45610a2160208301836125a5565b6020830135610a336040850185612bd4565b60608601356103d86080880188612bd4565b50506001016109e2565b50505050565b600080610a6484846000611bfe565b90506000610a7485856001611bfe565b6001549091506001600160a01b038381169116141580610acf57506001600160a01b0381811660009081526006602052604090205416158015610acf57506001600160a01b0381811660009081526005602052604090205416155b15610aed576040516325dc3e7760e21b815260040160405180910390fd5b50630b135d3f60e11b949350505050565b333014610b1e5760405163bc8bd71160e01b815260040160405180910390fd5b6000196001600160a01b03821601610b4957604051631e233d7b60e11b815260040160405180910390fd5b6001600160a01b03828116600090815260066020526040902054811690821614610b8657604051638a7fd42360e01b815260040160405180910390fd5b600180600454610b969190612ba1565b1015610bb5576040516358dd61f360e11b815260040160405180910390fd5b6001600160a01b038181166000818152600660209081526040808320805488871685528285208054919097166001600160a01b0319918216179096559284905282549094169091556004805460001901905591519081527f7a2a8d37ed276dc71feb15ae98c847c3e205e6a424eec35d2c2ac66500b85ad091016109d2565b60028054600181019091556000908414610c6157604051636f4f3db760e11b815260040160405180910390fd5b60075460ff1615610c8557604051632e28c77b60e21b815260040160405180910390fd5b6000610c948989898989611e56565b805160209091012090506082831015610cc05760405163fd7281c160e01b815260040160405180910390fd5b6000610d028286868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250611bfe915050565b90506000610d498387878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525060019250611bfe915050565b6001549091506001600160a01b038381169116141580610da457506001600160a01b0381811660009081526006602052604090205416158015610da457506001600160a01b0381811660009081526005602052604090205416155b15610dc257604051633714b8cf60e11b815260040160405180910390fd5b610e038b8b8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050505a611fab565b935083610e23576040516309c5ac8560e01b815260040160405180910390fd5b7fcbea538632bfc5a90a427e4804d9782a1ba295db6ad11500c4ff7bcbf39d17c38b8b6002548c8c90610e569190612c1b565b604080516001600160a01b0390951685526020850193909352918301526001600160e01b031916606082015260800160405180910390a1505050979650505050505050565b333014610ebb5760405163bc8bd71160e01b815260040160405180910390fd5b6000546001600160a01b0382811691161480610edf57506001600160a01b03811630145b80610f5657506040516301ffc9a760e01b815263ae029e0b60e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610f30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f549190612c4b565b155b15610f745760405163d3493b0360e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fad04cda32d7774350bace4bdca605ed7431195e8c78235e484626b2785de816d906020015b60405180910390a150565b60028054600181019091558514610ff357604051630aba494d60e21b815260040160405180910390fd5b6000610fff8486612c1b565b9050608282101561102357604051632f19059960e01b815260040160405180910390fd5b6000868686604051611036929190612c6d565b604051908190038120611078929130904690602001938452602084019290925260601b6bffffffffffffffffffffffff19166040830152605482015260740190565b60405160208183030381529060405280519060200120905060006110d28286868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250611bfe915050565b905060006111198387878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525060019250611bfe915050565b9050806001600160a01b0316826001600160a01b03160361114d57604051630840038960e11b815260040160405180910390fd5b6001600160e01b03198416637c1e845d60e11b036111ea576001600160a01b038281166000908152600660205260409020541615806111c757506001600160a01b03818116600090815260066020526040902054161580156111c757506001600160a01b0381811660009081526005602052604090205416155b156111e55760405163b726f25960e01b815260040160405180910390fd5b611329565b6001600160e01b0319841663a69df4b560e01b03611278576001546001600160a01b03838116911614158061125a57506001600160a01b038181166000908152600660205260409020541615801561125a57506001600160a01b0381811660009081526005602052604090205416155b156111e5576040516317dce57360e31b815260040160405180910390fd5b6001600160e01b03198416630336197b60e21b03611310576001600160a01b038281166000908152600660205260409020541615806112f257506001600160a01b03818116600090815260066020526040902054161580156112f257506001600160a01b0381811660009081526005602052604090205416155b156111e557604051631f7fcc0960e11b815260040160405180910390fd5b60405163f37914d560e01b815260040160405180910390fd5b600061136d3060008b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050505a611fab565b90508061138d5760405163365b2d8d60e01b815260040160405180910390fd5b50505050505050505050565b6113a68787878787611fc3565b600086868686466040516020016113c1959493929190612cbc565b604051602081830303815290604052805190602001209050600061141b8285858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250611bfe915050565b9050886001600160a01b0316816001600160a01b03161461144f57604051637b0dd98160e01b815260040160405180910390fd5b505050505050505050565b33301461147a5760405163bc8bd71160e01b815260040160405180910390fd5b6001600160a01b038116158061149d57506001546001600160a01b038281169116145b806114c157506001600160a01b038181166000908152600660205260409020541615155b806114e557506001600160a01b038181166000908152600560205260409020541615155b806114f957506001600160a01b0381166001145b1561151757604051632dc76b7760e01b815260040160405180910390fd5b6001600160a01b0381163b156115b3576040516301ffc9a760e01b8152630b135d3f60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015611572573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115969190612c4b565b6115b357604051632dc76b7760e01b815260040160405180910390fd5b600660209081527f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a3180546001600160a01b03848116600081815260408082208054949095166001600160a01b03199485161790945560019081905284549092168117909355600480549091019055519081527f24b755696b711f89e9f520613bc428ad6a76ea9e0ea8ce1bcbc4a49d7117e7d49101610fbe565b33301461166d5760405163bc8bd71160e01b815260040160405180910390fd5b6000196001600160a01b0382160161169857604051632ca0364760e01b815260040160405180910390fd5b6001600160a01b038281166000908152600560205260409020548116908216146116d557604051636a4665bd60e11b815260040160405180910390fd5b6001806003546116e59190612ba1565b10156117045760405163367975bf60e21b815260040160405180910390fd5b6001600160a01b038181166000818152600560209081526040808320805488871685528285208054919097166001600160a01b0319918216179096559284905282549094169091556003805460001901905591519081527fb8107d0c6b40be480ce3172ee66ba6d64b71f6b1685a851340036e6e2e3e3c5291016109d2565b3330146117a35760405163bc8bd71160e01b815260040160405180910390fd5b6001600160a01b03811615806117c657506001546001600160a01b038281169116145b806117ea57506001600160a01b038181166000908152600560205260409020541615155b8061180e57506001600160a01b038181166000908152600660205260409020541615155b8061182257506001600160a01b0381166001145b156118405760405163126bd81960e31b815260040160405180910390fd5b6001600160a01b0381163b156118dc576040516301ffc9a760e01b8152630b135d3f60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801561189b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118bf9190612c4b565b6118dc5760405163126bd81960e31b815260040160405180910390fd5b600560209081527f1471eb6eb2c5e789fc3de43f8ce62938c7d1836ec861730447e2ada8fd81017b80546001600160a01b03848116600081815260408082208054949095166001600160a01b03199485161790945560019081905284549092168117909355600380549091019055519081527fb6182387b7ea948602a7e04e662a27ce251dc3dd014eacaed10dce36b41bf1a59101610fbe565b3330146119965760405163bc8bd71160e01b815260040160405180910390fd5b6007805460ff19169055600060088190556040517f63fc9aecb05834d2330c4dad03b320242fa9e8a10eb80cd31518efa9ed781b869190a1565b3330146119f05760405163bc8bd71160e01b815260040160405180910390fd5b6001600160a01b0381163b151580611a1557506001546001600160a01b038281169116145b80611a2757506001600160a01b038116155b15611a4557604051637eda7fe360e11b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527fa2ea9883a321a3e97b8266c2b078bfeec6d50c711ed71f874a90d500ae2eaf3690602001610fbe565b6060600060045467ffffffffffffffff811115611ab257611ab2612703565b604051908082528060200260200182016040528015611adb578160200160208202803683370190505b506001600090815260066020527f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a31549192506001600160a01b03909116905b6001600160a01b0382166001146108c65781838281518110611b3e57611b3e612b5c565b6001600160a01b03928316602091820292909201810191909152928116600090815260069093526040909220549091169080611b7981612b88565b915050611b1a565b6000611b908686868686611e56565b80519060200120905095945050505050565b333014611bc25760405163bc8bd71160e01b815260040160405180910390fd5b6007805460ff19166001179055426008556040517fd550ed24c5d3906c5831b36940c8eb789771469024f7963da735aaf15c59b9a290600090a1565b600080600080611c2886866041020160208101516040820151606090920151909260009190911a90565b9194509250905060ff8116600003611d0057604051630b135d3f60e11b81529293508392868301602001906001600160a01b03851690631626ba7e90611c74908b908590600401612ce3565b602060405180830381865afa158015611c91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb59190612d04565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916631626ba7e60e01b14611cfa576040516340aec60f60e11b815260040160405180910390fd5b50611e25565b601e8160ff161115611dc5576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101889052600190605c0160405160208183030381529060405280519060200120600483611d659190612d21565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015611db4573d6000803e3d6000fd5b505050602060405103519350611e25565b60408051600081526020810180835289905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015611e18573d6000803e3d6000fd5b5050506020604051035193505b6001600160a01b038416611e4c5760405163b9bf1d7d60e01b815260040160405180910390fd5b5050509392505050565b606060007f2ddf7281949289d8274013979a0525c9530850a6c72fa016e275c4c80bc3652087878787604051611e8d929190612c6d565b604051908190038120611ece9493929188906020019485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60408051601f1981840301815291905280516020909101209050601960f81b600160f81b611f4c60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b6040517fff00000000000000000000000000000000000000000000000000000000000000938416602082015292909116602183015260228201526042810182905260620160405160208183030381529060405291505095945050505050565b6000806000845160208601878987f195945050505050565b6001546001600160a01b031615611fed57604051636cf9adbb60e11b815260040160405180910390fd5b6001600160a01b0385163b1561201657604051630bf1bcdf60e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b03871617905561203b848461204c565b6120458282612240565b5050505050565b80600181101561206f5760405163024f5be560e41b815260040160405180910390fd5b600160005b8281101561221057600085858381811061209057612090612b5c565b90506020020160208101906120a591906125a5565b6001549091506001600160a01b03808316911614806120cb57506001600160a01b038116155b806120df57506001600160a01b0381166001145b806120fb5750826001600160a01b0316816001600160a01b0316145b8061211f57506001600160a01b038181166000908152600560205260409020541615155b1561213d57604051636e20250f60e01b815260040160405180910390fd5b6001600160a01b0381163b156121d9576040516301ffc9a760e01b8152630b135d3f60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015612198573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121bc9190612c4b565b6121d957604051636e20250f60e01b815260040160405180910390fd5b6001600160a01b03928316600090815260056020526040902080546001600160a01b03191693821693909317909255600101612074565b506001600160a01b0316600090815260056020526040902080546001600160a01b03191660011790556003555050565b80600181101561226357604051630bebdb8b60e01b815260040160405180910390fd5b600160005b8281101561242857600085858381811061228457612284612b5c565b905060200201602081019061229991906125a5565b6001549091506001600160a01b03808316911614806122bf57506001600160a01b038116155b806122d357506001600160a01b0381166001145b806122ef5750826001600160a01b0316816001600160a01b0316145b8061231357506001600160a01b038181166000908152600660205260409020541615155b8061233757506001600160a01b038181166000908152600560205260409020541615155b1561235557604051633a4723cb60e01b815260040160405180910390fd5b6001600160a01b0381163b156123f1576040516301ffc9a760e01b8152630b135d3f60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156123b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d49190612c4b565b6123f157604051633a4723cb60e01b815260040160405180910390fd5b6001600160a01b03928316600090815260066020526040902080546001600160a01b03191693821693909317909255600101612268565b506001600160a01b0316600090815260066020526040902080546001600160a01b03191660011790556004555050565b80356001600160a01b038116811461246f57600080fd5b919050565b60008083601f84011261248657600080fd5b50813567ffffffffffffffff81111561249e57600080fd5b6020830191508360208285010111156124b657600080fd5b9250929050565b60008060008060008060008060c0898b0312156124d957600080fd5b6124e289612458565b97506124f060208a01612458565b96506124fe60408a01612458565b955060608901359450608089013567ffffffffffffffff8082111561252257600080fd5b61252e8c838d01612474565b909650945060a08b013591508082111561254757600080fd5b506125548b828c01612474565b999c989b5096995094979396929594505050565b6001600160e01b03198116811461257e57600080fd5b50565b60006020828403121561259357600080fd5b813561259e81612568565b9392505050565b6000602082840312156125b757600080fd5b61259e82612458565b6020808252825182820181905260009190848201906040850190845b818110156126015783516001600160a01b0316835292840192918401916001016125dc565b50909695505050505050565b60008083601f84011261261f57600080fd5b50813567ffffffffffffffff81111561263757600080fd5b6020830191508360208260051b85010111156124b657600080fd5b6000806020838503121561266557600080fd5b823567ffffffffffffffff81111561267c57600080fd5b6126888582860161260d565b90969095509350505050565b6000806000806000608086880312156126ac57600080fd5b6126b586612458565b94506126c360208701612458565b935060408601359250606086013567ffffffffffffffff8111156126e657600080fd5b6126f288828901612474565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561272c57600080fd5b82359150602083013567ffffffffffffffff8082111561274b57600080fd5b818501915085601f83011261275f57600080fd5b81358181111561277157612771612703565b604051601f8201601f19908116603f0116810190838211818310171561279957612799612703565b816040528281528860208487010111156127b257600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080604083850312156127e757600080fd5b6127f083612458565b91506127fe60208401612458565b90509250929050565b600080600080600080600060a0888a03121561282257600080fd5b61282b88612458565b965060208801359550604088013567ffffffffffffffff8082111561284f57600080fd5b61285b8b838c01612474565b909750955060608a0135945060808a013591508082111561287b57600080fd5b506128888a828b01612474565b989b979a50959850939692959293505050565b6000806000806000606086880312156128b357600080fd5b85359450602086013567ffffffffffffffff808211156128d257600080fd5b6128de89838a01612474565b909650945060408801359150808211156128f757600080fd5b506126f288828901612474565b60008060008060008060006080888a03121561291f57600080fd5b61292888612458565b9650602088013567ffffffffffffffff8082111561294557600080fd5b6129518b838c0161260d565b909850965060408a013591508082111561296a57600080fd5b6129768b838c0161260d565b909650945060608a013591508082111561287b57600080fd5b6000815180845260005b818110156129b557602081850181015186830182015201612999565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061259e602083018461298f565b60008060008060008060008060a0898b031215612a0457600080fd5b612a0d89612458565b9750612a1b60208a01612458565b9650604089013567ffffffffffffffff80821115612a3857600080fd5b612a448c838d0161260d565b909850965060608b0135915080821115612a5d57600080fd5b612a698c838d0161260d565b909650945060808b013591508082111561254757600080fd5b600080600080600060808688031215612a9a57600080fd5b612aa386612458565b945060208601359350604086013567ffffffffffffffff811115612ac657600080fd5b612ad288828901612474565b96999598509660600135949350505050565b60008060008060008060a08789031215612afd57600080fd5b612b0687612458565b9550612b1460208801612458565b94506040870135935060608701359250608087013567ffffffffffffffff811115612b3e57600080fd5b612b4a89828a01612474565b979a9699509497509295939492505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612b9a57612b9a612b72565b5060010190565b818103818111156107d2576107d2612b72565b60008235609e19833603018112612bca57600080fd5b9190910192915050565b6000808335601e19843603018112612beb57600080fd5b83018035915067ffffffffffffffff821115612c0657600080fd5b6020019150368190038213156124b657600080fd5b6001600160e01b03198135818116916004851015612c435780818660040360031b1b83161692505b505092915050565b600060208284031215612c5d57600080fd5b8151801515811461259e57600080fd5b8183823760009101908152919050565b60008160005b84811015612cb2576001600160a01b03612c9c83612458565b1686526020958601959190910190600101612c83565b5093949350505050565b6000612cd3612ccc83888a612c7d565b8587612c7d565b9283525050602001949350505050565b828152604060208201526000612cfc604083018461298f565b949350505050565b600060208284031215612d1657600080fd5b815161259e81612568565b60ff82811682821603908111156107d2576107d2612b7256fea2646970667358221220554a5304d194a6fda9da09ee6856e4ced3cf1f889a251385492ee21edc526db964736f6c63430008100033",
  "devdoc": {
    "author": "Rodrigo Herrera I.",
    "kind": "dev",
    "methods": {
      "addGuardian(address)": {
        "details": "Restricted, can only be called by address(this).",
        "params": {
          "newGuardian": "Address of the new guardian."
        }
      },
      "addRecoveryOwner(address)": {
        "details": "Restricted, can only be called by address(this).",
        "params": {
          "newRecoveryOwner": "Address of the new recovery owner."
        }
      },
      "changeOwner(address)": {
        "details": "Restricted, can only be called by address(this).",
        "params": {
          "newOwner": "Address of the new owner."
        }
      },
      "changeSingleton(address)": {
        "details": "Restricted, can only be called by address(this).",
        "params": {
          "newSingleton": "Address of the new singleton."
        }
      },
      "constructor": {
        "details": "Sets the owner of the implementation address (singleton) to 'this'.      This will make the base contract unusable, even though it does not have 'delegatecall'."
      },
      "exec(address,uint256,bytes,uint256,bytes)": {
        "params": {
          "_nonce": "Anti-replay number.",
          "callData": "Data payload to send.",
          "signatures": "Signatures of the hash of the transaction.",
          "to": "Destination address.",
          "value": "Amount in WEI to transfer."
        }
      },
      "getChainId()": {
        "returns": {
          "chainId": "The chain id of this."
        }
      },
      "getConfigTimestamp()": {
        "returns": {
          "_0": "The time (block.timestamp) when the wallet was locked."
        }
      },
      "getGuardians()": {
        "returns": {
          "_0": "Array of guardians for this wallet."
        }
      },
      "getRecoveryOwners()": {
        "returns": {
          "_0": "Array of recovery owners for this wallet."
        }
      },
      "init(address,address[],address[],bytes)": {
        "params": {
          "_guardians": "Array of guardians.",
          "_owner": "The owner of the wallet.",
          "_recoveryOwners": "Array of recovery owners.",
          "ownerSignature": "Signature of the owner that validates the correctness of the address."
        }
      },
      "isLocked()": {
        "returns": {
          "_0": "Boolean if the wallet is locked."
        }
      },
      "isValidSignature(bytes32,bytes)": {
        "params": {
          "hash": "Hash of the data to be signed.",
          "signature": "Signature byte array associated with hash. MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls"
        },
        "returns": {
          "_0": "Magic value."
        }
      },
      "lock()": {
        "details": "Restricted, can only be called by address(this)."
      },
      "multiCall((address,uint256,bytes,uint256,bytes)[])": {
        "params": {
          "transactions": "An array of Laser transactions."
        }
      },
      "recover(address)": {
        "details": "Restricted, can only be called by address(this).",
        "params": {
          "newOwner": "Address of the new owner."
        }
      },
      "recovery(uint256,bytes,bytes)": {
        "params": {
          "callData": "Data payload, can only be either lock(), unlock() or recover(address).",
          "signatures": "Signatures of the hash of the transaction."
        }
      },
      "removeGuardian(address,address)": {
        "details": "Restricted, can only be called by address(this).",
        "params": {
          "guardianToRemove": "Address of the guardian to be removed.",
          "prevGuardian": "Address of the previous guardian in the linked list."
        }
      },
      "removeRecoveryOwner(address,address)": {
        "details": "Restricted, can only be called by address(this).",
        "params": {
          "prevRecoveryOwner": "Address of the previous recovery owner in the linked list.",
          "recoveryOwnerToRemove": "Address of the recovery owner to be removed."
        }
      },
      "unlock()": {
        "details": "Restricted, can only be called by address(this)."
      }
    },
    "title": "LaserWallet",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addGuardian(address)": {
        "notice": "Adds a new guardian. Can only be called by the owner + recovery owner         or owner + guardian."
      },
      "addRecoveryOwner(address)": {
        "notice": "Adds a new recovery owner. Can only be called by the owner + recovery owner         or owner + guardian."
      },
      "changeOwner(address)": {
        "notice": "Changes the owner of the wallet. Can only be called by the owner + recovery owner         or owner + guardian."
      },
      "changeSingleton(address)": {
        "notice": "Changes the singleton. Can only be called by the owner + recovery owner         or owner + guardian."
      },
      "domainSeparator()": {
        "notice": "Domain separator for this wallet."
      },
      "exec(address,uint256,bytes,uint256,bytes)": {
        "notice": "Executes a generic transaction.         The transaction is required to be signed by the owner + recovery owner or owner + guardian         while the wallet is not locked."
      },
      "init(address,address[],address[],bytes)": {
        "notice": "Setup function, sets initial storage of the wallet.         It can't be called after initialization."
      },
      "isValidSignature(bytes32,bytes)": {
        "notice": "Should return whether the signature provided is valid for the provided hash."
      },
      "lock()": {
        "notice": "Locks the wallet. Can only be called by a recovery owner + recovery owner         or recovery owner + guardian."
      },
      "multiCall((address,uint256,bytes,uint256,bytes)[])": {
        "notice": "Executes a batch of transactions."
      },
      "operationHash(address,uint256,bytes,uint256)": {
        "notice": "Returns the hash to be signed to execute a transaction."
      },
      "recover(address)": {
        "notice": "Recovers the wallet. Can only be called by the recovery owner + recovery owner         or recovery owner + guardian."
      },
      "recovery(uint256,bytes,bytes)": {
        "notice": "Triggers the recovery mechanism."
      },
      "removeGuardian(address,address)": {
        "notice": "Removes a guardian. Can only be called by the owner + recovery owner         or owner + guardian."
      },
      "removeRecoveryOwner(address,address)": {
        "notice": "Removes a recovery owner. Can only be called by the owner + recovery owner         or owner + guardian."
      },
      "unlock()": {
        "notice": "Unlocks the wallet. Can only be called by the owner + recovery owner         or owner + guardian."
      }
    },
    "notice": "Laser is a secure smart contract wallet (vault) made for the Ethereum Virtual Machine.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1632,
        "contract": "contracts/LaserWallet.sol:LaserWallet",
        "label": "singleton",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1634,
        "contract": "contracts/LaserWallet.sol:LaserWallet",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1636,
        "contract": "contracts/LaserWallet.sol:LaserWallet",
        "label": "nonce",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1638,
        "contract": "contracts/LaserWallet.sol:LaserWallet",
        "label": "guardianCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1640,
        "contract": "contracts/LaserWallet.sol:LaserWallet",
        "label": "recoveryOwnerCount",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1644,
        "contract": "contracts/LaserWallet.sol:LaserWallet",
        "label": "guardians",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 1648,
        "contract": "contracts/LaserWallet.sol:LaserWallet",
        "label": "recoveryOwners",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 1651,
        "contract": "contracts/LaserWallet.sol:LaserWallet",
        "label": "walletConfig",
        "offset": 0,
        "slot": "7",
        "type": "t_struct(WalletConfig)1060_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_struct(WalletConfig)1060_storage": {
        "encoding": "inplace",
        "label": "struct WalletConfig",
        "members": [
          {
            "astId": 1057,
            "contract": "contracts/LaserWallet.sol:LaserWallet",
            "label": "isLocked",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 1059,
            "contract": "contracts/LaserWallet.sol:LaserWallet",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}