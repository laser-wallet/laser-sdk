{
  "address": "0x66D04bEdA919d45fa9f569be5341592c0014f116",
  "abi": [
    {
      "inputs": [],
      "name": "SSR__initGuardians__underflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__initRecoveryOwners__underflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__onlyWallet__notWallet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__removeGuardian__incorrectPreviousGuardian",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__removeGuardian__invalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__removeGuardian__underflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__removeRecoveryOwner__incorrectPreviousRecoveryOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__removeRecoveryOwner__invalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__removeRecoveryOwner__underflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__swapGuardian__invalidOldGuardian",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__swapGuardian__invalidPrevGuardian",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__swapRecoveryOwner__invalidOldRecoveryOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__swapRecoveryOwner__invalidPrevRecoveryOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__verifyNewRecoveryOwnerOrGuardian__invalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Utils__returnSigner__invalidContractSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Utils__returnSigner__invalidSignature",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newGuardian",
          "type": "address"
        }
      ],
      "name": "addGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newRecoveryOwner",
          "type": "address"
        }
      ],
      "name": "addRecoveryOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "getGuardians",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "getRecoveryOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_guardians",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_recoveryOwners",
          "type": "address[]"
        }
      ],
      "name": "initSSR",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "maxFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPriorityFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "signatures",
          "type": "bytes"
        }
      ],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "walletNonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPriorityFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        }
      ],
      "name": "operationHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "maxFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPriorityFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "signatures",
          "type": "bytes"
        }
      ],
      "name": "recover",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "prevGuardian",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardianToRemove",
          "type": "address"
        }
      ],
      "name": "removeGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "prevRecoveryOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recoveryOwnerToRemove",
          "type": "address"
        }
      ],
      "name": "removeRecoveryOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "prevGuardian",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newGuardian",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oldGuardian",
          "type": "address"
        }
      ],
      "name": "swapGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "prevRecoveryOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newRecoveryOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oldRecoveryOwner",
          "type": "address"
        }
      ],
      "name": "swapRecoveryOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "timeLock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "maxFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPriorityFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "signatures",
          "type": "bytes"
        }
      ],
      "name": "unlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x59024d2a0101204ab5bafb7c04cb0b7fcb26923e9de47b36391dd4cf060b9348",
  "receipt": {
    "to": null,
    "from": "0x0cf5C6d3c1122504091EAd6a3Dc5BD31f7BbeDE3",
    "contractAddress": "0x66D04bEdA919d45fa9f569be5341592c0014f116",
    "transactionIndex": 10,
    "gasUsed": "1802437",
    "logsBloom": "0x
    "blockHash": "0xb7d419d1f26db01a342714eb74e62efb0664f89d4dd1a6eca2a154e58c0976e1",
    "transactionHash": "0x59024d2a0101204ab5bafb7c04cb0b7fcb26923e9de47b36391dd4cf060b9348",
    "logs": [],
    "blockNumber": 7307709,
    "cumulativeGasUsed": "10607853",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "7a95abf8dc66cc4df84eb6056d0aa0f7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SSR__initGuardians__underflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__initRecoveryOwners__underflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__onlyWallet__notWallet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__removeGuardian__incorrectPreviousGuardian\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__removeGuardian__invalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__removeGuardian__underflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__removeRecoveryOwner__incorrectPreviousRecoveryOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__removeRecoveryOwner__invalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__removeRecoveryOwner__underflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__swapGuardian__invalidOldGuardian\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__swapGuardian__invalidPrevGuardian\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__swapRecoveryOwner__invalidOldRecoveryOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__swapRecoveryOwner__invalidPrevRecoveryOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__verifyNewRecoveryOwnerOrGuardian__invalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Utils__returnSigner__invalidContractSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Utils__returnSigner__invalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newGuardian\",\"type\":\"address\"}],\"name\":\"addGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newRecoveryOwner\",\"type\":\"address\"}],\"name\":\"addRecoveryOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getGuardians\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getRecoveryOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_guardians\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_recoveryOwners\",\"type\":\"address[]\"}],\"name\":\"initSSR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"walletNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"operationHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"prevGuardian\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardianToRemove\",\"type\":\"address\"}],\"name\":\"removeGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"prevRecoveryOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recoveryOwnerToRemove\",\"type\":\"address\"}],\"name\":\"removeRecoveryOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"prevGuardian\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newGuardian\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oldGuardian\",\"type\":\"address\"}],\"name\":\"swapGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"prevRecoveryOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newRecoveryOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oldRecoveryOwner\",\"type\":\"address\"}],\"name\":\"swapRecoveryOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"timeLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Laser module implementation of Smart Social Recovery.\",\"errors\":{\"SSR__removeGuardian__underflow()\":[{\"details\":\"removeGuardian() custom errors.\"}],\"SSR__removeRecoveryOwner__underflow()\":[{\"details\":\"removeRecoveryOwner() custom errors.\"}],\"SSR__swapGuardian__invalidPrevGuardian()\":[{\"details\":\"swapGuardian() custom errors.\"}],\"SSR__swapRecoveryOwner__invalidPrevRecoveryOwner()\":[{\"details\":\"swapRecoveryOwner() custom errors.\"}]},\"kind\":\"dev\",\"methods\":{\"getChainId()\":{\"details\":\"Returns the chain id of this.\"},\"initSSR(address[],address[])\":{\"details\":\"Inits the module.\"},\"lock(address,bytes,uint256,uint256,uint256,address,bytes)\":{\"details\":\"Locks the target wallet. Can only be called by the recovery owner + guardian.\"},\"unlock(address,bytes,uint256,uint256,uint256,address,bytes)\":{\"details\":\"Unlocks the target wallet.\"}},\"stateVariables\":{\"pointer\":{\"details\":\"pointer to create a mapping link list.\"},\"timeLock\":{\"details\":\"timeLock keeps track of the recovery time delay. It gets set to 'block.timestamp' when 'lock' is triggered.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initSSR(address[],address[])\":{\"notice\":\"The target wallet is the 'msg.sender'.\"},\"unlock(address,bytes,uint256,uint256,uint256,address,bytes)\":{\"notice\":\"Can only be called with the signature of the wallet's owner + recovery owner or  owner + guardian.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/laser-modules/LaserModuleSSR.sol\":\"LaserModuleSSR\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/common/Utils.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\nimport \\\"../interfaces/IEIP1271.sol\\\";\\n\\n/**\\n * @title Utils - Helper functions for Laser wallet and modules.\\n */\\nlibrary Utils {\\n    error Utils__returnSigner__invalidSignature();\\n    error Utils__returnSigner__invalidContractSignature();\\n\\n    ///@dev Returns the signer of the hash.\\n    ///@param signedHash The hash that was signed.\\n    function returnSigner(\\n        bytes32 signedHash,\\n        bytes memory signatures,\\n        uint256 pos\\n    ) internal view returns (address signer) {\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        (r, s, v) = splitSigs(signatures, pos);\\n\\n        if (v == 0) {\\n            // If v is 0, then it is a contract signature.\\n            // The address of the contract is encoded into r.\\n            signer = address(uint160(uint256(r)));\\n\\n            // The signature(s) of the EOA's that control the target contract.\\n            bytes memory contractSignature;\\n\\n            assembly {\\n                contractSignature := add(add(signatures, s), 0x20)\\n            }\\n\\n            if (IEIP1271(signer).isValidSignature(signedHash, contractSignature) != 0x1626ba7e) {\\n                revert Utils__returnSigner__invalidContractSignature();\\n            }\\n        } else if (v > 30) {\\n            signer = ecrecover(\\n                keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", signedHash)),\\n                v - 4,\\n                r,\\n                s\\n            );\\n        } else {\\n            signer = ecrecover(signedHash, v, r, s);\\n        }\\n\\n        if (signer == address(0)) revert Utils__returnSigner__invalidSignature();\\n    }\\n\\n    ///@dev Returns the r, s and v values of the signature.\\n    ///@param pos Which signature to read.\\n    function splitSigs(bytes memory signatures, uint256 pos)\\n        internal\\n        pure\\n        returns (\\n            bytes32 r,\\n            bytes32 s,\\n            uint8 v\\n        )\\n    {\\n        assembly {\\n            let sigPos := mul(0x41, pos)\\n            r := mload(add(signatures, add(sigPos, 0x20)))\\n            s := mload(add(signatures, add(sigPos, 0x40)))\\n            v := byte(0, mload(add(signatures, add(sigPos, 0x60))))\\n        }\\n    }\\n\\n    ///@dev Calls a target address, sends value and / or data payload.\\n    function call(\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        uint256 txGas\\n    ) internal returns (bool success) {\\n        assembly {\\n            success := call(txGas, to, value, add(data, 0x20), mload(data), 0, 0)\\n        }\\n    }\\n\\n    ///@dev Calculates the gas price for the transaction.\\n    function calculateGasPrice(uint256 maxFeePerGas, uint256 maxPriorityFeePerGas) internal view returns (uint256) {\\n        if (maxFeePerGas == maxPriorityFeePerGas) {\\n            // Legacy mode (pre-EIP1559)\\n            return min(maxFeePerGas, tx.gasprice);\\n        }\\n\\n        // EIP-1559\\n        // priority_fee_per_gas = min(transaction.max_priority_fee_per_gas, transaction.max_fee_per_gas - block.base_fee_per_gas)\\n        // effective_gas_price = priority_fee_per_gas + block.base_fee_per_gas\\n        uint256 priorityFeePerGas = min(maxPriorityFeePerGas, maxFeePerGas - block.basefee);\\n\\n        // effective_gas_price\\n        return priorityFeePerGas + block.basefee;\\n    }\\n\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n}\\n\",\"keccak256\":\"0x1fa63752a29d12c44488a4f1fa6efb84c2ad52115ae63f393645b600e74ff08d\",\"license\":\"LGPL-3.0-only\"},\"contracts/interfaces/IEIP1271.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\n/**\\n * @title IEIP1271\\n * @notice Interface to call external contracts to validate signature.\\n */\\ninterface IEIP1271 {\\n    /**\\n     * @dev Implementation of EIP 1271: https://eips.ethereum.org/EIPS/eip-1271.\\n     * @param hash Hash of a message signed on behalf of address(this).\\n     * @param signature Signature byte array associated with _msgHash.\\n     * @return Magic value  or reverts with an error message.\\n     */\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4);\\n}\\n\",\"keccak256\":\"0xfcc98243eaf0e10b323a21e6aca691efec6f128e938f24e495e71cd47c421505\",\"license\":\"LGPL-3.0-only\"},\"contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.15;\\n\\n/**\\n * @title IERC165\\n * @notice Support of ERC165.\\n */\\ninterface IERC165 {\\n    /**\\n     * @notice Query if a contract implements an interface\\n     * @param interfaceID The interface identifier, as specified in ERC-165\\n     * @dev Interface identification is specified in ERC-165. This function\\n     * uses less than 30,000 gas.\\n     * @return `true` if the contract implements `interfaceID` and\\n     * interfaceID` is not 0xffffffff, `false` otherwise\\n     */\\n    function supportsInterface(bytes4 interfaceID) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xdf3ddac29884e2c1f2d2fd322bacd6a6907721d3e0909af74cdedeac5c38a9f4\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ILaserModuleSSR.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\ninterface ILaserModuleSSR {\\n    error SSR__onlyWallet__notWallet();\\n\\n    error SSR__initGuardians__underflow();\\n\\n    error SSR__initRecoveryOwners__underflow();\\n\\n    error SSR__verifyNewRecoveryOwnerOrGuardian__invalidAddress();\\n\\n    ///@dev removeGuardian() custom errors.\\n    error SSR__removeGuardian__underflow();\\n    error SSR__removeGuardian__invalidAddress();\\n    error SSR__removeGuardian__incorrectPreviousGuardian();\\n\\n    ///@dev removeRecoveryOwner() custom errors.\\n    error SSR__removeRecoveryOwner__underflow();\\n    error SSR__removeRecoveryOwner__invalidAddress();\\n    error SSR__removeRecoveryOwner__incorrectPreviousRecoveryOwner();\\n\\n    ///@dev swapGuardian() custom errors.\\n    error SSR__swapGuardian__invalidPrevGuardian();\\n    error SSR__swapGuardian__invalidOldGuardian();\\n\\n    ///@dev swapRecoveryOwner() custom errors.\\n    error SSR__swapRecoveryOwner__invalidPrevRecoveryOwner();\\n    error SSR__swapRecoveryOwner__invalidOldRecoveryOwner();\\n\\n    ///@dev Inits the module.\\n    ///@notice The target wallet is the 'msg.sender'.\\n    function initSSR(address[] calldata _guardians, address[] calldata _recoveryOwners) external;\\n\\n    ///@dev Locks the target wallet.\\n    ///@param wallet The target wallet address.\\n    ///@param callData Data payload.\\n    ///@param maxFeePerGas Maximum WEI per uinit of gas.\\n    ///@param gasLimit Maximum units of gas to spend for this transaction.\\n    ///@param relayer Address to refund for the transaction inclusion.\\n    ///@notice Can only be called by a recovery owner + guardian.\\n    function lock(\\n        address wallet,\\n        bytes calldata callData,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit,\\n        address relayer,\\n        bytes memory signatures\\n    ) external;\\n\\n    ///@dev Returns the chain id of this.\\n    function getChainId() external view returns (uint256 chainId);\\n}\\n\",\"keccak256\":\"0x8a6c9a31a36a21b52a43ac613c82c2cc59d7ccacd715d279e059bcba226e4139\",\"license\":\"LGPL-3.0-only\"},\"contracts/modules/laser-modules/LaserModuleSSR.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\nimport \\\"../../common/Utils.sol\\\";\\nimport \\\"../../interfaces/ILaserModuleSSR.sol\\\";\\n\\ninterface ILaser {\\n    function nonce() external view returns (uint256);\\n\\n    function owner() external view returns (address);\\n\\n    function execFromModule(\\n        address to,\\n        uint256 value,\\n        bytes calldata callData,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit,\\n        address relayer\\n    ) external;\\n}\\n\\n///@dev Laser module implementation of Smart Social Recovery.\\ncontract LaserModuleSSR is ILaserModuleSSR {\\n    bytes32 private constant DOMAIN_SEPARATOR_TYPEHASH =\\n        keccak256(\\\"EIP712Domain(uint256 chainId,address verifyingContract)\\\");\\n\\n    bytes32 private constant LASER_MODULE_SSR_TYPE_STRUCTURE =\\n        keccak256(\\n            \\\"LaserModuleSSR(address wallet,bytes callData,uint256 walletNonce,uint256 maxFeePerGas,uint256 maxPriorityFeePerGas,uint256 gasLimit\\\"\\n        );\\n\\n    ///@dev pointer to create a mapping link list.\\n    address internal constant pointer = address(0x1);\\n\\n    ///@dev timeLock keeps track of the recovery time delay. It gets set to 'block.timestamp' when 'lock' is triggered.\\n    mapping(address => uint256) public timeLock;\\n\\n    mapping(address => uint256) internal recoveryOwnerCount;\\n    mapping(address => uint256) internal guardianCount;\\n\\n    mapping(address => mapping(address => address)) internal recoveryOwners;\\n    mapping(address => mapping(address => address)) internal guardians;\\n\\n    modifier onlyWallet(address wallet) {\\n        if (msg.sender != wallet) revert SSR__onlyWallet__notWallet();\\n\\n        _;\\n    }\\n\\n    ///@dev Inits the module.\\n    ///@notice The target wallet is the 'msg.sender'.\\n    function initSSR(address[] calldata _guardians, address[] calldata _recoveryOwners) external {\\n        address wallet = msg.sender;\\n\\n        initGuardians(wallet, _guardians);\\n        initRecoveryOwners(wallet, _recoveryOwners);\\n    }\\n\\n    ///@dev Locks the target wallet.\\n    ///Can only be called by the recovery owner + guardian.\\n    function lock(\\n        address wallet,\\n        bytes calldata callData,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit,\\n        address relayer,\\n        bytes memory signatures\\n    ) external {\\n        uint256 walletNonce = ILaser(wallet).nonce();\\n\\n        bytes32 signedHash = keccak256(\\n            encodeOperation(wallet, callData, walletNonce, maxFeePerGas, maxPriorityFeePerGas, gasLimit)\\n        );\\n\\n        require(bytes4(callData) == bytes4(keccak256(\\\"lock()\\\")), \\\"should be the same!\\\");\\n\\n        address signer1 = Utils.returnSigner(signedHash, signatures, 0);\\n        require(recoveryOwners[wallet][signer1] != address(0));\\n\\n        address signer2 = Utils.returnSigner(signedHash, signatures, 1);\\n        require(guardians[wallet][signer2] != address(0));\\n\\n        timeLock[wallet] = block.timestamp;\\n\\n        ILaser(wallet).execFromModule(wallet, 0, callData, maxFeePerGas, maxPriorityFeePerGas, gasLimit, relayer);\\n    }\\n\\n    /**\\n     * @dev Unlocks the target wallet.\\n     * @notice Can only be called with the signature of the wallet's owner + recovery owner or  owner + guardian.\\n     */\\n    function unlock(\\n        address wallet,\\n        bytes calldata callData,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit,\\n        address relayer,\\n        bytes memory signatures\\n    ) external {\\n        uint256 walletNonce = ILaser(wallet).nonce();\\n\\n        bytes32 signedHash = keccak256(\\n            encodeOperation(wallet, callData, walletNonce, maxFeePerGas, maxPriorityFeePerGas, gasLimit)\\n        );\\n\\n        require(bytes4(callData) == bytes4(keccak256(\\\"unlock()\\\")), \\\"should be the same!\\\");\\n\\n        address walletOwner = ILaser(wallet).owner();\\n        require(walletOwner != address(0));\\n\\n        address signer1 = Utils.returnSigner(signedHash, signatures, 0);\\n        require(signer1 == walletOwner);\\n\\n        address signer2 = Utils.returnSigner(signedHash, signatures, 1);\\n        require(\\n            guardians[wallet][signer2] != address(0) || recoveryOwners[wallet][signer2] != address(0),\\n            \\\"nop signer2\\\"\\n        );\\n\\n        timeLock[wallet] = 0;\\n        ILaser(wallet).execFromModule(wallet, 0, callData, maxFeePerGas, maxPriorityFeePerGas, gasLimit, relayer);\\n    }\\n\\n    function recover(\\n        address wallet,\\n        bytes calldata callData,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit,\\n        address relayer,\\n        bytes memory signatures\\n    ) external {\\n        uint256 walletNonce = ILaser(wallet).nonce();\\n\\n        bytes32 signedHash = keccak256(\\n            encodeOperation(wallet, callData, walletNonce, maxFeePerGas, maxPriorityFeePerGas, gasLimit)\\n        );\\n\\n        require(bytes4(callData) == bytes4(keccak256(\\\"changeOwner(address)\\\")), \\\"should be change owner.\\\");\\n\\n        address signer1 = Utils.returnSigner(signedHash, signatures, 0);\\n        require(recoveryOwners[wallet][signer1] != address(0));\\n\\n        address signer2 = Utils.returnSigner(signedHash, signatures, 1);\\n        require(guardians[wallet][signer2] != address(0), \\\"nop signer2\\\");\\n\\n        require(timeLock[wallet] + 1 weeks < block.timestamp, \\\"incorrect time\\\");\\n        timeLock[wallet] = 0;\\n        ILaser(wallet).execFromModule(wallet, 0, callData, maxFeePerGas, maxPriorityFeePerGas, gasLimit, relayer);\\n    }\\n\\n    function addGuardian(address wallet, address newGuardian) external onlyWallet(wallet) {\\n        require(wallet == msg.sender);\\n        verifyNewRecoveryOwnerOrGuardian(wallet, newGuardian);\\n        guardians[wallet][newGuardian] = guardians[wallet][pointer];\\n        guardians[wallet][pointer] = newGuardian;\\n\\n        unchecked {\\n            guardianCount[wallet]++;\\n        }\\n    }\\n\\n    function removeGuardian(\\n        address wallet,\\n        address prevGuardian,\\n        address guardianToRemove\\n    ) external onlyWallet(wallet) {\\n        // There needs to be at least 1 guardian.\\n        if (guardianCount[wallet] < 2) revert SSR__removeGuardian__underflow();\\n\\n        if (guardianToRemove == pointer) revert SSR__removeGuardian__invalidAddress();\\n\\n        if (guardians[wallet][prevGuardian] != guardianToRemove)\\n            revert SSR__removeGuardian__incorrectPreviousGuardian();\\n\\n        guardians[wallet][prevGuardian] = guardians[wallet][guardianToRemove];\\n        guardians[wallet][guardianToRemove] = address(0);\\n\\n        unchecked {\\n            // Can't underflow, there needs to be more than 2 guardians to reach here.\\n            guardianCount[wallet]--;\\n        }\\n    }\\n\\n    function swapGuardian(\\n        address wallet,\\n        address prevGuardian,\\n        address newGuardian,\\n        address oldGuardian\\n    ) external onlyWallet(wallet) {\\n        verifyNewRecoveryOwnerOrGuardian(wallet, newGuardian);\\n\\n        if (guardians[wallet][prevGuardian] != oldGuardian) revert SSR__swapGuardian__invalidPrevGuardian();\\n\\n        if (oldGuardian == pointer) revert SSR__swapGuardian__invalidOldGuardian();\\n\\n        guardians[wallet][newGuardian] = guardians[wallet][oldGuardian];\\n        guardians[wallet][prevGuardian] = newGuardian;\\n        guardians[wallet][oldGuardian] = address(0);\\n    }\\n\\n    function addRecoveryOwner(address wallet, address newRecoveryOwner) external onlyWallet(wallet) {\\n        verifyNewRecoveryOwnerOrGuardian(wallet, newRecoveryOwner);\\n        recoveryOwners[wallet][newRecoveryOwner] = recoveryOwners[wallet][pointer];\\n        recoveryOwners[wallet][pointer] = newRecoveryOwner;\\n\\n        unchecked {\\n            recoveryOwnerCount[wallet]++;\\n        }\\n    }\\n\\n    function removeRecoveryOwner(\\n        address wallet,\\n        address prevRecoveryOwner,\\n        address recoveryOwnerToRemove\\n    ) external onlyWallet(wallet) {\\n        // There needs to be at least 1 recovery owner.\\n        if (recoveryOwnerCount[wallet] < 2) revert SSR__removeRecoveryOwner__underflow();\\n\\n        if (recoveryOwnerToRemove == pointer) revert SSR__removeRecoveryOwner__invalidAddress();\\n\\n        if (recoveryOwners[wallet][prevRecoveryOwner] != recoveryOwnerToRemove) {\\n            revert SSR__removeRecoveryOwner__incorrectPreviousRecoveryOwner();\\n        }\\n\\n        recoveryOwners[wallet][prevRecoveryOwner] = recoveryOwners[wallet][recoveryOwnerToRemove];\\n        recoveryOwners[wallet][recoveryOwnerToRemove] = address(0);\\n\\n        unchecked {\\n            // Can't underflow, there needs to be more than 2 guardians to reach here.\\n            recoveryOwnerCount[wallet]--;\\n        }\\n    }\\n\\n    function swapRecoveryOwner(\\n        address wallet,\\n        address prevRecoveryOwner,\\n        address newRecoveryOwner,\\n        address oldRecoveryOwner\\n    ) external onlyWallet(wallet) {\\n        verifyNewRecoveryOwnerOrGuardian(wallet, newRecoveryOwner);\\n        if (recoveryOwners[wallet][prevRecoveryOwner] != oldRecoveryOwner) {\\n            revert SSR__swapRecoveryOwner__invalidPrevRecoveryOwner();\\n        }\\n\\n        if (oldRecoveryOwner == pointer) revert SSR__swapRecoveryOwner__invalidOldRecoveryOwner();\\n\\n        recoveryOwners[wallet][newRecoveryOwner] = recoveryOwners[wallet][oldRecoveryOwner];\\n        recoveryOwners[wallet][prevRecoveryOwner] = newRecoveryOwner;\\n        recoveryOwners[wallet][oldRecoveryOwner] = address(0);\\n    }\\n\\n    function getGuardians(address wallet) external view returns (address[] memory) {\\n        address[] memory guardiansArray = new address[](guardianCount[wallet]);\\n        address currentGuardian = guardians[wallet][pointer];\\n\\n        uint256 index;\\n        while (currentGuardian != pointer) {\\n            guardiansArray[index] = currentGuardian;\\n            currentGuardian = guardians[wallet][currentGuardian];\\n            unchecked {\\n                ++index;\\n            }\\n        }\\n        return guardiansArray;\\n    }\\n\\n    function getRecoveryOwners(address wallet) external view returns (address[] memory) {\\n        address[] memory recoveryOwnersArray = new address[](recoveryOwnerCount[wallet]);\\n\\n        address currentRecoveryOwner = recoveryOwners[wallet][pointer];\\n\\n        uint256 index;\\n        while (currentRecoveryOwner != pointer) {\\n            recoveryOwnersArray[index] = currentRecoveryOwner;\\n            currentRecoveryOwner = recoveryOwners[wallet][currentRecoveryOwner];\\n            unchecked {\\n                ++index;\\n            }\\n        }\\n        return recoveryOwnersArray;\\n    }\\n\\n    function initGuardians(address wallet, address[] calldata _guardians) internal {\\n        uint256 guardiansLength = _guardians.length;\\n\\n        if (guardiansLength < 1) revert SSR__initGuardians__underflow();\\n\\n        address currentGuardian = pointer;\\n\\n        for (uint256 i = 0; i < guardiansLength; ) {\\n            address guardian = _guardians[i];\\n\\n            guardians[wallet][currentGuardian] = guardian;\\n            currentGuardian = guardian;\\n\\n            verifyNewRecoveryOwnerOrGuardian(wallet, guardian);\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        guardians[wallet][currentGuardian] = pointer;\\n        guardianCount[wallet] = guardiansLength;\\n    }\\n\\n    ///@dev Inits the recovery owners for the target wallet.\\n    ///@param wallet The target wallet address.\\n    ///@param _recoveryOwners Array of the recovery owners addresses.\\n    function initRecoveryOwners(address wallet, address[] calldata _recoveryOwners) internal {\\n        uint256 recoveryOwnersLength = _recoveryOwners.length;\\n\\n        if (recoveryOwnersLength < 1) revert SSR__initRecoveryOwners__underflow();\\n\\n        address currentRecoveryOwner = pointer;\\n\\n        for (uint256 i = 0; i < recoveryOwnersLength; ) {\\n            address recoveryOwner = _recoveryOwners[i];\\n\\n            recoveryOwners[wallet][currentRecoveryOwner] = recoveryOwner;\\n            currentRecoveryOwner = recoveryOwner;\\n\\n            verifyNewRecoveryOwnerOrGuardian(wallet, recoveryOwner);\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        recoveryOwners[wallet][currentRecoveryOwner] = pointer;\\n        recoveryOwnerCount[wallet] = recoveryOwnersLength;\\n    }\\n\\n    function verifyNewRecoveryOwnerOrGuardian(address wallet, address toVerify) internal view {\\n        address owner = ILaser(wallet).owner();\\n\\n        if (toVerify.code.length > 0) {\\n            // If the recovery owner is a smart contract wallet, it needs to support EIP1271.\\n            if (!IERC165(toVerify).supportsInterface(0x1626ba7e)) {\\n                revert SSR__verifyNewRecoveryOwnerOrGuardian__invalidAddress();\\n            }\\n        }\\n        if (\\n            toVerify == address(0) ||\\n            toVerify == owner ||\\n            guardians[wallet][toVerify] != address(0) ||\\n            recoveryOwners[wallet][toVerify] != address(0)\\n        ) revert SSR__verifyNewRecoveryOwnerOrGuardian__invalidAddress();\\n    }\\n\\n    ///@dev Returns the chain id of this.\\n    function getChainId() public view returns (uint256 chainId) {\\n        return block.chainid;\\n    }\\n\\n    function domainSeparator() public view returns (bytes32) {\\n        return keccak256(abi.encode(DOMAIN_SEPARATOR_TYPEHASH, getChainId(), address(this)));\\n    }\\n\\n    function encodeOperation(\\n        address wallet,\\n        bytes calldata callData,\\n        uint256 walletNonce,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit\\n    ) internal view returns (bytes memory) {\\n        bytes32 opHash = keccak256(\\n            abi.encode(\\n                LASER_MODULE_SSR_TYPE_STRUCTURE,\\n                wallet,\\n                keccak256(callData),\\n                walletNonce,\\n                maxFeePerGas,\\n                maxPriorityFeePerGas,\\n                gasLimit\\n            )\\n        );\\n\\n        return abi.encodePacked(bytes1(0x19), bytes1(0x01), domainSeparator(), opHash);\\n    }\\n\\n    function operationHash(\\n        address wallet,\\n        bytes calldata callData,\\n        uint256 walletNonce,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit\\n    ) external view returns (bytes32) {\\n        return keccak256(encodeOperation(wallet, callData, walletNonce, maxFeePerGas, maxPriorityFeePerGas, gasLimit));\\n    }\\n}\\n\",\"keccak256\":\"0x5c621b51d8e143ff2616ff7078a7dc9b5fae6773b0a414016394566aa6670b0b\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611fa9806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80635ceb579b11610097578063f18858ab11610066578063f18858ab14610207578063f612c5541461021a578063f698da251461022d578063fc1933681461028757600080fd5b80635ceb579b146101ae578063a60bd649146101c1578063c6845210146101d4578063e5017d7c146101e757600080fd5b80633b7db2a8116100d35780633b7db2a8146101555780633c9735ca14610168578063434965681461017b57806353185ea31461019b57600080fd5b8063201573be1461010557806327d865111461011a5780632979bc6c1461012d5780633408e47014610140575b600080fd5b61011861011336600461198d565b61029a565b005b610118610128366004611a48565b6103a8565b61011861013b366004611a48565b6105bf565b465b6040519081526020015b60405180910390f35b610142610163366004611b67565b610838565b610118610176366004611a48565b61085d565b610142610189366004611bdf565b60006020819052908152604090205481565b6101186101a9366004611c48565b610b3a565b6101186101bc366004611cb4565b610b58565b6101186101cf36600461198d565b610c94565b6101186101e2366004611cff565b610da2565b6101fa6101f5366004611bdf565b610e51565b60405161014c9190611d38565b6101fa610215366004611bdf565b610f4f565b610118610228366004611cff565b611044565b61014260007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b610118610295366004611cb4565b6110dd565b83336001600160a01b038216146102c457604051632507a10360e21b815260040160405180910390fd5b6102ce858461121a565b6001600160a01b038581166000908152600360209081526040808320888516845290915290205481169083161461031857604051632e3f629360e01b815260040160405180910390fd5b6000196001600160a01b0383160161034357604051631e07136760e11b815260040160405180910390fd5b506001600160a01b03938416600090815260036020908152604080832093871680845293909152808220805494871680845282842080549689166001600160a01b03199788161790559590961682528120805484169094179093559091528154169055565b6000886001600160a01b031663affed0e06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040c9190611d85565b9050600061041f8a8a8a858b8b8b6113c8565b80516020909101209050637c1e845d60e11b61043b898b611d9e565b6001600160e01b031916146104975760405162461bcd60e51b815260206004820152601360248201527f73686f756c64206265207468652073616d65210000000000000000000000000060448201526064015b60405180910390fd5b60006104a582856000611529565b6001600160a01b038c811660009081526003602090815260408083208486168452909152902054919250166104d957600080fd5b60006104e783866001611529565b6001600160a01b038d8116600090815260046020908152604080832084861684529091529020549192501661051b57600080fd5b426000808e6001600160a01b03166001600160a01b03168152602001908152602001600020819055508b6001600160a01b03166323d43c168d60008e8e8e8e8e8e6040518963ffffffff1660e01b815260040161057f989796959493929190611dce565b600060405180830381600087803b15801561059957600080fd5b505af11580156105ad573d6000803e3d6000fd5b50505050505050505050505050505050565b6000886001600160a01b031663affed0e06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106239190611d85565b905060006106368a8a8a858b8b8b6113c8565b8051602090910120905063a6f9dae160e01b610652898b611d9e565b6001600160e01b031916146106a95760405162461bcd60e51b815260206004820152601760248201527f73686f756c64206265206368616e6765206f776e65722e000000000000000000604482015260640161048e565b60006106b782856000611529565b6001600160a01b038c811660009081526003602090815260408083208486168452909152902054919250166106eb57600080fd5b60006106f983866001611529565b6001600160a01b038d8116600090815260046020908152604080832084861684529091529020549192501661075e5760405162461bcd60e51b815260206004820152600b60248201526a3737b81039b4b3b732b91960a91b604482015260640161048e565b6001600160a01b038c1660009081526020819052604090205442906107869062093a80611e4c565b106107d35760405162461bcd60e51b815260206004820152600e60248201527f696e636f72726563742074696d65000000000000000000000000000000000000604482015260640161048e565b60008060008e6001600160a01b03166001600160a01b03168152602001908152602001600020819055508b6001600160a01b03166323d43c168d60008e8e8e8e8e8e6040518963ffffffff1660e01b815260040161057f989796959493929190611dce565b6000610849888888888888886113c8565b805190602001209050979650505050505050565b6000886001600160a01b031663affed0e06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561089d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c19190611d85565b905060006108d48a8a8a858b8b8b6113c8565b8051602090910120905063a69df4b560e01b6108f0898b611d9e565b6001600160e01b031916146109475760405162461bcd60e51b815260206004820152601360248201527f73686f756c64206265207468652073616d652100000000000000000000000000604482015260640161048e565b60008a6001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610987573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ab9190611e64565b90506001600160a01b0381166109c057600080fd5b60006109ce83866000611529565b9050816001600160a01b0316816001600160a01b0316146109ee57600080fd5b60006109fc84876001611529565b6001600160a01b038e81166000908152600460209081526040808320848616845290915290205491925016151580610a5a57506001600160a01b038d8116600090815260036020908152604080832085851684529091529020541615155b610a945760405162461bcd60e51b815260206004820152600b60248201526a3737b81039b4b3b732b91960a91b604482015260640161048e565b60008060008f6001600160a01b03166001600160a01b03168152602001908152602001600020819055508c6001600160a01b03166323d43c168e60008f8f8f8f8f8f6040518963ffffffff1660e01b8152600401610af9989796959493929190611dce565b600060405180830381600087803b158015610b1357600080fd5b505af1158015610b27573d6000803e3d6000fd5b5050505050505050505050505050505050565b33610b46818686611781565b610b5181848461187b565b5050505050565b82336001600160a01b03821614610b8257604051632507a10360e21b815260040160405180910390fd5b6001600160a01b03841660009081526001602052604090205460021115610bbc5760405163dfc8891760e01b815260040160405180910390fd5b6000196001600160a01b03831601610be75760405163213cf76760e21b815260040160405180910390fd5b6001600160a01b0384811660009081526003602090815260408083208785168452909152902054811690831614610c315760405163763de2e960e11b815260040160405180910390fd5b506001600160a01b0392831660008181526003602090815260408083209487168352938152838220805495871683528483208054969097166001600160a01b03199687161790965585549094169094558352600190915290208054600019019055565b83336001600160a01b03821614610cbe57604051632507a10360e21b815260040160405180910390fd5b610cc8858461121a565b6001600160a01b0385811660009081526004602090815260408083208885168452909152902054811690831614610d12576040516371331bbf60e11b815260040160405180910390fd5b6000196001600160a01b03831601610d3d576040516337d7d27160e11b815260040160405180910390fd5b506001600160a01b03938416600090815260046020908152604080832093871680845293909152808220805494871680845282842080549689166001600160a01b03199788161790559590961682528120805484169094179093559091528154169055565b81336001600160a01b03821614610dcc57604051632507a10360e21b815260040160405180910390fd5b6001600160a01b0383163314610de157600080fd5b610deb838361121a565b506001600160a01b039182166000818152600460209081526040808320600180855290835281842080549688168086528386208054989099166001600160a01b031998891617909855805490961690961790945591815260029091522080549091019055565b6001600160a01b0381166000908152600160205260408120546060919067ffffffffffffffff811115610e8657610e86611a32565b604051908082528060200260200182016040528015610eaf578160200160208202803683370190505b506001600160a01b038085166000908152600360209081526040808320600184529091528120549293509116905b6001600160a01b038216600114610f465781838281518110610f0157610f01611e81565b6001600160a01b039283166020918202929092018101919091528682166000908152600382526040808220958416825294909152929092205490911690600101610edd565b50909392505050565b6001600160a01b0381166000908152600260205260408120546060919067ffffffffffffffff811115610f8457610f84611a32565b604051908082528060200260200182016040528015610fad578160200160208202803683370190505b506001600160a01b038085166000908152600460209081526040808320600184529091528120549293509116905b6001600160a01b038216600114610f465781838281518110610fff57610fff611e81565b6001600160a01b039283166020918202929092018101919091528682166000908152600482526040808220958416825294909152929092205490911690600101610fdb565b81336001600160a01b0382161461106e57604051632507a10360e21b815260040160405180910390fd5b611078838361121a565b506001600160a01b039182166000818152600360209081526040808320600180855290835281842080549688168086528386208054989099166001600160a01b0319988916179098558054909616909617909455918152908390522080549091019055565b82336001600160a01b0382161461110757604051632507a10360e21b815260040160405180910390fd5b6001600160a01b03841660009081526002602081905260409091205410156111425760405163342a2dc560e21b815260040160405180910390fd5b6000196001600160a01b0383160161116d576040516302f412b360e21b815260040160405180910390fd5b6001600160a01b03848116600090815260046020908152604080832087851684529091529020548116908316146111b75760405163475347b160e11b815260040160405180910390fd5b506001600160a01b0392831660008181526004602090815260408083209487168352938152838220805495871683528483208054969097166001600160a01b03199687161790965585549094169094558352600290915290208054600019019055565b6000826001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561125a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127e9190611e64565b90506001600160a01b0382163b1561131c576040516301ffc9a760e01b8152630b135d3f60e11b60048201526001600160a01b038316906301ffc9a790602401602060405180830381865afa1580156112db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ff9190611e97565b61131c57604051633da224f960e11b815260040160405180910390fd5b6001600160a01b03821615806113435750806001600160a01b0316826001600160a01b0316145b8061137457506001600160a01b03838116600090815260046020908152604080832086851684529091529020541615155b806113a557506001600160a01b03838116600090815260036020908152604080832086851684529091529020541615155b156113c357604051633da224f960e11b815260040160405180910390fd5b505050565b606060007fc40b8dc0d755f1e39d88989f5d7007e3569df60482f4eb6c7eaeb3cbcbf6eab38989896040516113fe929190611eb9565b6040805191829003822060208301949094526001600160a01b039092169181019190915260608101919091526080810187905260a0810186905260c0810185905260e081018490526101000160408051601f1981840301815291905280516020909101209050601960f81b600160f81b6114c860007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b6040517fff000000000000000000000000000000000000000000000000000000000000009384166020820152929091166021830152602282015260428101829052606201604051602081830303815290604052915050979650505050505050565b60008060008061155386866041020160208101516040820151606090920151909260009190911a90565b9194509250905060ff811660000361162b57604051630b135d3f60e11b81529293508392868301602001906001600160a01b03851690631626ba7e9061159f908b908590600401611ec9565b602060405180830381865afa1580156115bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e09190611f26565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916631626ba7e60e01b14611625576040516340aec60f60e11b815260040160405180910390fd5b50611750565b601e8160ff1611156116f0576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101889052600190605c01604051602081830303815290604052805190602001206004836116909190611f50565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa1580156116df573d6000803e3d6000fd5b505050602060405103519350611750565b60408051600081526020810180835289905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015611743573d6000803e3d6000fd5b5050506020604051035193505b6001600160a01b0384166117775760405163b9bf1d7d60e01b815260040160405180910390fd5b5050509392505050565b8060018110156117a457604051630d2aa0bf60e11b815260040160405180910390fd5b600160005b8281101561182d5760008585838181106117c5576117c5611e81565b90506020020160208101906117da9190611bdf565b6001600160a01b03888116600090815260046020908152604080832097841683529690529490942080546001600160a01b031916948216949094179093555081611824878261121a565b506001016117a9565b506001600160a01b03948516600081815260046020908152604080832094909816825292835286812080546001600160a01b0319166001179055908152600290915293909320929092555050565b80600181101561189e576040516354f4eccd60e11b815260040160405180910390fd5b600160005b828110156119275760008585838181106118bf576118bf611e81565b90506020020160208101906118d49190611bdf565b6001600160a01b03888116600090815260036020908152604080832097841683529690529490942080546001600160a01b03191694821694909417909355508161191e878261121a565b506001016118a3565b506001600160a01b03948516600081815260036020908152604080832094909816825292835286812080546001600160a01b0319166001908117909155918152915293909320929092555050565b6001600160a01b038116811461198a57600080fd5b50565b600080600080608085870312156119a357600080fd5b84356119ae81611975565b935060208501356119be81611975565b925060408501356119ce81611975565b915060608501356119de81611975565b939692955090935050565b60008083601f8401126119fb57600080fd5b50813567ffffffffffffffff811115611a1357600080fd5b602083019150836020828501011115611a2b57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060008060e0898b031215611a6457600080fd5b8835611a6f81611975565b9750602089013567ffffffffffffffff80821115611a8c57600080fd5b611a988c838d016119e9565b909950975060408b0135965060608b0135955060808b0135945060a08b01359150611ac282611975565b90925060c08a01359080821115611ad857600080fd5b818b0191508b601f830112611aec57600080fd5b813581811115611afe57611afe611a32565b604051601f8201601f19908116603f01168101908382118183101715611b2657611b26611a32565b816040528281528e6020848701011115611b3f57600080fd5b8260208601602083013760006020848301015280955050505050509295985092959890939650565b600080600080600080600060c0888a031215611b8257600080fd5b8735611b8d81611975565b9650602088013567ffffffffffffffff811115611ba957600080fd5b611bb58a828b016119e9565b989b909a509798604081013598606082013598506080820135975060a09091013595509350505050565b600060208284031215611bf157600080fd5b8135611bfc81611975565b9392505050565b60008083601f840112611c1557600080fd5b50813567ffffffffffffffff811115611c2d57600080fd5b6020830191508360208260051b8501011115611a2b57600080fd5b60008060008060408587031215611c5e57600080fd5b843567ffffffffffffffff80821115611c7657600080fd5b611c8288838901611c03565b90965094506020870135915080821115611c9b57600080fd5b50611ca887828801611c03565b95989497509550505050565b600080600060608486031215611cc957600080fd5b8335611cd481611975565b92506020840135611ce481611975565b91506040840135611cf481611975565b809150509250925092565b60008060408385031215611d1257600080fd5b8235611d1d81611975565b91506020830135611d2d81611975565b809150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611d795783516001600160a01b031683529284019291840191600101611d54565b50909695505050505050565b600060208284031215611d9757600080fd5b5051919050565b6001600160e01b03198135818116916004851015611dc65780818660040360031b1b83161692505b505092915050565b60006001600160a01b03808b16835289602084015260e060408401528760e0840152610100888a828601376000848a01820152606084019790975260808301959095525060a081019290925290911660c0820152601f909201601f1916909101019392505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611e5f57611e5f611e36565b500190565b600060208284031215611e7657600080fd5b8151611bfc81611975565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611ea957600080fd5b81518015158114611bfc57600080fd5b8183823760009101908152919050565b82815260006020604081840152835180604085015260005b81811015611efd57858101830151858201606001528201611ee1565b81811115611f0f576000606083870101525b50601f01601f191692909201606001949350505050565b600060208284031215611f3857600080fd5b81516001600160e01b031981168114611bfc57600080fd5b600060ff821660ff841680821015611f6a57611f6a611e36565b9003939250505056fea2646970667358221220d651386d1b349759345f91aee31631b739855bcf0e482f039be8ffd2ab36cc7564736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80635ceb579b11610097578063f18858ab11610066578063f18858ab14610207578063f612c5541461021a578063f698da251461022d578063fc1933681461028757600080fd5b80635ceb579b146101ae578063a60bd649146101c1578063c6845210146101d4578063e5017d7c146101e757600080fd5b80633b7db2a8116100d35780633b7db2a8146101555780633c9735ca14610168578063434965681461017b57806353185ea31461019b57600080fd5b8063201573be1461010557806327d865111461011a5780632979bc6c1461012d5780633408e47014610140575b600080fd5b61011861011336600461198d565b61029a565b005b610118610128366004611a48565b6103a8565b61011861013b366004611a48565b6105bf565b465b6040519081526020015b60405180910390f35b610142610163366004611b67565b610838565b610118610176366004611a48565b61085d565b610142610189366004611bdf565b60006020819052908152604090205481565b6101186101a9366004611c48565b610b3a565b6101186101bc366004611cb4565b610b58565b6101186101cf36600461198d565b610c94565b6101186101e2366004611cff565b610da2565b6101fa6101f5366004611bdf565b610e51565b60405161014c9190611d38565b6101fa610215366004611bdf565b610f4f565b610118610228366004611cff565b611044565b61014260007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b610118610295366004611cb4565b6110dd565b83336001600160a01b038216146102c457604051632507a10360e21b815260040160405180910390fd5b6102ce858461121a565b6001600160a01b038581166000908152600360209081526040808320888516845290915290205481169083161461031857604051632e3f629360e01b815260040160405180910390fd5b6000196001600160a01b0383160161034357604051631e07136760e11b815260040160405180910390fd5b506001600160a01b03938416600090815260036020908152604080832093871680845293909152808220805494871680845282842080549689166001600160a01b03199788161790559590961682528120805484169094179093559091528154169055565b6000886001600160a01b031663affed0e06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040c9190611d85565b9050600061041f8a8a8a858b8b8b6113c8565b80516020909101209050637c1e845d60e11b61043b898b611d9e565b6001600160e01b031916146104975760405162461bcd60e51b815260206004820152601360248201527f73686f756c64206265207468652073616d65210000000000000000000000000060448201526064015b60405180910390fd5b60006104a582856000611529565b6001600160a01b038c811660009081526003602090815260408083208486168452909152902054919250166104d957600080fd5b60006104e783866001611529565b6001600160a01b038d8116600090815260046020908152604080832084861684529091529020549192501661051b57600080fd5b426000808e6001600160a01b03166001600160a01b03168152602001908152602001600020819055508b6001600160a01b03166323d43c168d60008e8e8e8e8e8e6040518963ffffffff1660e01b815260040161057f989796959493929190611dce565b600060405180830381600087803b15801561059957600080fd5b505af11580156105ad573d6000803e3d6000fd5b50505050505050505050505050505050565b6000886001600160a01b031663affed0e06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106239190611d85565b905060006106368a8a8a858b8b8b6113c8565b8051602090910120905063a6f9dae160e01b610652898b611d9e565b6001600160e01b031916146106a95760405162461bcd60e51b815260206004820152601760248201527f73686f756c64206265206368616e6765206f776e65722e000000000000000000604482015260640161048e565b60006106b782856000611529565b6001600160a01b038c811660009081526003602090815260408083208486168452909152902054919250166106eb57600080fd5b60006106f983866001611529565b6001600160a01b038d8116600090815260046020908152604080832084861684529091529020549192501661075e5760405162461bcd60e51b815260206004820152600b60248201526a3737b81039b4b3b732b91960a91b604482015260640161048e565b6001600160a01b038c1660009081526020819052604090205442906107869062093a80611e4c565b106107d35760405162461bcd60e51b815260206004820152600e60248201527f696e636f72726563742074696d65000000000000000000000000000000000000604482015260640161048e565b60008060008e6001600160a01b03166001600160a01b03168152602001908152602001600020819055508b6001600160a01b03166323d43c168d60008e8e8e8e8e8e6040518963ffffffff1660e01b815260040161057f989796959493929190611dce565b6000610849888888888888886113c8565b805190602001209050979650505050505050565b6000886001600160a01b031663affed0e06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561089d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c19190611d85565b905060006108d48a8a8a858b8b8b6113c8565b8051602090910120905063a69df4b560e01b6108f0898b611d9e565b6001600160e01b031916146109475760405162461bcd60e51b815260206004820152601360248201527f73686f756c64206265207468652073616d652100000000000000000000000000604482015260640161048e565b60008a6001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610987573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ab9190611e64565b90506001600160a01b0381166109c057600080fd5b60006109ce83866000611529565b9050816001600160a01b0316816001600160a01b0316146109ee57600080fd5b60006109fc84876001611529565b6001600160a01b038e81166000908152600460209081526040808320848616845290915290205491925016151580610a5a57506001600160a01b038d8116600090815260036020908152604080832085851684529091529020541615155b610a945760405162461bcd60e51b815260206004820152600b60248201526a3737b81039b4b3b732b91960a91b604482015260640161048e565b60008060008f6001600160a01b03166001600160a01b03168152602001908152602001600020819055508c6001600160a01b03166323d43c168e60008f8f8f8f8f8f6040518963ffffffff1660e01b8152600401610af9989796959493929190611dce565b600060405180830381600087803b158015610b1357600080fd5b505af1158015610b27573d6000803e3d6000fd5b5050505050505050505050505050505050565b33610b46818686611781565b610b5181848461187b565b5050505050565b82336001600160a01b03821614610b8257604051632507a10360e21b815260040160405180910390fd5b6001600160a01b03841660009081526001602052604090205460021115610bbc5760405163dfc8891760e01b815260040160405180910390fd5b6000196001600160a01b03831601610be75760405163213cf76760e21b815260040160405180910390fd5b6001600160a01b0384811660009081526003602090815260408083208785168452909152902054811690831614610c315760405163763de2e960e11b815260040160405180910390fd5b506001600160a01b0392831660008181526003602090815260408083209487168352938152838220805495871683528483208054969097166001600160a01b03199687161790965585549094169094558352600190915290208054600019019055565b83336001600160a01b03821614610cbe57604051632507a10360e21b815260040160405180910390fd5b610cc8858461121a565b6001600160a01b0385811660009081526004602090815260408083208885168452909152902054811690831614610d12576040516371331bbf60e11b815260040160405180910390fd5b6000196001600160a01b03831601610d3d576040516337d7d27160e11b815260040160405180910390fd5b506001600160a01b03938416600090815260046020908152604080832093871680845293909152808220805494871680845282842080549689166001600160a01b03199788161790559590961682528120805484169094179093559091528154169055565b81336001600160a01b03821614610dcc57604051632507a10360e21b815260040160405180910390fd5b6001600160a01b0383163314610de157600080fd5b610deb838361121a565b506001600160a01b039182166000818152600460209081526040808320600180855290835281842080549688168086528386208054989099166001600160a01b031998891617909855805490961690961790945591815260029091522080549091019055565b6001600160a01b0381166000908152600160205260408120546060919067ffffffffffffffff811115610e8657610e86611a32565b604051908082528060200260200182016040528015610eaf578160200160208202803683370190505b506001600160a01b038085166000908152600360209081526040808320600184529091528120549293509116905b6001600160a01b038216600114610f465781838281518110610f0157610f01611e81565b6001600160a01b039283166020918202929092018101919091528682166000908152600382526040808220958416825294909152929092205490911690600101610edd565b50909392505050565b6001600160a01b0381166000908152600260205260408120546060919067ffffffffffffffff811115610f8457610f84611a32565b604051908082528060200260200182016040528015610fad578160200160208202803683370190505b506001600160a01b038085166000908152600460209081526040808320600184529091528120549293509116905b6001600160a01b038216600114610f465781838281518110610fff57610fff611e81565b6001600160a01b039283166020918202929092018101919091528682166000908152600482526040808220958416825294909152929092205490911690600101610fdb565b81336001600160a01b0382161461106e57604051632507a10360e21b815260040160405180910390fd5b611078838361121a565b506001600160a01b039182166000818152600360209081526040808320600180855290835281842080549688168086528386208054989099166001600160a01b0319988916179098558054909616909617909455918152908390522080549091019055565b82336001600160a01b0382161461110757604051632507a10360e21b815260040160405180910390fd5b6001600160a01b03841660009081526002602081905260409091205410156111425760405163342a2dc560e21b815260040160405180910390fd5b6000196001600160a01b0383160161116d576040516302f412b360e21b815260040160405180910390fd5b6001600160a01b03848116600090815260046020908152604080832087851684529091529020548116908316146111b75760405163475347b160e11b815260040160405180910390fd5b506001600160a01b0392831660008181526004602090815260408083209487168352938152838220805495871683528483208054969097166001600160a01b03199687161790965585549094169094558352600290915290208054600019019055565b6000826001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561125a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127e9190611e64565b90506001600160a01b0382163b1561131c576040516301ffc9a760e01b8152630b135d3f60e11b60048201526001600160a01b038316906301ffc9a790602401602060405180830381865afa1580156112db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ff9190611e97565b61131c57604051633da224f960e11b815260040160405180910390fd5b6001600160a01b03821615806113435750806001600160a01b0316826001600160a01b0316145b8061137457506001600160a01b03838116600090815260046020908152604080832086851684529091529020541615155b806113a557506001600160a01b03838116600090815260036020908152604080832086851684529091529020541615155b156113c357604051633da224f960e11b815260040160405180910390fd5b505050565b606060007fc40b8dc0d755f1e39d88989f5d7007e3569df60482f4eb6c7eaeb3cbcbf6eab38989896040516113fe929190611eb9565b6040805191829003822060208301949094526001600160a01b039092169181019190915260608101919091526080810187905260a0810186905260c0810185905260e081018490526101000160408051601f1981840301815291905280516020909101209050601960f81b600160f81b6114c860007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b6040517fff000000000000000000000000000000000000000000000000000000000000009384166020820152929091166021830152602282015260428101829052606201604051602081830303815290604052915050979650505050505050565b60008060008061155386866041020160208101516040820151606090920151909260009190911a90565b9194509250905060ff811660000361162b57604051630b135d3f60e11b81529293508392868301602001906001600160a01b03851690631626ba7e9061159f908b908590600401611ec9565b602060405180830381865afa1580156115bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e09190611f26565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916631626ba7e60e01b14611625576040516340aec60f60e11b815260040160405180910390fd5b50611750565b601e8160ff1611156116f0576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101889052600190605c01604051602081830303815290604052805190602001206004836116909190611f50565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa1580156116df573d6000803e3d6000fd5b505050602060405103519350611750565b60408051600081526020810180835289905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015611743573d6000803e3d6000fd5b5050506020604051035193505b6001600160a01b0384166117775760405163b9bf1d7d60e01b815260040160405180910390fd5b5050509392505050565b8060018110156117a457604051630d2aa0bf60e11b815260040160405180910390fd5b600160005b8281101561182d5760008585838181106117c5576117c5611e81565b90506020020160208101906117da9190611bdf565b6001600160a01b03888116600090815260046020908152604080832097841683529690529490942080546001600160a01b031916948216949094179093555081611824878261121a565b506001016117a9565b506001600160a01b03948516600081815260046020908152604080832094909816825292835286812080546001600160a01b0319166001179055908152600290915293909320929092555050565b80600181101561189e576040516354f4eccd60e11b815260040160405180910390fd5b600160005b828110156119275760008585838181106118bf576118bf611e81565b90506020020160208101906118d49190611bdf565b6001600160a01b03888116600090815260036020908152604080832097841683529690529490942080546001600160a01b03191694821694909417909355508161191e878261121a565b506001016118a3565b506001600160a01b03948516600081815260036020908152604080832094909816825292835286812080546001600160a01b0319166001908117909155918152915293909320929092555050565b6001600160a01b038116811461198a57600080fd5b50565b600080600080608085870312156119a357600080fd5b84356119ae81611975565b935060208501356119be81611975565b925060408501356119ce81611975565b915060608501356119de81611975565b939692955090935050565b60008083601f8401126119fb57600080fd5b50813567ffffffffffffffff811115611a1357600080fd5b602083019150836020828501011115611a2b57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060008060e0898b031215611a6457600080fd5b8835611a6f81611975565b9750602089013567ffffffffffffffff80821115611a8c57600080fd5b611a988c838d016119e9565b909950975060408b0135965060608b0135955060808b0135945060a08b01359150611ac282611975565b90925060c08a01359080821115611ad857600080fd5b818b0191508b601f830112611aec57600080fd5b813581811115611afe57611afe611a32565b604051601f8201601f19908116603f01168101908382118183101715611b2657611b26611a32565b816040528281528e6020848701011115611b3f57600080fd5b8260208601602083013760006020848301015280955050505050509295985092959890939650565b600080600080600080600060c0888a031215611b8257600080fd5b8735611b8d81611975565b9650602088013567ffffffffffffffff811115611ba957600080fd5b611bb58a828b016119e9565b989b909a509798604081013598606082013598506080820135975060a09091013595509350505050565b600060208284031215611bf157600080fd5b8135611bfc81611975565b9392505050565b60008083601f840112611c1557600080fd5b50813567ffffffffffffffff811115611c2d57600080fd5b6020830191508360208260051b8501011115611a2b57600080fd5b60008060008060408587031215611c5e57600080fd5b843567ffffffffffffffff80821115611c7657600080fd5b611c8288838901611c03565b90965094506020870135915080821115611c9b57600080fd5b50611ca887828801611c03565b95989497509550505050565b600080600060608486031215611cc957600080fd5b8335611cd481611975565b92506020840135611ce481611975565b91506040840135611cf481611975565b809150509250925092565b60008060408385031215611d1257600080fd5b8235611d1d81611975565b91506020830135611d2d81611975565b809150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611d795783516001600160a01b031683529284019291840191600101611d54565b50909695505050505050565b600060208284031215611d9757600080fd5b5051919050565b6001600160e01b03198135818116916004851015611dc65780818660040360031b1b83161692505b505092915050565b60006001600160a01b03808b16835289602084015260e060408401528760e0840152610100888a828601376000848a01820152606084019790975260808301959095525060a081019290925290911660c0820152601f909201601f1916909101019392505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611e5f57611e5f611e36565b500190565b600060208284031215611e7657600080fd5b8151611bfc81611975565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611ea957600080fd5b81518015158114611bfc57600080fd5b8183823760009101908152919050565b82815260006020604081840152835180604085015260005b81811015611efd57858101830151858201606001528201611ee1565b81811115611f0f576000606083870101525b50601f01601f191692909201606001949350505050565b600060208284031215611f3857600080fd5b81516001600160e01b031981168114611bfc57600080fd5b600060ff821660ff841680821015611f6a57611f6a611e36565b9003939250505056fea2646970667358221220d651386d1b349759345f91aee31631b739855bcf0e482f039be8ffd2ab36cc7564736f6c634300080f0033",
  "devdoc": {
    "details": "Laser module implementation of Smart Social Recovery.",
    "errors": {
      "SSR__removeGuardian__underflow()": [
        {
          "details": "removeGuardian() custom errors."
        }
      ],
      "SSR__removeRecoveryOwner__underflow()": [
        {
          "details": "removeRecoveryOwner() custom errors."
        }
      ],
      "SSR__swapGuardian__invalidPrevGuardian()": [
        {
          "details": "swapGuardian() custom errors."
        }
      ],
      "SSR__swapRecoveryOwner__invalidPrevRecoveryOwner()": [
        {
          "details": "swapRecoveryOwner() custom errors."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "getChainId()": {
        "details": "Returns the chain id of this."
      },
      "initSSR(address[],address[])": {
        "details": "Inits the module."
      },
      "lock(address,bytes,uint256,uint256,uint256,address,bytes)": {
        "details": "Locks the target wallet. Can only be called by the recovery owner + guardian."
      },
      "unlock(address,bytes,uint256,uint256,uint256,address,bytes)": {
        "details": "Unlocks the target wallet."
      }
    },
    "stateVariables": {
      "pointer": {
        "details": "pointer to create a mapping link list."
      },
      "timeLock": {
        "details": "timeLock keeps track of the recovery time delay. It gets set to 'block.timestamp' when 'lock' is triggered."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "initSSR(address[],address[])": {
        "notice": "The target wallet is the 'msg.sender'."
      },
      "unlock(address,bytes,uint256,uint256,uint256,address,bytes)": {
        "notice": "Can only be called with the signature of the wallet's owner + recovery owner or  owner + guardian."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1391,
        "contract": "contracts/modules/laser-modules/LaserModuleSSR.sol:LaserModuleSSR",
        "label": "timeLock",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1395,
        "contract": "contracts/modules/laser-modules/LaserModuleSSR.sol:LaserModuleSSR",
        "label": "recoveryOwnerCount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1399,
        "contract": "contracts/modules/laser-modules/LaserModuleSSR.sol:LaserModuleSSR",
        "label": "guardianCount",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1405,
        "contract": "contracts/modules/laser-modules/LaserModuleSSR.sol:LaserModuleSSR",
        "label": "recoveryOwners",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_address,t_address))"
      },
      {
        "astId": 1411,
        "contract": "contracts/modules/laser-modules/LaserModuleSSR.sol:LaserModuleSSR",
        "label": "guardians",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_address))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_mapping(t_address,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_address)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}