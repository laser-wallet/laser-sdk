{
  "language": "Solidity",
  "sources": {
    "contracts/helper/LaserHelper.sol": {
      "content": "// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.16;\n\n/**\n * @title LaserHelper\n *\n * @notice Allows to batch multiple requests in a single rpc call.\n */\ncontract LaserHelper {\n    function getRequests(bytes[] calldata payload, address[] calldata _to) external view returns (bytes[] memory) {\n        require(payload.length == _to.length, \"Invalid request\");\n\n        bytes[] memory results = new bytes[](payload.length);\n\n        for (uint256 i = 0; i < payload.length; i++) {\n            address to = _to[i];\n\n            bytes calldata callData = payload[i];\n\n            (, bytes memory result) = to.staticcall(callData);\n\n            results[i] = result;\n        }\n\n        return results;\n    }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 800
    },
    "outputSelection": {
      "*": {
        "*": [
          "storageLayout",
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}