{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [],
      "name": "SSR__initGuardians__underflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__initRecoveryOwners__underflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__onlyWallet__notWallet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__removeGuardian__incorrectPreviousGuardian",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__removeGuardian__invalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__removeGuardian__underflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__removeRecoveryOwner__incorrectPreviousRecoveryOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__removeRecoveryOwner__invalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__removeRecoveryOwner__underflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__swapGuardian__invalidOldGuardian",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__swapGuardian__invalidPrevGuardian",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__swapRecoveryOwner__invalidOldRecoveryOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__swapRecoveryOwner__invalidPrevRecoveryOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SSR__verifyNewRecoveryOwnerOrGuardian__invalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Utils__returnSigner__invalidContractSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Utils__returnSigner__invalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newGuardian",
          "type": "address"
        }
      ],
      "name": "addGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newRecoveryOwner",
          "type": "address"
        }
      ],
      "name": "addRecoveryOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "getGuardians",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "getRecoveryOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_guardians",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_recoveryOwners",
          "type": "address[]"
        }
      ],
      "name": "initSSR",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "maxFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPriorityFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "signatures",
          "type": "bytes"
        }
      ],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPriorityFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        }
      ],
      "name": "operationHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "prevGuardian",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardianToRemove",
          "type": "address"
        }
      ],
      "name": "removeGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "prevRecoveryOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recoveryOwnerToRemove",
          "type": "address"
        }
      ],
      "name": "removeRecoveryOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "prevGuardian",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newGuardian",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oldGuardian",
          "type": "address"
        }
      ],
      "name": "swapGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "prevRecoveryOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newRecoveryOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oldRecoveryOwner",
          "type": "address"
        }
      ],
      "name": "swapRecoveryOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "maxFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPriorityFeePerGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "signatures",
          "type": "bytes"
        }
      ],
      "name": "unlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x67d9f14f5e5703b24d645f273da078bb8ace67902af47767c7f4bfea6e2e8c04",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "1594581",
    "logsBloom": "0x
    "blockHash": "0x0765ad99810f7924c0626e8018cff38a36863f1d6c714829a48a797d0f2e7d6f",
    "transactionHash": "0x67d9f14f5e5703b24d645f273da078bb8ace67902af47767c7f4bfea6e2e8c04",
    "logs": [],
    "blockNumber": 3,
    "cumulativeGasUsed": "1594581",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "2a6932cf7708e425509166f61ef1b688",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SSR__initGuardians__underflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__initRecoveryOwners__underflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__onlyWallet__notWallet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__removeGuardian__incorrectPreviousGuardian\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__removeGuardian__invalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__removeGuardian__underflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__removeRecoveryOwner__incorrectPreviousRecoveryOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__removeRecoveryOwner__invalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__removeRecoveryOwner__underflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__swapGuardian__invalidOldGuardian\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__swapGuardian__invalidPrevGuardian\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__swapRecoveryOwner__invalidOldRecoveryOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__swapRecoveryOwner__invalidPrevRecoveryOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SSR__verifyNewRecoveryOwnerOrGuardian__invalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Utils__returnSigner__invalidContractSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Utils__returnSigner__invalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newGuardian\",\"type\":\"address\"}],\"name\":\"addGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newRecoveryOwner\",\"type\":\"address\"}],\"name\":\"addRecoveryOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getGuardians\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getRecoveryOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_guardians\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_recoveryOwners\",\"type\":\"address[]\"}],\"name\":\"initSSR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"operationHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"prevGuardian\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardianToRemove\",\"type\":\"address\"}],\"name\":\"removeGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"prevRecoveryOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recoveryOwnerToRemove\",\"type\":\"address\"}],\"name\":\"removeRecoveryOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"prevGuardian\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newGuardian\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oldGuardian\",\"type\":\"address\"}],\"name\":\"swapGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"prevRecoveryOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newRecoveryOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oldRecoveryOwner\",\"type\":\"address\"}],\"name\":\"swapRecoveryOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of Smart Social Recovery.\",\"errors\":{\"SSR__removeGuardian__underflow()\":[{\"details\":\"removeGuardian() custom errors.\"}],\"SSR__removeRecoveryOwner__underflow()\":[{\"details\":\"removeRecoveryOwner() custom errors.\"}],\"SSR__swapGuardian__invalidPrevGuardian()\":[{\"details\":\"swapGuardian() custom errors.\"}],\"SSR__swapRecoveryOwner__invalidPrevRecoveryOwner()\":[{\"details\":\"swapRecoveryOwner() custom errors.\"}]},\"kind\":\"dev\",\"methods\":{\"getChainId()\":{\"returns\":{\"chainId\":\"The chain id of this.\"}},\"initSSR(address[],address[])\":{\"details\":\"Inits the module.\"},\"lock(address,bytes,uint256,uint256,uint256,address,bytes)\":{\"details\":\"Locks the target wallet. Can only be called by the recovery owner + guardian.\"},\"unlock(address,bytes,uint256,uint256,uint256,address,bytes)\":{\"details\":\"Unlocks the target wallet.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"unlock(address,bytes,uint256,uint256,uint256,address,bytes)\":{\"notice\":\"Can only be called with the signature of the wallet's owner + a guardian.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/laser-modules/LaserModuleSSR.sol\":\"LaserModuleSSR\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/common/Common.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\ncontract Common {\\n    string public constant VERSION = \\\"1.0.0\\\";\\n\\n    bytes32 private constant DOMAIN_SEPARATOR_TYPEHASH =\\n        keccak256(\\\"EIP712Domain(uint256 chainId,address verifyingContract)\\\");\\n\\n    bytes32 private constant LASER_TYPE_STRUCTURE =\\n        keccak256(\\n            \\\"LaserOperation(address to,uint256 value,bytes callData,uint256 nonce,uint256 maxFeePerGas,uint256 maxPriorityFeePerGas,uint256 gasLimit)\\\"\\n        );\\n\\n    /**\\n     * @return chainId The chain id of this.\\n     */\\n    function getChainId() public view returns (uint256 chainId) {\\n        return block.chainid;\\n    }\\n\\n    function domainSeparator() public view returns (bytes32) {\\n        return keccak256(abi.encode(DOMAIN_SEPARATOR_TYPEHASH, getChainId(), address(this)));\\n    }\\n\\n    function encodeOperation(\\n        address to,\\n        uint256 value,\\n        bytes calldata callData,\\n        uint256 _nonce,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit\\n    ) internal view returns (bytes memory) {\\n        bytes32 opHash = keccak256(\\n            abi.encode(\\n                LASER_TYPE_STRUCTURE,\\n                to,\\n                value,\\n                keccak256(callData),\\n                _nonce,\\n                maxFeePerGas,\\n                maxPriorityFeePerGas,\\n                gasLimit\\n            )\\n        );\\n\\n        return abi.encodePacked(bytes1(0x19), bytes1(0x01), domainSeparator(), opHash);\\n    }\\n\\n    function operationHash(\\n        address to,\\n        uint256 value,\\n        bytes calldata callData,\\n        uint256 _nonce,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit\\n    ) external view returns (bytes32) {\\n        return keccak256(encodeOperation(to, value, callData, _nonce, maxFeePerGas, maxPriorityFeePerGas, gasLimit));\\n    }\\n}\\n\",\"keccak256\":\"0xc8c8ee456635b122dee1444253a692091b263579d4ae3a1ed2c22155fa3d4bb6\",\"license\":\"LGPL-3.0-only\"},\"contracts/common/Utils.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\nimport \\\"../interfaces/IEIP1271.sol\\\";\\n\\n/**\\n * @title Utils - Helper functions for Laser wallet and modules.\\n */\\nlibrary Utils {\\n    error Utils__returnSigner__invalidSignature();\\n    error Utils__returnSigner__invalidContractSignature();\\n\\n    /**\\n     * @dev Returns the signer of the hash.\\n     * @param signedHash The hash that was signed.\\n     */\\n    function returnSigner(\\n        bytes32 signedHash,\\n        bytes memory signatures,\\n        uint256 pos\\n    ) internal view returns (address signer) {\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        (r, s, v) = splitSigs(signatures, pos);\\n\\n        if (v == 0) {\\n            // If v is 0, then it is a contract signature.\\n            // The address of the contract is encoded into r.\\n            signer = address(uint160(uint256(r)));\\n\\n            // The signature(s) of the EOA's that control the target contract.\\n            bytes memory contractSignature;\\n\\n            assembly {\\n                contractSignature := add(add(signatures, s), 0x20)\\n            }\\n\\n            if (IEIP1271(signer).isValidSignature(signedHash, contractSignature) != 0x1626ba7e) {\\n                revert Utils__returnSigner__invalidContractSignature();\\n            }\\n        } else if (v > 30) {\\n            signer = ecrecover(\\n                keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", signedHash)),\\n                v - 4,\\n                r,\\n                s\\n            );\\n        } else {\\n            signer = ecrecover(signedHash, v, r, s);\\n        }\\n\\n        if (signer == address(0)) revert Utils__returnSigner__invalidSignature();\\n    }\\n\\n    /**\\n     * @dev Returns the r, s and v of the signature.\\n     * @param signatures Signature.\\n     * @param pos Which signature to read.\\n     */\\n    function splitSigs(bytes memory signatures, uint256 pos)\\n        internal\\n        pure\\n        returns (\\n            bytes32 r,\\n            bytes32 s,\\n            uint8 v\\n        )\\n    {\\n        assembly {\\n            let sigPos := mul(0x41, pos)\\n            r := mload(add(signatures, add(sigPos, 0x20)))\\n            s := mload(add(signatures, add(sigPos, 0x40)))\\n            v := byte(0, mload(add(signatures, add(sigPos, 0x60))))\\n        }\\n    }\\n\\n    /**\\n     * @dev Calls a target address, sends value and / or data payload.\\n     * @param to Destination address.\\n     * @param value Amount to send in ETH.\\n     * @param data Data payload.\\n     * @param txGas Amount of gas to forward.\\n     */\\n    function call(\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        uint256 txGas\\n    ) internal returns (bool success) {\\n        assembly {\\n            // We execute a call to the target address and return a boolean (success, false).\\n            success := call(txGas, to, value, add(data, 0x20), mload(data), 0, 0)\\n        }\\n    }\\n\\n    /**\\n     * @dev Calculates the gas price.\\n     */\\n    function calculateGasPrice(uint256 maxFeePerGas, uint256 gasPrice) internal pure returns (uint256) {\\n        return min(maxFeePerGas, gasPrice);\\n    }\\n\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n}\\n\",\"keccak256\":\"0x80e6448e29042705fea1f7935a328703933817885bbf3e2e3d9b79703c6aaf1e\",\"license\":\"LGPL-3.0-only\"},\"contracts/interfaces/IEIP1271.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\n/**\\n * @title IEIP1271\\n * @notice Interface to call external contracts to validate signature.\\n */\\ninterface IEIP1271 {\\n    /**\\n     * @dev Implementation of EIP 1271: https://eips.ethereum.org/EIPS/eip-1271.\\n     * @param hash Hash of a message signed on behalf of address(this).\\n     * @param signature Signature byte array associated with _msgHash.\\n     * @return Magic value  or reverts with an error message.\\n     */\\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4);\\n}\\n\",\"keccak256\":\"0xfcc98243eaf0e10b323a21e6aca691efec6f128e938f24e495e71cd47c421505\",\"license\":\"LGPL-3.0-only\"},\"contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.15;\\n\\n/**\\n * @title IERC165\\n * @notice Support of ERC165.\\n */\\ninterface IERC165 {\\n    /**\\n     * @notice Query if a contract implements an interface\\n     * @param interfaceID The interface identifier, as specified in ERC-165\\n     * @dev Interface identification is specified in ERC-165. This function\\n     * uses less than 30,000 gas.\\n     * @return `true` if the contract implements `interfaceID` and\\n     * interfaceID` is not 0xffffffff, `false` otherwise\\n     */\\n    function supportsInterface(bytes4 interfaceID) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xdf3ddac29884e2c1f2d2fd322bacd6a6907721d3e0909af74cdedeac5c38a9f4\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ILaserModuleSSR.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\ninterface ILaserModuleSSR {\\n    error SSR__onlyWallet__notWallet();\\n    \\n    error SSR__initGuardians__underflow();\\n\\n    error SSR__initRecoveryOwners__underflow();\\n\\n    error SSR__verifyNewRecoveryOwnerOrGuardian__invalidAddress();\\n\\n    ///@dev removeGuardian() custom errors.\\n    error SSR__removeGuardian__underflow();\\n    error SSR__removeGuardian__invalidAddress();\\n    error SSR__removeGuardian__incorrectPreviousGuardian();\\n\\n    ///@dev removeRecoveryOwner() custom errors.\\n    error SSR__removeRecoveryOwner__underflow();\\n    error SSR__removeRecoveryOwner__invalidAddress();\\n    error SSR__removeRecoveryOwner__incorrectPreviousRecoveryOwner();\\n\\n    ///@dev swapGuardian() custom errors.\\n    error SSR__swapGuardian__invalidPrevGuardian();\\n    error SSR__swapGuardian__invalidOldGuardian();\\n\\n    ///@dev swapRecoveryOwner() custom errors.\\n    error SSR__swapRecoveryOwner__invalidPrevRecoveryOwner();\\n    error SSR__swapRecoveryOwner__invalidOldRecoveryOwner();\\n}\\n\",\"keccak256\":\"0x2087a9ff3345c1da8094c8ecfb114b76ae761a215b701b8645dff4c42461a12c\",\"license\":\"LGPL-3.0-only\"},\"contracts/modules/laser-modules/LaserModuleSSR.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity 0.8.15;\\n\\nimport \\\"../../common/Common.sol\\\";\\nimport \\\"../../common/Utils.sol\\\";\\nimport \\\"../../interfaces/ILaserModuleSSR.sol\\\";\\n\\ninterface ILaser {\\n    function nonce() external view returns (uint256);\\n\\n    function owner() external view returns (address);\\n\\n    function execFromModule(\\n        address to,\\n        uint256 value,\\n        bytes calldata callData,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit,\\n        address relayer\\n    ) external;\\n}\\n\\n/**\\n * @dev Implementation of Smart Social Recovery.\\n */\\ncontract LaserModuleSSR is ILaserModuleSSR, Common {\\n    address internal constant pointer = address(0x1);\\n\\n    mapping(address => uint256) internal recoveryOwnerCount;\\n    mapping(address => uint256) internal guardianCount;\\n    mapping(address => mapping(address => address)) internal recoveryOwners;\\n    mapping(address => mapping(address => address)) internal guardians;\\n\\n    modifier onlyWallet(address wallet) {\\n        if (msg.sender != wallet) revert SSR__onlyWallet__notWallet();\\n\\n        _;\\n    }\\n\\n    /**\\n     * @dev Inits the module.\\n     */\\n    function initSSR(address[] calldata _guardians, address[] calldata _recoveryOwners) external {\\n        address wallet = msg.sender;\\n\\n        initGuardians(wallet, _guardians);\\n        initRecoveryOwners(wallet, _recoveryOwners);\\n    }\\n\\n    /**\\n     * @dev Locks the target wallet.\\n     * Can only be called by the recovery owner + guardian.\\n     */\\n    function lock(\\n        address wallet,\\n        bytes calldata callData,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit,\\n        address relayer,\\n        bytes memory signatures\\n    ) external {\\n        uint256 walletNonce = ILaser(wallet).nonce();\\n        bytes32 signedHash = keccak256(\\n            encodeOperation(wallet, 0, callData, walletNonce + 1, maxFeePerGas, maxPriorityFeePerGas, gasLimit)\\n        );\\n\\n        address signer1 = Utils.returnSigner(signedHash, signatures, 0);\\n        require(recoveryOwners[wallet][signer1] != address(0));\\n\\n        address signer2 = Utils.returnSigner(signedHash, signatures, 1);\\n        require(guardians[wallet][signer2] != address(0));\\n\\n        ///@todo Require calldata == lock\\n        ILaser(wallet).execFromModule(wallet, 0, callData, maxFeePerGas, maxPriorityFeePerGas, gasLimit, relayer);\\n    }\\n\\n    /**\\n     * @dev Unlocks the target wallet.\\n     * @notice Can only be called with the signature of the wallet's owner + a guardian.\\n     */\\n    function unlock(\\n        address wallet,\\n        bytes calldata callData,\\n        uint256 maxFeePerGas,\\n        uint256 maxPriorityFeePerGas,\\n        uint256 gasLimit,\\n        address relayer,\\n        bytes memory signatures\\n    ) external {\\n        require(msg.sender == wallet);\\n        uint256 walletNonce = ILaser(wallet).nonce();\\n        bytes32 signedHash = keccak256(\\n            encodeOperation(wallet, 0, callData, walletNonce + 1, maxFeePerGas, maxPriorityFeePerGas, gasLimit)\\n        );\\n\\n        ///@todo Require calldata == unlock\\n        address walletOwner = ILaser(wallet).owner();\\n        require(walletOwner != address(0));\\n\\n        address signer1 = Utils.returnSigner(signedHash, signatures, 0);\\n        require(signer1 == walletOwner);\\n\\n        address signer2 = Utils.returnSigner(signedHash, signatures, 1);\\n        require(guardians[wallet][signer2] != address(0));\\n\\n        ILaser(wallet).execFromModule(wallet, 0, callData, maxFeePerGas, maxPriorityFeePerGas, gasLimit, relayer);\\n    }\\n\\n    function addGuardian(address wallet, address newGuardian) external onlyWallet(wallet) {\\n        require(wallet == msg.sender);\\n        verifyNewRecoveryOwnerOrGuardian(wallet, newGuardian);\\n        guardians[wallet][newGuardian] = guardians[wallet][pointer];\\n        guardians[wallet][pointer] = newGuardian;\\n\\n        unchecked {\\n            guardianCount[wallet]++;\\n        }\\n    }\\n\\n    function removeGuardian(\\n        address wallet,\\n        address prevGuardian,\\n        address guardianToRemove\\n    ) external onlyWallet(wallet) {\\n        // There needs to be at least 1 guardian.\\n        if (guardianCount[wallet] < 2) revert SSR__removeGuardian__underflow();\\n\\n        if (guardianToRemove == pointer) revert SSR__removeGuardian__invalidAddress();\\n\\n        if (guardians[wallet][prevGuardian] != guardianToRemove)\\n            revert SSR__removeGuardian__incorrectPreviousGuardian();\\n\\n        guardians[wallet][prevGuardian] = guardians[wallet][guardianToRemove];\\n        guardians[wallet][guardianToRemove] = address(0);\\n\\n        unchecked {\\n            // Can't underflow, there needs to be more than 2 guardians to reach here.\\n            guardianCount[wallet]--;\\n        }\\n    }\\n\\n    function swapGuardian(\\n        address wallet,\\n        address prevGuardian,\\n        address newGuardian,\\n        address oldGuardian\\n    ) external onlyWallet(wallet) {\\n        verifyNewRecoveryOwnerOrGuardian(wallet, newGuardian);\\n\\n        if (guardians[wallet][prevGuardian] != oldGuardian) revert SSR__swapGuardian__invalidPrevGuardian();\\n\\n        if (oldGuardian == pointer) revert SSR__swapGuardian__invalidOldGuardian();\\n\\n        guardians[wallet][newGuardian] = guardians[wallet][oldGuardian];\\n        guardians[wallet][prevGuardian] = newGuardian;\\n        guardians[wallet][oldGuardian] = address(0);\\n    }\\n\\n    function addRecoveryOwner(address wallet, address newRecoveryOwner) external onlyWallet(wallet) {\\n        verifyNewRecoveryOwnerOrGuardian(wallet, newRecoveryOwner);\\n        recoveryOwners[wallet][newRecoveryOwner] = recoveryOwners[wallet][pointer];\\n        recoveryOwners[wallet][pointer] = newRecoveryOwner;\\n\\n        unchecked {\\n            recoveryOwnerCount[wallet]++;\\n        }\\n    }\\n\\n    function removeRecoveryOwner(\\n        address wallet,\\n        address prevRecoveryOwner,\\n        address recoveryOwnerToRemove\\n    ) external onlyWallet(wallet) {\\n        // There needs to be at least 1 recovery owner.\\n        if (recoveryOwnerCount[wallet] < 2) revert SSR__removeRecoveryOwner__underflow();\\n\\n        if (recoveryOwnerToRemove == pointer) revert SSR__removeRecoveryOwner__invalidAddress();\\n\\n        if (recoveryOwners[wallet][prevRecoveryOwner] != recoveryOwnerToRemove) {\\n            revert SSR__removeRecoveryOwner__incorrectPreviousRecoveryOwner();\\n        }\\n\\n        recoveryOwners[wallet][prevRecoveryOwner] = recoveryOwners[wallet][recoveryOwnerToRemove];\\n        recoveryOwners[wallet][recoveryOwnerToRemove] = address(0);\\n\\n        unchecked {\\n            // Can't underflow, there needs to be more than 2 guardians to reach here.\\n            recoveryOwnerCount[wallet]--;\\n        }\\n    }\\n\\n    function swapRecoveryOwner(\\n        address wallet,\\n        address prevRecoveryOwner,\\n        address newRecoveryOwner,\\n        address oldRecoveryOwner\\n    ) external onlyWallet(wallet) {\\n        verifyNewRecoveryOwnerOrGuardian(wallet, newRecoveryOwner);\\n        if (recoveryOwners[wallet][prevRecoveryOwner] != oldRecoveryOwner) {\\n            revert SSR__swapRecoveryOwner__invalidPrevRecoveryOwner();\\n        }\\n\\n        if (oldRecoveryOwner == pointer) revert SSR__swapRecoveryOwner__invalidOldRecoveryOwner();\\n\\n        recoveryOwners[wallet][newRecoveryOwner] = recoveryOwners[wallet][oldRecoveryOwner];\\n        recoveryOwners[wallet][prevRecoveryOwner] = newRecoveryOwner;\\n        recoveryOwners[wallet][oldRecoveryOwner] = address(0);\\n    }\\n\\n    function getGuardians(address wallet) external view returns (address[] memory) {\\n        address[] memory guardiansArray = new address[](guardianCount[wallet]);\\n        address currentGuardian = guardians[wallet][pointer];\\n\\n        uint256 index;\\n        while (currentGuardian != pointer) {\\n            guardiansArray[index] = currentGuardian;\\n            currentGuardian = guardians[wallet][currentGuardian];\\n            unchecked {\\n                ++index;\\n            }\\n        }\\n        return guardiansArray;\\n    }\\n\\n    function getRecoveryOwners(address wallet) external view returns (address[] memory) {\\n        address[] memory recoveryOwnersArray = new address[](recoveryOwnerCount[wallet]);\\n\\n        address currentRecoveryOwner = recoveryOwners[wallet][pointer];\\n\\n        uint256 index;\\n        while (currentRecoveryOwner != pointer) {\\n            recoveryOwnersArray[index] = currentRecoveryOwner;\\n            currentRecoveryOwner = recoveryOwners[wallet][currentRecoveryOwner];\\n            unchecked {\\n                ++index;\\n            }\\n        }\\n        return recoveryOwnersArray;\\n    }\\n\\n    function initGuardians(address wallet, address[] calldata _guardians) internal {\\n        uint256 guardiansLength = _guardians.length;\\n\\n        if (guardiansLength < 1) revert SSR__initGuardians__underflow();\\n\\n        address currentGuardian = pointer;\\n\\n        for (uint256 i = 0; i < guardiansLength; ) {\\n            address guardian = _guardians[i];\\n\\n            guardians[wallet][currentGuardian] = guardian;\\n            currentGuardian = guardian;\\n\\n            verifyNewRecoveryOwnerOrGuardian(wallet, guardian);\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        guardians[wallet][currentGuardian] = pointer;\\n        guardianCount[wallet] = guardiansLength;\\n    }\\n\\n    function initRecoveryOwners(address wallet, address[] calldata _recoveryOwners) internal {\\n        uint256 recoveryOwnersLength = _recoveryOwners.length;\\n\\n        if (recoveryOwnersLength < 1) revert SSR__initRecoveryOwners__underflow();\\n\\n        address currentRecoveryOwner = pointer;\\n\\n        for (uint256 i = 0; i < recoveryOwnersLength; ) {\\n            address recoveryOwner = _recoveryOwners[i];\\n\\n            recoveryOwners[wallet][currentRecoveryOwner] = recoveryOwner;\\n            currentRecoveryOwner = recoveryOwner;\\n\\n            verifyNewRecoveryOwnerOrGuardian(wallet, recoveryOwner);\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        recoveryOwners[wallet][currentRecoveryOwner] = pointer;\\n        recoveryOwnerCount[wallet] = recoveryOwnersLength;\\n    }\\n\\n    function verifyNewRecoveryOwnerOrGuardian(address wallet, address toVerify) internal view {\\n        address owner = ILaser(wallet).owner();\\n\\n        if (toVerify.code.length > 0) {\\n            // If the recovery owner is a smart contract wallet, it needs to support EIP1271.\\n            if (!IERC165(toVerify).supportsInterface(0x1626ba7e)) {\\n                revert SSR__verifyNewRecoveryOwnerOrGuardian__invalidAddress();\\n            }\\n        }\\n        if (\\n            toVerify == address(0) ||\\n            toVerify == owner ||\\n            guardians[wallet][toVerify] != address(0) ||\\n            recoveryOwners[wallet][toVerify] != address(0)\\n        ) revert SSR__verifyNewRecoveryOwnerOrGuardian__invalidAddress();\\n    }\\n}\\n\",\"keccak256\":\"0x1630480db4bbb0f0cab88ddba9172a5dde0c300eea7298b7206e623ca8bcbcf4\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a60bd64911610097578063f612c55411610066578063f612c554146101dc578063f698da25146101ef578063fc19336814610249578063ffa1ad741461025c57600080fd5b8063a60bd64914610183578063c684521014610196578063e5017d7c146101a9578063f18858ab146101c957600080fd5b80633c9735ca116100d35780633c9735ca1461013757806353185ea31461014a5780635ceb579b1461015d578063670d046e1461017057600080fd5b8063201573be146100fa57806327d865111461010f5780633408e47014610122575b600080fd5b61010d6101083660046115b8565b6102a5565b005b61010d61011d366004611673565b6103b3565b465b6040519081526020015b60405180910390f35b61010d610145366004611673565b61053d565b61010d6101583660046117d7565b61073a565b61010d61016b366004611843565b610758565b61012461017e36600461188e565b610893565b61010d6101913660046115b8565b6108ba565b61010d6101a436600461190d565b6109c8565b6101bc6101b7366004611946565b610a76565b60405161012e919061196a565b6101bc6101d7366004611946565b610b74565b61010d6101ea36600461190d565b610c69565b61012460007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b61010d610257366004611843565b610d02565b6102986040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b60405161012e9190611a04565b83336001600160a01b038216146102cf57604051632507a10360e21b815260040160405180910390fd5b6102d98584610e3e565b6001600160a01b038581166000908152600260209081526040808320888516845290915290205481169083161461032357604051632e3f629360e01b815260040160405180910390fd5b6000196001600160a01b0383160161034e57604051631e07136760e11b815260040160405180910390fd5b506001600160a01b03938416600090815260026020908152604080832093871680845293909152808220805494871680845282842080549689166001600160a01b03199788161790559590961682528120805484169094179093559091528154169055565b6000886001600160a01b031663affed0e06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104179190611a17565b905060006104358a828b8b61042d876001611a46565b8c8c8c610fec565b805190602001209050600061044c82856000611155565b6001600160a01b038c8116600090815260026020908152604080832084861684529091529020549192501661048057600080fd5b600061048e83866001611155565b6001600160a01b038d811660009081526003602090815260408083208486168452909152902054919250166104c257600080fd5b8b6001600160a01b03166323d43c168d60008e8e8e8e8e8e6040518963ffffffff1660e01b81526004016104fd989796959493929190611a5e565b600060405180830381600087803b15801561051757600080fd5b505af115801561052b573d6000803e3d6000fd5b50505050505050505050505050505050565b336001600160a01b0389161461055257600080fd5b6000886001600160a01b031663affed0e06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610592573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b69190611a17565b905060006105cc8a828b8b61042d876001611a46565b80519060200120905060008a6001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106399190611ac6565b90506001600160a01b03811661064e57600080fd5b600061065c83866000611155565b9050816001600160a01b0316816001600160a01b03161461067c57600080fd5b600061068a84876001611155565b6001600160a01b038e811660009081526003602090815260408083208486168452909152902054919250166106be57600080fd5b8c6001600160a01b03166323d43c168e60008f8f8f8f8f8f6040518963ffffffff1660e01b81526004016106f9989796959493929190611a5e565b600060405180830381600087803b15801561071357600080fd5b505af1158015610727573d6000803e3d6000fd5b5050505050505050505050505050505050565b336107468186866113ad565b6107518184846114a7565b5050505050565b82336001600160a01b0382161461078257604051632507a10360e21b815260040160405180910390fd5b6001600160a01b038416600090815260208190526040902054600211156107bc5760405163dfc8891760e01b815260040160405180910390fd5b6000196001600160a01b038316016107e75760405163213cf76760e21b815260040160405180910390fd5b6001600160a01b03848116600090815260026020908152604080832087851684529091529020548116908316146108315760405163763de2e960e11b815260040160405180910390fd5b506001600160a01b0392831660008181526002602090815260408083209487168352938152838220805495871683528483208054969097166001600160a01b031996871617909655855490941690945583529082905290208054600019019055565b60006108a58989898989898989610fec565b80519060200120905098975050505050505050565b83336001600160a01b038216146108e457604051632507a10360e21b815260040160405180910390fd5b6108ee8584610e3e565b6001600160a01b0385811660009081526003602090815260408083208885168452909152902054811690831614610938576040516371331bbf60e11b815260040160405180910390fd5b6000196001600160a01b03831601610963576040516337d7d27160e11b815260040160405180910390fd5b506001600160a01b03938416600090815260036020908152604080832093871680845293909152808220805494871680845282842080549689166001600160a01b03199788161790559590961682528120805484169094179093559091528154169055565b81336001600160a01b038216146109f257604051632507a10360e21b815260040160405180910390fd5b6001600160a01b0383163314610a0757600080fd5b610a118383610e3e565b506001600160a01b039182166000818152600360209081526040808320600180855290835281842080549688168086528386208054989099166001600160a01b0319988916179098558054909616909617909455918152908390522080549091019055565b6001600160a01b0381166000908152602081905260408120546060919067ffffffffffffffff811115610aab57610aab61165d565b604051908082528060200260200182016040528015610ad4578160200160208202803683370190505b506001600160a01b038085166000908152600260209081526040808320600184529091528120549293509116905b6001600160a01b038216600114610b6b5781838281518110610b2657610b26611ae3565b6001600160a01b039283166020918202929092018101919091528682166000908152600282526040808220958416825294909152929092205490911690600101610b02565b50909392505050565b6001600160a01b0381166000908152600160205260408120546060919067ffffffffffffffff811115610ba957610ba961165d565b604051908082528060200260200182016040528015610bd2578160200160208202803683370190505b506001600160a01b038085166000908152600360209081526040808320600184529091528120549293509116905b6001600160a01b038216600114610b6b5781838281518110610c2457610c24611ae3565b6001600160a01b039283166020918202929092018101919091528682166000908152600382526040808220958416825294909152929092205490911690600101610c00565b81336001600160a01b03821614610c9357604051632507a10360e21b815260040160405180910390fd5b610c9d8383610e3e565b506001600160a01b039182166000818152600260209081526040808320600180855290835281842080549688168086528386208054989099166001600160a01b0319988916179098558054909616909617909455918152908190522080549091019055565b82336001600160a01b03821614610d2c57604051632507a10360e21b815260040160405180910390fd5b6001600160a01b03841660009081526001602052604090205460021115610d665760405163342a2dc560e21b815260040160405180910390fd5b6000196001600160a01b03831601610d91576040516302f412b360e21b815260040160405180910390fd5b6001600160a01b0384811660009081526003602090815260408083208785168452909152902054811690831614610ddb5760405163475347b160e11b815260040160405180910390fd5b506001600160a01b0392831660008181526003602090815260408083209487168352938152838220805495871683528483208054969097166001600160a01b03199687161790965585549094169094558352600190915290208054600019019055565b6000826001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea29190611ac6565b90506001600160a01b0382163b15610f40576040516301ffc9a760e01b8152630b135d3f60e11b60048201526001600160a01b038316906301ffc9a790602401602060405180830381865afa158015610eff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f239190611af9565b610f4057604051633da224f960e11b815260040160405180910390fd5b6001600160a01b0382161580610f675750806001600160a01b0316826001600160a01b0316145b80610f9857506001600160a01b03838116600090815260036020908152604080832086851684529091529020541615155b80610fc957506001600160a01b03838116600090815260026020908152604080832086851684529091529020541615155b15610fe757604051633da224f960e11b815260040160405180910390fd5b505050565b606060007f4c23aa2497696888af245e4eb8d524e7d4cc862b760e1c988678274066ffff8b8a8a8a8a604051611023929190611b1b565b6040805191829003822060208301959095526001600160a01b03909316928101929092526060820152608081019190915260a0810187905260c0810186905260e0810185905261010081018490526101200160408051601f1981840301815291905280516020909101209050601960f81b600160f81b6110f360007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b6040517fff00000000000000000000000000000000000000000000000000000000000000938416602082015292909116602183015260228201526042810182905260620160405160208183030381529060405291505098975050505050505050565b60008060008061117f86866041020160208101516040820151606090920151909260009190911a90565b9194509250905060ff811660000361125757604051630b135d3f60e11b81529293508392868301602001906001600160a01b03851690631626ba7e906111cb908b908590600401611b2b565b602060405180830381865afa1580156111e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120c9190611b4c565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916631626ba7e60e01b14611251576040516340aec60f60e11b815260040160405180910390fd5b5061137c565b601e8160ff16111561131c576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101889052600190605c01604051602081830303815290604052805190602001206004836112bc9190611b8e565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa15801561130b573d6000803e3d6000fd5b50505060206040510351935061137c565b60408051600081526020810180835289905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa15801561136f573d6000803e3d6000fd5b5050506020604051035193505b6001600160a01b0384166113a35760405163b9bf1d7d60e01b815260040160405180910390fd5b5050509392505050565b8060018110156113d057604051630d2aa0bf60e11b815260040160405180910390fd5b600160005b828110156114595760008585838181106113f1576113f1611ae3565b90506020020160208101906114069190611946565b6001600160a01b03888116600090815260036020908152604080832097841683529690529490942080546001600160a01b0319169482169490941790935550816114508782610e3e565b506001016113d5565b506001600160a01b03948516600081815260036020908152604080832094909816825292835286812080546001600160a01b0319166001908117909155918152915293909320929092555050565b8060018110156114ca576040516354f4eccd60e11b815260040160405180910390fd5b600160005b828110156115535760008585838181106114eb576114eb611ae3565b90506020020160208101906115009190611946565b6001600160a01b03888116600090815260026020908152604080832097841683529690529490942080546001600160a01b03191694821694909417909355508161154a8782610e3e565b506001016114cf565b506001600160a01b03948516600081815260026020908152604080832094909816825292835286812080546001600160a01b03191660011790559081529081905293909320929092555050565b6001600160a01b03811681146115b557600080fd5b50565b600080600080608085870312156115ce57600080fd5b84356115d9816115a0565b935060208501356115e9816115a0565b925060408501356115f9816115a0565b91506060850135611609816115a0565b939692955090935050565b60008083601f84011261162657600080fd5b50813567ffffffffffffffff81111561163e57600080fd5b60208301915083602082850101111561165657600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060008060e0898b03121561168f57600080fd5b883561169a816115a0565b9750602089013567ffffffffffffffff808211156116b757600080fd5b6116c38c838d01611614565b909950975060408b0135965060608b0135955060808b0135945060a08b013591506116ed826115a0565b90925060c08a0135908082111561170357600080fd5b818b0191508b601f83011261171757600080fd5b8135818111156117295761172961165d565b604051601f8201601f19908116603f011681019083821181831017156117515761175161165d565b816040528281528e602084870101111561176a57600080fd5b8260208601602083013760006020848301015280955050505050509295985092959890939650565b60008083601f8401126117a457600080fd5b50813567ffffffffffffffff8111156117bc57600080fd5b6020830191508360208260051b850101111561165657600080fd5b600080600080604085870312156117ed57600080fd5b843567ffffffffffffffff8082111561180557600080fd5b61181188838901611792565b9096509450602087013591508082111561182a57600080fd5b5061183787828801611792565b95989497509550505050565b60008060006060848603121561185857600080fd5b8335611863816115a0565b92506020840135611873816115a0565b91506040840135611883816115a0565b809150509250925092565b60008060008060008060008060e0898b0312156118aa57600080fd5b88356118b5816115a0565b975060208901359650604089013567ffffffffffffffff8111156118d857600080fd5b6118e48b828c01611614565b999c989b50996060810135986080820135985060a0820135975060c09091013595509350505050565b6000806040838503121561192057600080fd5b823561192b816115a0565b9150602083013561193b816115a0565b809150509250929050565b60006020828403121561195857600080fd5b8135611963816115a0565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156119ab5783516001600160a01b031683529284019291840191600101611986565b50909695505050505050565b6000815180845260005b818110156119dd576020818501810151868301820152016119c1565b818111156119ef576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061196360208301846119b7565b600060208284031215611a2957600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611a5957611a59611a30565b500190565b60006001600160a01b03808b16835289602084015260e060408401528760e0840152610100888a828601376000848a01820152606084019790975260808301959095525060a081019290925290911660c0820152601f909201601f1916909101019392505050565b600060208284031215611ad857600080fd5b8151611963816115a0565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611b0b57600080fd5b8151801515811461196357600080fd5b8183823760009101908152919050565b828152604060208201526000611b4460408301846119b7565b949350505050565b600060208284031215611b5e57600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461196357600080fd5b600060ff821660ff841680821015611ba857611ba8611a30565b9003939250505056fea264697066735822122005cf18f3ecee8475955948ed6c50cd9c929512440007e20b6d7edfef557a657b64736f6c634300080f0033",
  "devdoc": {
    "details": "Implementation of Smart Social Recovery.",
    "errors": {
      "SSR__removeGuardian__underflow()": [
        {
          "details": "removeGuardian() custom errors."
        }
      ],
      "SSR__removeRecoveryOwner__underflow()": [
        {
          "details": "removeRecoveryOwner() custom errors."
        }
      ],
      "SSR__swapGuardian__invalidPrevGuardian()": [
        {
          "details": "swapGuardian() custom errors."
        }
      ],
      "SSR__swapRecoveryOwner__invalidPrevRecoveryOwner()": [
        {
          "details": "swapRecoveryOwner() custom errors."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "getChainId()": {
        "returns": {
          "chainId": "The chain id of this."
        }
      },
      "initSSR(address[],address[])": {
        "details": "Inits the module."
      },
      "lock(address,bytes,uint256,uint256,uint256,address,bytes)": {
        "details": "Locks the target wallet. Can only be called by the recovery owner + guardian."
      },
      "unlock(address,bytes,uint256,uint256,uint256,address,bytes)": {
        "details": "Unlocks the target wallet."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "unlock(address,bytes,uint256,uint256,uint256,address,bytes)": {
        "notice": "Can only be called with the signature of the wallet's owner + a guardian."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1312,
        "contract": "contracts/modules/laser-modules/LaserModuleSSR.sol:LaserModuleSSR",
        "label": "recoveryOwnerCount",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1316,
        "contract": "contracts/modules/laser-modules/LaserModuleSSR.sol:LaserModuleSSR",
        "label": "guardianCount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1322,
        "contract": "contracts/modules/laser-modules/LaserModuleSSR.sol:LaserModuleSSR",
        "label": "recoveryOwners",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_address))"
      },
      {
        "astId": 1328,
        "contract": "contracts/modules/laser-modules/LaserModuleSSR.sol:LaserModuleSSR",
        "label": "guardians",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_address,t_address))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_mapping(t_address,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_address)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}